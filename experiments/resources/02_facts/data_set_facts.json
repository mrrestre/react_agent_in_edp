[
    {
        "id": "EA-1",
        "question": "How can I attach additional files to standard XML in Public Cloud?",
        "answer": "To attach additional files to the standard XML in Public Cloud, you can use the Business Add-In (BAdI) EDOC_ADAPTOR_CLOUD and enhance the XML file generated for an electronic document.\nBy enhancing the XML file, you can include additional information that may be relevant for your business processes .\nTo implement this enhancement, you can follow these steps in ABAP Development Tools (ADT):\n1. In your ABAP project, go to the enhancement spot ES_EDOCUMENT_CLOUD and select 'New BAdI Enhancement Implementation'.\n2. Enter a package, name, and description for the implementation.\n3. Choose 'Add BAdI Implementation' and select EDOC_ADAPTOR_CLOUD .\n4. (Optional) Create a BAdI filter for Country and/or Generic Filter.\n5. Choose 'Implementing Class' to create a new implementation class.\n6. Activate your BAdI implementation .\nOnce you have implemented the BAdI, you can fill the XML tag <BuyersItemIdentification> with the desired additional information.\nThis can be done by reading the relevant data from the source documents and filling the appropriate XML tags.\nPlease note that the specific implementation details may vary depending on your system setup and requirements.\nIt is recommended to refer to the provided sources for more detailed instructions and examples.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can attach additional files to standard XML in Public Cloud by using the Business Add-In (BAdI) EDOC_ADAPTOR_CLOUD.",
                "classification": "direct",
                "id": "EA-1-1"
            },
            {
                "fact": "Enhancing the XML file generated for an electronic document allows inclusion of additional information.",
                "classification": "direct",
                "id": "EA-1-2"
            },
            {
                "fact": "The enhancement is implemented in ABAP Development Tools (ADT) via the enhancement spot ES_EDOCUMENT_CLOUD.",
                "classification": "supporting",
                "id": "EA-1-3"
            },
            {
                "fact": "You need to create a new BAdI Enhancement Implementation in your ABAP project.",
                "classification": "supporting",
                "id": "EA-1-4"
            },
            {
                "fact": "You must select EDOC_ADAPTOR_CLOUD when adding the BAdI Implementation.",
                "classification": "supporting",
                "id": "EA-1-5"
            },
            {
                "fact": "You can optionally create a BAdI filter for Country and/or Generic Filter.",
                "classification": "supporting",
                "id": "EA-1-6"
            },
            {
                "fact": "After implementing the BAdI, you can fill the XML tag <BuyersItemIdentification> with additional information.",
                "classification": "direct",
                "id": "EA-1-7"
            },
            {
                "fact": "Filling the XML tag can be done by reading relevant data from source documents.",
                "classification": "supporting",
                "id": "EA-1-8"
            }
        ]
    },
    {
        "id": "EA-2",
        "question": "For a Greece customer in Public Cloud, what are the steps to enhance the generated XML before sending it to the Tax Authorities using ADT?",
        "answer": "To enhance the generated XML file for a Greece customer in Public Cloud before sending it to the Tax Authorities using ABAP Development Tools (ADT), you can follow these steps:\n1. In your ABAP project, go to the enhancement spot ES_EDOCUMENT_CLOUD (path: package GLO-EDO > Enhancements > Enhancement Spots).\n2. Right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation .\n3. Enter a package, name, and description for the implementation.\n4. Choose Add BAdI Implementation and select EDOC_ADAPTOR_CLOUD.\n5. (Optional) Create a BAdI filter for Country and/or Generic Filter.\n6. Choose Implementing Class to create a new implementation class. The new implementation class automatically implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.7. After generating the class, open the interface method and press F3 to view its parameters. To display the documentation, press F2.\n8. Implement the necessary logic in the method to modify the XML tags and fill optional XML tags with values such as customer material number or delivery number.9. Activate your BAdI implementation.When you display the XML file of the electronic document in the eDocument Cockpit or Manage Electronic Documents app, you will see that the relevant XML tags are now filled with the desired values.Please note that the provided steps are specific to enhancing the XML file for a German customer in Public Cloud using ADT. The exact implementation may vary depending on the specific requirements and configurations of your system.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "GR",
        "facts": [
            {
                "fact": "To enhance the generated XML for a Greece customer in Public Cloud before sending it to the Tax Authorities, you use ABAP Development Tools (ADT).",
                "classification": "direct",
                "id": "EA-2-1"
            },
            {
                "fact": "You should go to the enhancement spot ES_EDOCUMENT_CLOUD in your ABAP project.",
                "classification": "direct",
                "id": "EA-2-2"
            },
            {
                "fact": "You need to create a new BAdI Enhancement Implementation for ES_EDOCUMENT_CLOUD.",
                "classification": "direct",
                "id": "EA-2-3"
            },
            {
                "fact": "You select EDOC_ADAPTOR_CLOUD when adding the BAdI Implementation.",
                "classification": "direct",
                "id": "EA-2-4"
            },
            {
                "fact": "You can optionally create a BAdI filter for Country and/or Generic Filter.",
                "classification": "supporting",
                "id": "EA-2-5"
            },
            {
                "fact": "You create an implementing class that automatically implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.",
                "classification": "supporting",
                "id": "EA-2-6"
            },
            {
                "fact": "You implement logic in the method to modify XML tags and fill optional XML tags with values such as customer material number or delivery number.",
                "classification": "direct",
                "id": "EA-2-7"
            },
            {
                "fact": "You must activate your BAdI implementation after making changes.",
                "classification": "direct",
                "id": "EA-2-8"
            },
            {
                "fact": "After enhancement, the relevant XML tags in the electronic document will be filled with the desired values when viewed in the eDocument Cockpit or Manage Electronic Documents app.",
                "classification": "supporting",
                "id": "EA-2-9"
            }
        ]
    },
    {
        "id": "EA-3",
        "question": "For a Greece customer invoice process in Public Cloud, can I enhance or extend the generated XML before it is sent to the authorities?",
        "answer": "Yes, you can enhance or extend the generated XML before it is sent to the authorities by the use of method SET_OUTPUT_DATA of BAdI EDOC_ADAPTOR_CLOUD.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "GR",
        "facts": [
            {
                "fact": "You can enhance or extend the generated XML before it is sent to the authorities.",
                "classification": "direct",
                "id": "EA-3-1"
            },
            {
                "fact": "Enhancement or extension is possible by using the method SET_OUTPUT_DATA.",
                "classification": "direct",
                "id": "EA-3-2"
            },
            {
                "fact": "The method SET_OUTPUT_DATA belongs to BAdI EDOC_ADAPTOR_CLOUD.",
                "classification": "supporting",
                "id": "EA-3-3"
            }
        ]
    },
    {
        "id": "EA-4",
        "question": "As a Public Cloud customer in Spain, can I extend an existing eDocument customer invoice Process? ",
        "answer": "Yes, as a Public Cloud customer in Spain, you can extend an existing eDocument process according to your business needs. For example: 1. You want to define that for some types of source documents the system doesn't create electronic documents. 2. You want to enhance the standard XML mapping by editing existing fields or adding new ones. ",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "ES",
        "facts": [
            {
                "fact": "A Public Cloud customer in Spain can extend an existing eDocument process.",
                "classification": "direct",
                "id": "EA-4-1"
            },
            {
                "fact": "The extension can be done according to business needs.",
                "classification": "direct",
                "id": "EA-4-2"
            },
            {
                "fact": "It is possible to define that for some types of source documents the system does not create electronic documents.",
                "classification": "supporting",
                "id": "EA-4-3"
            },
            {
                "fact": "It is possible to enhance the standard XML mapping by editing existing fields or adding new ones.",
                "classification": "supporting",
                "id": "EA-4-4"
            }
        ]
    },
    {
        "id": "EA-5",
        "question": "As a Public Cloud customer in Italy, can I extend an existing eDocument customer invoice Process? ",
        "answer": " Yes, as a Public Cloud customer in Italy, you can extend an existing eDocument process according to your business needs. For example: 1. You want to define that for some types of source documents the system doesn't create electronic documents. 2. You want to enhance the standard XML mapping by editing existing fields or adding new ones. ",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "IT",
        "facts": [
            {
                "fact": "As a Public Cloud customer in Italy, you can extend an existing eDocument process.",
                "classification": "direct",
                "id": "EA-5-1"
            },
            {
                "fact": "The extension can be done according to your business needs.",
                "classification": "direct",
                "id": "EA-5-2"
            },
            {
                "fact": "You can define that for some types of source documents the system doesn't create electronic documents.",
                "classification": "supporting",
                "id": "EA-5-3"
            },
            {
                "fact": "You can enhance the standard XML mapping by editing existing fields.",
                "classification": "supporting",
                "id": "EA-5-4"
            },
            {
                "fact": "You can enhance the standard XML mapping by adding new fields.",
                "classification": "supporting",
                "id": "EA-5-5"
            }
        ]
    },
    {
        "id": "EA-6",
        "question": "As a Public Cloud customer in Turkey, can I extend an action for a custom-developed process?.",
        "answer": "No. In Public Cloud, eDocument Actions can not be extended.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "TR",
        "facts": [
            {
                "fact": "In Public Cloud, eDocument Actions cannot be extended.",
                "classification": "direct",
                "id": "EA-6-1"
            },
            {
                "fact": "As a Public Cloud customer in Turkey, you cannot extend an action for a custom-developed process.",
                "classification": "direct",
                "id": "EA-6-2"
            }
        ]
    },
    {
        "id": "EA-7",
        "question": "Can I extend an Action in eDocument Cockpit for a custom developed Process in Public Cloud?",
        "answer": "No, Actions can not be extended in Public Cloud",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "Actions cannot be extended in Public Cloud.",
                "classification": "direct",
                "id": "EA-7-1"
            }
        ]
    },
    {
        "id": "EA-8",
        "question": "Can I extend an Action in eDocument Cockpit for a custom developed Process in Private Cloud?",
        "answer": "Yes, you can extend an action in the eDocument Cockpit for a custom-developed process. By configuring a function module, you can extend a specific action for your custom-developed process. The function module is executed immediately after the action in a separate session using tRFC (transactional Remote Function Call). You can trigger additional actions within the framework or outside the framework. For example, you can trigger the automatic submission of an electronic document after it has been created [7].",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can extend an action in the eDocument Cockpit for a custom-developed process.",
                "classification": "direct",
                "id": "EA-8-1"
            },
            {
                "fact": "Extending an action is done by configuring a function module.",
                "classification": "direct",
                "id": "EA-8-2"
            },
            {
                "fact": "The function module is executed immediately after the action.",
                "classification": "supporting",
                "id": "EA-8-3"
            },
            {
                "fact": "The function module runs in a separate session using tRFC (transactional Remote Function Call).",
                "classification": "supporting",
                "id": "EA-8-4"
            },
            {
                "fact": "You can trigger additional actions within or outside the framework.",
                "classification": "supporting",
                "id": "EA-8-5"
            },
            {
                "fact": "For example, you can trigger the automatic submission of an electronic document after it has been created.",
                "classification": "supporting",
                "id": "EA-8-6"
            }
        ]
    },
    {
        "id": "EA-9",
        "question": "Can I extend the Manage Electronic Documents app or the eDocument Cockpit App by adding custom field in Public Cloud?",
        "answer": "Yes, you can extend the Manage Electronic Documents app and the eDocument Cockpit app in the Public Cloud by adding custom fields. This can be done by using Business Add-Ins (BAdIs): 1. EDOC_CUSTOM_FIELDS_CLOUD 2. EDOC_CUSTOM_FIELDS_UI_CLOUD",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can extend the Manage Electronic Documents app in the Public Cloud by adding custom fields.",
                "classification": "direct",
                "id": "EA-9-1"
            },
            {
                "fact": "You can extend the eDocument Cockpit app in the Public Cloud by adding custom fields.",
                "classification": "direct",
                "id": "EA-9-2"
            },
            {
                "fact": "Extension is possible by using Business Add-Ins (BAdIs).",
                "classification": "supporting",
                "id": "EA-9-3"
            },
            {
                "fact": "The BAdI EDOC_CUSTOM_FIELDS_CLOUD can be used for this extension.",
                "classification": "supporting",
                "id": "EA-9-4"
            },
            {
                "fact": "The BAdI EDOC_CUSTOM_FIELDS_UI_CLOUD can be used for this extension.",
                "classification": "supporting",
                "id": "EA-9-5"
            }
        ]
    },
    {
        "id": "EA-10",
        "question": "What BAdIs can be used to extend the Manage Electronic Documents by adding custom field in Public Cloud?",
        "answer": "The BAdIs EDOC_CUSTOM_FIELDS_CLOUD and EDOC_CUSTOM_FIELDS_UI_CLOUD can be used to extend the Manage Electronic Documents by adding custom fields in the Public Cloud.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The BAdI EDOC_CUSTOM_FIELDS_CLOUD can be used to extend Manage Electronic Documents by adding custom fields in Public Cloud.",
                "classification": "direct",
                "id": "EA-10-1"
            },
            {
                "fact": "The BAdI EDOC_CUSTOM_FIELDS_UI_CLOUD can be used to extend Manage Electronic Documents by adding custom fields in Public Cloud.",
                "classification": "direct",
                "id": "EA-10-2"
            }
        ]
    },
    {
        "id": "EA-11",
        "question": "As a Public Cloud customer in Spain, can I extend the eDocument Cocpit app by adding a custom field to an existing eDocument Process? ",
        "answer": "Yes, as a Public Cloud customer in Spain, you can extend the eDocument Cockpit app by adding a custom field to an existing eDocument Process. You can extend the eDocument Cockpit (EDOC_COCKPIT) with custom fields that contain the organizational units of the relevant source documents, such as billing or accounting documents. Additionally, you can restrict the visibility of electronic documents in the eDocument Cockpit for the defined organizational units stored in the source documents.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "ES",
        "facts": [
            {
                "fact": "As a Public Cloud customer in Spain, you can extend the eDocument Cockpit app by adding a custom field to an existing eDocument Process.",
                "classification": "direct",
                "id": "EA-11-1"
            },
            {
                "fact": "You can extend the eDocument Cockpit (EDOC_COCKPIT) with custom fields that contain the organizational units of the relevant source documents.",
                "classification": "supporting",
                "id": "EA-11-2"
            },
            {
                "fact": "Relevant source documents include billing or accounting documents.",
                "classification": "supporting",
                "id": "EA-11-3"
            },
            {
                "fact": "You can restrict the visibility of electronic documents in the eDocument Cockpit for the defined organizational units stored in the source documents.",
                "classification": "supporting",
                "id": "EA-11-4"
            }
        ]
    },
    {
        "id": "EA-12",
        "question": "What are the steps to extend an existing eDocument Process in Public cloud and add a custom field using ADT?",
        "answer": "Prerequisites\n1. SAP S/4HANA Cloud Public Edition\n2. Developer Extensibility\nSteps to be Implemented\n1. Creation of the custom field\n2. Implementation of the custom logic\nCreation of the Custom Field\n1. Go to Custom Fields app.\n2. Select Create to add a new custom field",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "SAP S/4HANA Cloud Public Edition is required as a prerequisite.",
                "classification": "supporting",
                "id": "EA-12-1"
            },
            {
                "fact": "Developer Extensibility is required as a prerequisite.",
                "classification": "supporting",
                "id": "EA-12-2"
            },
            {
                "fact": "The first step is the creation of the custom field.",
                "classification": "direct",
                "id": "EA-12-3"
            },
            {
                "fact": "The second step is the implementation of the custom logic.",
                "classification": "direct",
                "id": "EA-12-4"
            },
            {
                "fact": "To create the custom field, go to the Custom Fields app.",
                "classification": "direct",
                "id": "EA-12-5"
            },
            {
                "fact": "Select 'Create' in the Custom Fields app to add a new custom field.",
                "classification": "direct",
                "id": "EA-12-6"
            }
        ]
    },
    {
        "id": "EA-13",
        "question": "Can I restrict the visibility of eDocuments in the Manage Electronic Documents app or eDocument Cockpit app with the use of custom fields ? ",
        "answer": "Yes, you can restrict the visibility of eDocuments in the Manage Electronic Documents app or eDocument Cockpit app with the use of custom fields. By extending the eDocument Cockpit with custom fields that contain the organizational units of the relevant source documents, such as billing or accounting documents, you can restrict the visibility of electronic documents for defined organizational units stored in the source documents. Additionally, you can configure authorization checks to further restrict the visibility of electronic documents for specific organizational units.",
        "product": "ERP",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can restrict the visibility of eDocuments in the Manage Electronic Documents app with the use of custom fields.",
                "classification": "direct",
                "id": "EA-13-1"
            },
            {
                "fact": "You can restrict the visibility of eDocuments in the eDocument Cockpit app with the use of custom fields.",
                "classification": "direct",
                "id": "EA-13-2"
            },
            {
                "fact": "Extending the eDocument Cockpit with custom fields that contain organizational units of relevant source documents enables visibility restriction.",
                "classification": "supporting",
                "id": "EA-13-3"
            },
            {
                "fact": "Relevant source documents include billing or accounting documents.",
                "classification": "supporting",
                "id": "EA-13-4"
            },
            {
                "fact": "Visibility of electronic documents can be restricted for defined organizational units stored in the source documents.",
                "classification": "direct",
                "id": "EA-13-5"
            },
            {
                "fact": "Authorization checks can be configured to further restrict the visibility of electronic documents for specific organizational units.",
                "classification": "supporting",
                "id": "EA-13-6"
            }
        ]
    },
    {
        "id": "EA-14",
        "question": "Can I restrict the visibility of eDocuments in the Manage Electronic Documents app or eDocument Cockpit app with the use of customer specific authorizations ? ",
        "answer": "Yes, you can restrict the visibility of eDocuments in the Manage Electronic Documents app or eDocument Cockpit app with the use of customer-specific authorizations. You can extend the Cockpit with custom fields and copy the organizational unit of the relevant billing document or accounting document into the extension field.",
        "product": "ERP",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can restrict the visibility of eDocuments in the Manage Electronic Documents app with customer-specific authorizations.",
                "classification": "direct",
                "id": "EA-14-1"
            },
            {
                "fact": "You can restrict the visibility of eDocuments in the eDocument Cockpit app with customer-specific authorizations.",
                "classification": "direct",
                "id": "EA-14-2"
            },
            {
                "fact": "The Cockpit can be extended with custom fields.",
                "classification": "supporting",
                "id": "EA-14-3"
            },
            {
                "fact": "You can copy the organizational unit of the relevant billing document or accounting document into the extension field.",
                "classification": "supporting",
                "id": "EA-14-4"
            }
        ]
    },
    {
        "id": "EA-15",
        "question": "As a Public Cloud customer in Germany, can I restrict the creation of eDocument in the Manage Electronic Document app and the eDocument Cockpit app if certain condiotions are met ?",
        "answer": "Yes, as a Public Cloud customer in Germany, you can restrict the creation of eDocuments in the Manage Electronic Document app and the eDocument Cockpit app if certain conditions are met. with the use of BAdI EDOC_ADAPTOR_CLOUD method IS_RELEVANT, customers can control the creation of eDocuments that meets required conditions.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "DE",
        "facts": [
            {
                "fact": "As a Public Cloud customer in Germany, you can restrict the creation of eDocuments in the Manage Electronic Document app if certain conditions are met.",
                "classification": "direct",
                "id": "EA-15-1"
            },
            {
                "fact": "As a Public Cloud customer in Germany, you can restrict the creation of eDocuments in the eDocument Cockpit app if certain conditions are met.",
                "classification": "direct",
                "id": "EA-15-2"
            },
            {
                "fact": "The restriction can be implemented using BAdI EDOC_ADAPTOR_CLOUD method IS_RELEVANT.",
                "classification": "supporting",
                "id": "EA-15-3"
            },
            {
                "fact": "Customers can control the creation of eDocuments that meet required conditions using this method.",
                "classification": "supporting",
                "id": "EA-15-4"
            }
        ]
    },
    {
        "id": "EA-16",
        "question": "As a Public Cloud customer in Spain, what are the implementation steps required to restrict the creation of eDocument in the Manage Electronic Document App or the eDocument Cockpit app",
        "answer": "Implementation Steps in ABAP Development Tools (ADT)\n1. Create implementation for enhancement spot ES_DOCUMENT_CLOUD.\n2. Create BAdI implementation for EDOC_ADAPTOR_CLOUD.\n3. (Optional) Create BAdI Filter for Country and/or Generic Filter.\n4. Create implementing class for BAdI EDOC_ADAPTOR_CLOUD, which implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.\n5. Implement method is_relevant of interface if_edoc_adaptor_cloud in your BAdI class.\n6. Activate your BAdI implementation.\nRefer to the doumentation of BaDI EDOC_ADAPTOR_CLOUD for more details.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "ES",
        "facts": [
            {
                "fact": "You must create an implementation for enhancement spot ES_DOCUMENT_CLOUD.",
                "classification": "direct",
                "id": "EA-16-1"
            },
            {
                "fact": "You must create a BAdI implementation for EDOC_ADAPTOR_CLOUD.",
                "classification": "direct",
                "id": "EA-16-2"
            },
            {
                "fact": "Optionally, you can create a BAdI filter for country and/or a generic filter.",
                "classification": "direct",
                "id": "EA-16-3"
            },
            {
                "fact": "You must create an implementing class for BAdI EDOC_ADAPTOR_CLOUD, which implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.",
                "classification": "direct",
                "id": "EA-16-4"
            },
            {
                "fact": "You must implement the method is_relevant of interface if_edoc_adaptor_cloud in your BAdI class.",
                "classification": "direct",
                "id": "EA-16-5"
            },
            {
                "fact": "You must activate your BAdI implementation.",
                "classification": "direct",
                "id": "EA-16-6"
            },
            {
                "fact": "The steps are performed in ABAP Development Tools (ADT).",
                "classification": "supporting",
                "id": "EA-16-7"
            },
            {
                "fact": "You should refer to the documentation of BAdI EDOC_ADAPTOR_CLOUD for more details.",
                "classification": "supporting",
                "id": "EA-16-8"
            }
        ]
    },
    {
        "id": "EA-17",
        "question": "Can you provide a sample implementation for IS_RELEVANT Method of BAdI EDCO_CLOUD_ADAPTOR to control eDocument creation in Public Cloud based on some conditions?",
        "answer": "Yes, I can provide a sample implementation for the IS_RELEVANT method of BAdI EDCO_CLOUD_ADAPTOR to control eDocument creation in Public Cloud based on some conditions.\nHere is an example implementation for the IS_RELEVANT method:\nCLASS zcl_edoc_adaptor_cloud DEFINITION\n  PUBLIC\n  FINAL\n  CREATE PUBLIC .\n  PUBLIC SECTION.\n    INTERFACES if_badi_interface .\n    INTERFACES if_edoc_adaptor_cloud .\n  PROTECTED SECTION.\n  PRIVATE SECTION.\nENDCLASS.\nCLASS zcl_badi_edoc_adaptor_cloud IMPLEMENTATION.\n  METHOD if_edoc_adaptor_cloud~is_relevant.\n    DATA: lv_relevant TYPE abap_bool.\n   \n    Your conditions to control eDocument creation\n    IF CONDITION.\n      lv_relevant = abap_true.\n    ELSE.\n      lv_relevant = abap_false.\n    ENDIF.\n   \n    rv_relevant = lv_relevant.\n  ENDMETHOD.\nENDCLASS.\nIn this implementation, you can define your own conditions to control eDocument creation based on your requirements. If the conditions are met, set the lv_relevant variable to abap_true, otherwise set it to abap_false.\nThe rv_relevant parameter is used to return the value of lv_relevant to the calling program.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Coding (Development)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "A sample implementation for the IS_RELEVANT method of BAdI EDCO_CLOUD_ADAPTOR is provided.",
                "classification": "direct",
                "id": "EA-17-1"
            },
            {
                "fact": "The IS_RELEVANT method can be used to control eDocument creation in Public Cloud based on conditions.",
                "classification": "direct",
                "id": "EA-17-2"
            },
            {
                "fact": "In the sample implementation, a variable lv_relevant of type abap_bool is used.",
                "classification": "supporting",
                "id": "EA-17-3"
            },
            {
                "fact": "The value of lv_relevant is set to abap_true if the specified condition is met.",
                "classification": "supporting",
                "id": "EA-17-4"
            },
            {
                "fact": "If the condition is not met, lv_relevant is set to abap_false.",
                "classification": "supporting",
                "id": "EA-17-5"
            },
            {
                "fact": "The value of lv_relevant is assigned to the output parameter rv_relevant.",
                "classification": "supporting",
                "id": "EA-17-6"
            },
            {
                "fact": "You can define your own conditions in the implementation to control eDocument creation.",
                "classification": "supporting",
                "id": "EA-17-7"
            }
        ]
    },
    {
        "id": "EA-18",
        "question": "Can you provide sample implementation to prevent the creation of eDocument when some conditions are met in Public Cloud?",
        "answer": "In the example below, eDocument creations are restricted for Billing Documents with CONDITION is TRUE for source type SD_INVOICE.\nCLASS zcl_badi_edoc_adaptor_cloud\nDEFINITION PUBLIC FINAL CREATE PUBLIC .\nPUBLIC SECTION. INTERFACES if_badi_interface .\nINTERFACES if_edoc_adaptor_cloud .\nPROTECTED SECTION.\nPRIVATE SECTION.\nENDCLASS.\nCLASS zcl_badi_edoc_adaptor_cloud IMPLEMENTATION.\nMETHOD if_edoc_adaptor_cloud~is_relevant.\nCHECK iv_source_type = 'SD_INVOICE'. Source Type\nIF CONDITION = TRUE.\n  cv_relevant = abap_false.\nENDIF.\nENDMETHOD.\nENDCLASS.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Coding (Development)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "eDocument creation is restricted for Billing Documents when CONDITION is TRUE for source type SD_INVOICE.",
                "classification": "direct",
                "id": "EA-18-1"
            },
            {
                "fact": "The sample implementation uses a class named zcl_badi_edoc_adaptor_cloud.",
                "classification": "supporting",
                "id": "EA-18-2"
            },
            {
                "fact": "The method if_edoc_adaptor_cloud~is_relevant checks if iv_source_type equals 'SD_INVOICE'.",
                "classification": "supporting",
                "id": "EA-18-3"
            },
            {
                "fact": "If CONDITION is TRUE, the method sets cv_relevant to abap_false, preventing eDocument creation.",
                "classification": "supporting",
                "id": "EA-18-4"
            },
            {
                "fact": "The implementation is intended for use in the Public Cloud.",
                "classification": "supporting",
                "id": "EA-18-5"
            }
        ]
    },
    {
        "id": "EA-19",
        "question": "For a Turkish customer invoice process in Public Cloud, can I enhance the generated XML before it is sent to the authorities in ADT?",
        "answer": "Yes, you can enhance the generated XML file for a Turkish customer invoice process in Public Cloud with ADT before it is sent to the authorities. By enhancing the XML file, you can include additional information that may be relevant for your business processes, such as the customer material number in the billing document. To enhance the XML file, you can use the method SET_OUTPUT_DATA of the Business Add-In (BAdI) EDOC_ADAPTOR_CLOUD. This BAdI allows you to modify XML tags and fill optional XML tags with values. You can create a new implementation class for the BAdI and implement the necessary logic to modify the XML tags. Once you have implemented the BAdI, you can activate it. After the XML file is enhanced, it can be sent to the authorities as part of the Germany customer invoice process.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "TR",
        "facts": [
            {
                "fact": "You can enhance the generated XML file for a Turkish customer invoice process in Public Cloud with ADT before it is sent to the authorities.",
                "classification": "direct",
                "id": "EA-19-1"
            },
            {
                "fact": "Enhancing the XML file allows you to include additional information relevant for business processes, such as the customer material number in the billing document.",
                "classification": "supporting",
                "id": "EA-19-2"
            },
            {
                "fact": "The method SET_OUTPUT_DATA of the Business Add-In (BAdI) EDOC_ADAPTOR_CLOUD can be used to enhance the XML file.",
                "classification": "supporting",
                "id": "EA-19-3"
            },
            {
                "fact": "The BAdI EDOC_ADAPTOR_CLOUD allows modification of XML tags and filling of optional XML tags with values.",
                "classification": "supporting",
                "id": "EA-19-4"
            },
            {
                "fact": "You can create a new implementation class for the BAdI and implement logic to modify the XML tags.",
                "classification": "supporting",
                "id": "EA-19-5"
            },
            {
                "fact": "After implementing the BAdI, you can activate it.",
                "classification": "supporting",
                "id": "EA-19-6"
            }
        ]
    },
    {
        "id": "EA-20",
        "question": "As a Public Cloud customer in Greece, what are the required steps to enhance generated XML in the Manage Electronic Document App or the eDocument Cockpit?",
        "answer": "Implementation Steps in ABAP Development Tools (ADT)\n1. In your ABAP project, go to the enhancement spot ES_EDOCUMENT_CLOUD (path: package GLO-EDO > Enhancements > Enhancement Spots).\n2. Right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation.\n3. Enter a package, name, and description.\n4. Choose Add BAdI Implementation and select for EDOC_ADAPTOR_CLOUD.\n5. (Optional) Create a BAdI filter for Country and/or Generic Filter.\n6. Choose Implementing Class to create a new implementation class. The new implementation class automatically implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.\n7. After generating the class, open the interface method and press F3 to view its parameters. To display the documentation, press F2.\n8. Activate your BAdI implementation.\nRefer to Business Add-In (BAdI) EDOC_ADAPTOR_CLOUD documentation for more details.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "GR",
        "facts": [
            {
                "fact": "Go to the enhancement spot ES_EDOCUMENT_CLOUD in your ABAP project.",
                "classification": "direct",
                "id": "EA-20-1"
            },
            {
                "fact": "The enhancement spot ES_EDOCUMENT_CLOUD is located in package GLO-EDO > Enhancements > Enhancement Spots.",
                "classification": "supporting",
                "id": "EA-20-2"
            },
            {
                "fact": "Right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation.",
                "classification": "direct",
                "id": "EA-20-3"
            },
            {
                "fact": "Enter a package, name, and description for the new BAdI Enhancement Implementation.",
                "classification": "direct",
                "id": "EA-20-4"
            },
            {
                "fact": "Choose Add BAdI Implementation and select for EDOC_ADAPTOR_CLOUD.",
                "classification": "direct",
                "id": "EA-20-5"
            },
            {
                "fact": "Optionally, create a BAdI filter for Country and/or Generic Filter.",
                "classification": "direct",
                "id": "EA-20-6"
            },
            {
                "fact": "Choose Implementing Class to create a new implementation class.",
                "classification": "direct",
                "id": "EA-20-7"
            },
            {
                "fact": "The new implementation class automatically implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.",
                "classification": "supporting",
                "id": "EA-20-8"
            },
            {
                "fact": "After generating the class, open the interface method and press F3 to view its parameters.",
                "classification": "direct",
                "id": "EA-20-9"
            },
            {
                "fact": "Activate your BAdI implementation.",
                "classification": "direct",
                "id": "EA-20-10"
            }
        ]
    },
    {
        "id": "EA-21",
        "question": "For a Germany Customer invoice Process in Public Cloud, I want to enhance the e-mail sent out from the Manage Electronic Document app to customers, how can I achieve this ?",
        "answer": "You can use the Business Add-In (BAdI) EDOC_PART_CONN_CHANGE_EMAIL_V2 to customize the e-mails you send to your customers. This BAdI allows you to tailor e-mail details such as addresses, subject lines, and body text. ",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "DE",
        "facts": [
            {
                "fact": "You can use the Business Add-In (BAdI) EDOC_PART_CONN_CHANGE_EMAIL_V2 to customize customer e-mails.",
                "classification": "direct",
                "id": "EA-21-1"
            },
            {
                "fact": "The BAdI EDOC_PART_CONN_CHANGE_EMAIL_V2 allows tailoring of e-mail details such as addresses.",
                "classification": "direct",
                "id": "EA-21-2"
            },
            {
                "fact": "The BAdI EDOC_PART_CONN_CHANGE_EMAIL_V2 allows tailoring of e-mail subject lines.",
                "classification": "direct",
                "id": "EA-21-3"
            },
            {
                "fact": "The BAdI EDOC_PART_CONN_CHANGE_EMAIL_V2 allows tailoring of e-mail body text.",
                "classification": "direct",
                "id": "EA-21-4"
            }
        ]
    },
    {
        "id": "EA-22",
        "question": "In Public Cloud, I want to enhance the e-mail sent out from the Manage Electronic Document app to customers. How to do it?",
        "answer": "To enhance the e-mail sent out from the Manage Electronic Document app to customers in the Public Cloud, you can use the Business-Add-In (BAdI) EDOC_PART_CONN_CHANGE_EMAIL_V2. This BAdI provides methods that allow you to customize the e-mail that will be sent to the customer.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can use the Business-Add-In (BAdI) EDOC_PART_CONN_CHANGE_EMAIL_V2 to enhance the e-mail sent from the Manage Electronic Document app in Public Cloud.",
                "classification": "direct",
                "id": "EA-22-1"
            },
            {
                "fact": "The BAdI EDOC_PART_CONN_CHANGE_EMAIL_V2 provides methods to customize the e-mail sent to the customer.",
                "classification": "direct",
                "id": "EA-22-2"
            }
        ]
    },
    {
        "id": "EA-23",
        "question": "What are the required steps to implement Business Add-In (BAdI) EDOC_PART_CONN_CHANGE_EMAIL_V2 in Public Cloud using ADT?",
        "answer": "To implement the Business Add-In (BAdI) EDOC_PART_CONN_CHANGE_EMAIL_V2 in Public Cloud using ABAP Development Tools (ADT), you need to follow these steps:\n1. In your ABAP project, go to the enhancement spot ES_EDOCUMENT_CLOUD (path: package GLO-EDO > Enhancements > Enhancement Spots).\n2. Right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation.\n3. Enter a package, name, and description.\n4. Choose Add BAdI Implementation and select EDOC_PART_CONN_CHANGE_EMAIL_V2.\n5. Enter a BAdI implementation name.\n6. Choose Implementing Class to create a new implementation class. The new implementation class automatically implements the interface IF_EDOC_CHANGE_EMAIL_V2.\n7. After generating the class, open the interface method and press F3 to view its parameters. You are now ready to implement your custom logic. To display the documentation, press F2.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "To implement BAdI EDOC_PART_CONN_CHANGE_EMAIL_V2 in Public Cloud using ADT, you must access the enhancement spot ES_EDOCUMENT_CLOUD.",
                "classification": "direct",
                "id": "EA-23-1"
            },
            {
                "fact": "The enhancement spot ES_EDOCUMENT_CLOUD is located in package GLO-EDO under Enhancements > Enhancement Spots.",
                "classification": "supporting",
                "id": "EA-23-2"
            },
            {
                "fact": "You need to right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation.",
                "classification": "direct",
                "id": "EA-23-3"
            },
            {
                "fact": "You must enter a package, name, and description for the new implementation.",
                "classification": "direct",
                "id": "EA-23-4"
            },
            {
                "fact": "You should choose Add BAdI Implementation and select EDOC_PART_CONN_CHANGE_EMAIL_V2.",
                "classification": "direct",
                "id": "EA-23-5"
            },
            {
                "fact": "You need to enter a BAdI implementation name.",
                "classification": "direct",
                "id": "EA-23-6"
            },
            {
                "fact": "You must choose Implementing Class to create a new implementation class.",
                "classification": "direct",
                "id": "EA-23-7"
            },
            {
                "fact": "The new implementation class automatically implements the interface IF_EDOC_CHANGE_EMAIL_V2.",
                "classification": "supporting",
                "id": "EA-23-8"
            },
            {
                "fact": "After generating the class, you should open the interface method and press F3 to view its parameters.",
                "classification": "direct",
                "id": "EA-23-9"
            },
            {
                "fact": "To display the documentation, you can press F2.",
                "classification": "supporting",
                "id": "EA-23-10"
            }
        ]
    },
    {
        "id": "EA-24",
        "question": "In Public cloud, Can I attach additional files to the E-Mail sent out to customers?",
        "answer": "Yes, in the Public cloud, you can attach additional files to the E-Mail sent out to customers. This can be done by implementing and configuring the Business Add-In EDOC_PART_CONN_CHANGE_EMAIL_V2 to enhance the E-Mail sent to your customers. The BAdI provides methods that allow you to customize the e-mail that will be sent to the customer. ",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "In the Public cloud, you can attach additional files to the E-Mail sent out to customers.",
                "classification": "direct",
                "id": "EA-24-1"
            },
            {
                "fact": "Attaching additional files can be done by implementing and configuring the Business Add-In EDOC_PART_CONN_CHANGE_EMAIL_V2.",
                "classification": "direct",
                "id": "EA-24-2"
            },
            {
                "fact": "The Business Add-In EDOC_PART_CONN_CHANGE_EMAIL_V2 enhances the E-Mail sent to customers.",
                "classification": "supporting",
                "id": "EA-24-3"
            },
            {
                "fact": "The BAdI provides methods that allow customization of the e-mail sent to the customer.",
                "classification": "supporting",
                "id": "EA-24-4"
            }
        ]
    },
    {
        "id": "EA-25",
        "question": "What are the steps to develop new processes for electronic documents in the Electronic Document Processing framework in Public Cloud?",
        "answer": "The Electronic Document Processing framework allows you to create electronic documents from documents created in source applications (for example, invoices created in Sales). The system extracts the relevant information from the invoice and creates an XML which is submitted to external services using a cloud service. For new processes, you develop in the following components:\n1. The connected business process in your 3-system landscape system triggers the creation of an instance of an electronic document (eDocument).\n2. The Electronic Document Processing framework itself.\n3. On the backend systems, Electronic Document Processing framework leverages the Web Services Runtime.\n4. On SAP Business Technology Platform, SAP Document and Reporting Compliance uses SAP Integration Suite.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The Electronic Document Processing framework allows creation of electronic documents from documents generated in source applications.",
                "classification": "supporting",
                "id": "EA-25-1"
            },
            {
                "fact": "The system extracts relevant information from the source document and creates an XML.",
                "classification": "supporting",
                "id": "EA-25-2"
            },
            {
                "fact": "The XML is submitted to external services using a cloud service.",
                "classification": "supporting",
                "id": "EA-25-3"
            },
            {
                "fact": "To develop new processes, you must work with the connected business process in your 3-system landscape system, which triggers the creation of an eDocument instance.",
                "classification": "direct",
                "id": "EA-25-4"
            },
            {
                "fact": "You must develop within the Electronic Document Processing framework itself.",
                "classification": "direct",
                "id": "EA-25-5"
            },
            {
                "fact": "On backend systems, the Electronic Document Processing framework leverages the Web Services Runtime.",
                "classification": "direct",
                "id": "EA-25-6"
            },
            {
                "fact": "On SAP Business Technology Platform, SAP Document and Reporting Compliance uses SAP Integration Suite.",
                "classification": "direct",
                "id": "EA-25-7"
            }
        ]
    },
    {
        "id": "EA-26",
        "question": "I want to extend the standard E-Mail sent to customers, generate a sample code to enhance the E-Mail attachmentby adding additional file of type PDF.",
        "answer": "CLASS zcl_badi_edoc_change_email_v2 DEFINITION PUBLIC FINAL CREATE PUBLIC . PUBLIC SECTION. INTERFACES if_badi_interface . INTERFACES if_edoc_cloud_datatypes . INTERFACES if_edoc_change_email_v2. PROTECTED SECTION. PRIVATE SECTION. ENDCLASS. CLASS zcl_badi_edoc_change_email_v2 IMPLEMENTATION. METHOD if_edoc_change_email_v2~change_email_to_customer. DATA: ls_attachment TYPE edoc_email_attachment_cloud. TRY. DATA(lo_edocument) = cl_edocument_ext_es=>retrieve_by_edoc_guid( EXPORTING iv_edoc_guid = edocument-edoc_guid iv_skip_interface_det = abap_true ). DATA(lt_edocumentfile) = lo_edocument->get_edoc_files( ). LOOP AT lt_edocumentfile INTO DATA(ls_edocumentfile) WHERE file_type = 'REQUEST' OR file_type = 'SEND_REQ' OR file_type = 'SEND_RESP'. ls_attachment-attachm_subject = ls_edocumentfile-file_name. ls_attachment-attachm_type = 'PDF'. DATA lp_offset TYPE i. DATA ls_solix_line TYPE edoc_attch_content_hex. DATA lp_pdf_string_len TYPE i. DATA lp_solix_rows TYPE i. DATA lp_last_row_length TYPE i. DATA lp_row_length TYPE i. lp_row_length = 255. lp_offset = 0. lp_pdf_string_len = xstrlen( ls_edocumentfile-file_raw ). lp_solix_rows = lp_pdf_string_len DIV lp_row_length. lp_last_row_length = lp_pdf_string_len MOD lp_row_length. DO lp_solix_rows TIMES. ls_solix_line-line = ls_edocumentfile-file_raw+lp_offset(lp_row_length). APPEND ls_solix_line TO ls_attachment-content_hex. ADD lp_row_length TO lp_offset. ENDDO. IF lp_last_row_length > 0. CLEAR ls_solix_line-line. ls_solix_line-line = ls_edocumentfile-file_raw+lp_offset(lp_last_row_length). APPEND ls_solix_line TO ls_attachment-content_hex. ENDIF. ls_attachment-attachm_size = xstrlen( ls_edocumentfile-file_raw ). APPEND ls_attachment TO attachments. ENDLOOP. CATCH cx_edocument_ext INTO DATA(lx_exception). ENDTRY. ENDMETHOD. ENDCLASS.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Coding (Development)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The provided code is an ABAP class implementation for enhancing customer E-Mail attachments.",
                "classification": "supporting",
                "id": "EA-26-1"
            },
            {
                "fact": "The method if_edoc_change_email_v2~change_email_to_customer is used to modify the E-Mail sent to customers.",
                "classification": "direct",
                "id": "EA-26-2"
            },
            {
                "fact": "The code retrieves electronic document files using cl_edocument_ext_es=>retrieve_by_edoc_guid.",
                "classification": "supporting",
                "id": "EA-26-3"
            },
            {
                "fact": "It loops through document files of type 'REQUEST', 'SEND_REQ', or 'SEND_RESP'.",
                "classification": "direct",
                "id": "EA-26-4"
            },
            {
                "fact": "For each relevant file, an attachment is created with the subject set to the file name.",
                "classification": "direct",
                "id": "EA-26-5"
            },
            {
                "fact": "The attachment type is set to 'PDF'.",
                "classification": "direct",
                "id": "EA-26-6"
            },
            {
                "fact": "The file content is split into 255-byte chunks and added to the attachment content.",
                "classification": "supporting",
                "id": "EA-26-7"
            },
            {
                "fact": "The attachment size is set to the length of the file content.",
                "classification": "supporting",
                "id": "EA-26-8"
            },
            {
                "fact": "The attachment is appended to the attachments table to be included in the E-Mail.",
                "classification": "direct",
                "id": "EA-26-9"
            }
        ]
    },
    {
        "id": "EA-27",
        "question": "In Public Cloud, which standard source types are supported for use in BAdI EDOC_CLOUD_ADAPTOR Method SET_OUTPUT_DATA for extensibility?",
        "answer": "The following source document types are supported in Public Cloud:\n1. Accounting document (FI_INVOICE)\n2. Billing document (SD_INVOICE)\n3. Invoice Verification (INV_VERIF)\n4. Goods-Issue Posting (GI_POSTING)\n5. Billing Document without Accounting Data(SD_INVNOAC)",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The supported source document types in Public Cloud are specified for BAdI EDOC_CLOUD_ADAPTOR Method SET_OUTPUT_DATA.",
                "classification": "direct",
                "id": "EA-27-1"
            },
            {
                "fact": "Accounting document (FI_INVOICE) is a supported source type.",
                "classification": "direct",
                "id": "EA-27-2"
            },
            {
                "fact": "Billing document (SD_INVOICE) is a supported source type.",
                "classification": "direct",
                "id": "EA-27-3"
            },
            {
                "fact": "Invoice Verification (INV_VERIF) is a supported source type.",
                "classification": "direct",
                "id": "EA-27-4"
            },
            {
                "fact": "Goods-Issue Posting (GI_POSTING) is a supported source type.",
                "classification": "direct",
                "id": "EA-27-5"
            },
            {
                "fact": "Billing Document without Accounting Data (SD_INVNOAC) is a supported source type.",
                "classification": "direct",
                "id": "EA-27-6"
            }
        ]
    },
    {
        "id": "EA-28",
        "question": "In Public, what are the prerequisites for creating a new Process for DRC extensibility?",
        "answer": "In Public cloud, the prerequisites to creating a new process is to Make sure that the country/region code that you want to use for developing the process is included in the EDOEXTCOUNTRYV view. If it is not included, create a customer incident under the CA-GTF-CSC-EDO-EXT application component.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "In Public cloud, the country/region code to be used for developing the process must be included in the EDOEXTCOUNTRYV view.",
                "classification": "direct",
                "id": "EA-28-1"
            },
            {
                "fact": "If the country/region code is not included in the EDOEXTCOUNTRYV view, a customer incident should be created under the CA-GTF-CSC-EDO-EXT application component.",
                "classification": "direct",
                "id": "EA-28-2"
            }
        ]
    },
    {
        "id": "EA-29",
        "question": "As a Public Cloud customer, I want to create a new Process in DRC. What are the steps for creating a new Proxy for the web Service?",
        "answer": "In Public Cloud, the steps to creating a new proxy are :\n1. Defining a Communication Interface\n2. Creating a Web Service and Communication Scenario\n3. Implementing Communication Arrangements",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The first step is defining a Communication Interface.",
                "classification": "direct",
                "id": "EA-29-1"
            },
            {
                "fact": "The second step is creating a Web Service and Communication Scenario.",
                "classification": "direct",
                "id": "EA-29-2"
            },
            {
                "fact": "The third step is implementing Communication Arrangements.",
                "classification": "direct",
                "id": "EA-29-3"
            },
            {
                "fact": "These steps are for creating a new proxy for the web service in Public Cloud.",
                "classification": "supporting",
                "id": "EA-29-4"
            }
        ]
    },
    {
        "id": "EA-30",
        "question": "What are the steps to define communication Interface in Public for a new DRC custom Process?",
        "answer": "To define a communication interface, follow these steps:\n1. Prepare WSDL files using the XSDs provided by the tax authorities. It is an offline process and independent of the system landscape.\n2. Create SOAP API using SAP Cloud Integration. It can also be independent of the system landscape. Any third-party integration tool can be used to create the SOAP API.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "Prepare WSDL files using the XSDs provided by the tax authorities.",
                "classification": "direct",
                "id": "EA-30-1"
            },
            {
                "fact": "Preparing WSDL files is an offline process.",
                "classification": "supporting",
                "id": "EA-30-2"
            },
            {
                "fact": "Preparing WSDL files is independent of the system landscape.",
                "classification": "supporting",
                "id": "EA-30-3"
            },
            {
                "fact": "Create SOAP API using SAP Cloud Integration.",
                "classification": "direct",
                "id": "EA-30-4"
            },
            {
                "fact": "Creating the SOAP API can be independent of the system landscape.",
                "classification": "supporting",
                "id": "EA-30-5"
            },
            {
                "fact": "Any third-party integration tool can be used to create the SOAP API.",
                "classification": "supporting",
                "id": "EA-30-6"
            }
        ]
    },
    {
        "id": "EA-31",
        "question": "What are the steps to create a new Process in Public cloud for a customer in Italy using DRC extensibility features?",
        "answer": "Public Cloud customers in Italy can create a new Process using DRC extensibility features by following these steps:\n1. Creating a Country/Region-Specific Database Table\n2. Creating a Country/Region-Level Handler Class\n3. Developing an ABAP Class for Process-Level Mapping\n4. Implementing Business Add-Ins (BAdIs)\n5. Creating eDocument Types\n6. Creating eDocument Interfaces\n7. Creating eDocument Process\n8. Creating eDocument Message Types\n9. Configuring Options for Key Users",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "IT",
        "facts": [
            {
                "fact": "The first step is creating a Country/Region-Specific Database Table.",
                "classification": "direct",
                "id": "EA-31-1"
            },
            {
                "fact": "The second step is creating a Country/Region-Level Handler Class.",
                "classification": "direct",
                "id": "EA-31-2"
            },
            {
                "fact": "The third step is developing an ABAP Class for Process-Level Mapping.",
                "classification": "direct",
                "id": "EA-31-3"
            },
            {
                "fact": "The fourth step is implementing Business Add-Ins (BAdIs).",
                "classification": "direct",
                "id": "EA-31-4"
            },
            {
                "fact": "The fifth step is creating eDocument Types.",
                "classification": "direct",
                "id": "EA-31-5"
            },
            {
                "fact": "The sixth step is creating eDocument Interfaces.",
                "classification": "direct",
                "id": "EA-31-6"
            },
            {
                "fact": "The seventh step is creating eDocument Process.",
                "classification": "direct",
                "id": "EA-31-7"
            },
            {
                "fact": "The eighth step is creating eDocument Message Types.",
                "classification": "direct",
                "id": "EA-31-8"
            },
            {
                "fact": "The ninth step is configuring options for key users.",
                "classification": "direct",
                "id": "EA-31-9"
            },
            {
                "fact": "These steps use DRC extensibility features in the Public Cloud for customers in Italy.",
                "classification": "supporting",
                "id": "EA-31-10"
            }
        ]
    },
    {
        "id": "EA-32",
        "question": "In Public Cloud, can I create a database table for my DRC extensibility use case for a new country Process implementation?",
        "answer": "You can create a database table to store eDocument instance information.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can create a database table in Public Cloud.",
                "classification": "direct",
                "id": "EA-32-1"
            },
            {
                "fact": "The database table can be used to store eDocument instance information.",
                "classification": "direct",
                "id": "EA-32-2"
            }
        ]
    },
    {
        "id": "EA-33",
        "question": "Create a sample code for DRC database table to store eDocument instance information in Public Cloud.",
        "answer": "Yes, I can create a sample database table code to store eDocument instance information in Public cloud. In the table created, use EDOC_GUID as key field. @EndUserText.label : 'eDocument XX: Extensibility Demo' @AbapCatalog.enhancement.category : #NOT_EXTENSIBLE @AbapCatalog.tableCategory : #TRANSPARENT @AbapCatalog.deliveryClass : #A @AbapCatalog.dataMaintenance : #RESTRICTED define table zedoxx",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Coding (Development)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "A sample database table can be created to store eDocument instance information in Public Cloud.",
                "classification": "direct",
                "id": "EA-33-1"
            },
            {
                "fact": "The table should use EDOC_GUID as the key field.",
                "classification": "direct",
                "id": "EA-33-2"
            },
            {
                "fact": "The table is defined with the name zedoxx.",
                "classification": "direct",
                "id": "EA-33-3"
            },
            {
                "fact": "The table includes the annotation @EndUserText.label : 'eDocument XX: Extensibility Demo'.",
                "classification": "supporting",
                "id": "EA-33-4"
            },
            {
                "fact": "The table includes the annotation @AbapCatalog.enhancement.category : #NOT_EXTENSIBLE.",
                "classification": "supporting",
                "id": "EA-33-5"
            },
            {
                "fact": "The table includes the annotation @AbapCatalog.tableCategory : #TRANSPARENT.",
                "classification": "supporting",
                "id": "EA-33-6"
            },
            {
                "fact": "The table includes the annotation @AbapCatalog.deliveryClass : #A.",
                "classification": "supporting",
                "id": "EA-33-7"
            },
            {
                "fact": "The table includes the annotation @AbapCatalog.dataMaintenance : #RESTRICTED.",
                "classification": "supporting",
                "id": "EA-33-8"
            }
        ]
    },
    {
        "id": "EA-34",
        "question": "What are the procedures for creating a Country/Region-Level Handler Class for DRC extensibility in Public Cloud?",
        "answer": "The procedures for creating a Country/Region-Level Handler Class for DRC extensibility in Public Cloud are:\n1. Navigate to Package > Source Code Library > Classes.\n2. Check the contents of the country/region-level class.\n3. Implement the  methods of the respective country/region.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "Navigate to Package > Source Code Library > Classes.",
                "classification": "direct",
                "id": "EA-34-1"
            },
            {
                "fact": "Check the contents of the country/region-level class.",
                "classification": "direct",
                "id": "EA-34-2"
            },
            {
                "fact": "Implement the methods of the respective country/region.",
                "classification": "direct",
                "id": "EA-34-3"
            }
        ]
    },
    {
        "id": "EA-35",
        "question": "Can I develop an ABAP class for DRC Process mapping in Public cloud using DRC extensibility features?",
        "answer": "Yes, you can create a process-level mapping ABAP class to map data between the Web Service proxy and source invoice documents.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can create a process-level mapping ABAP class for DRC Process mapping in Public cloud.",
                "classification": "direct",
                "id": "EA-35-1"
            },
            {
                "fact": "The ABAP class can map data between the Web Service proxy and source invoice documents.",
                "classification": "direct",
                "id": "EA-35-2"
            }
        ]
    },
    {
        "id": "EA-36",
        "question": "What BAdIs are required for extending a new Process in DRC Extensibility in Public Cloud?",
        "answer": "The following Business Add-Ins (BAdIs) are required to extend a newly created process according to your business needs.\n1. EDOCUMENT_INT_CONN_EXT\n2. EDOCUMENT_BASE_EXT\n3. EDOCUMENT_MESSAGE_EXT\nFor more detailed information, see the BAdI implementation documentation as well as the corresponding BAdI methods documentation.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The BAdI EDOCUMENT_INT_CONN_EXT is required to extend a new process in DRC Extensibility in Public Cloud.",
                "classification": "direct",
                "id": "EA-36-1"
            },
            {
                "fact": "The BAdI EDOCUMENT_BASE_EXT is required to extend a new process in DRC Extensibility in Public Cloud.",
                "classification": "direct",
                "id": "EA-36-2"
            },
            {
                "fact": "The BAdI EDOCUMENT_MESSAGE_EXT is required to extend a new process in DRC Extensibility in Public Cloud.",
                "classification": "direct",
                "id": "EA-36-3"
            },
            {
                "fact": "More detailed information is available in the BAdI implementation documentation.",
                "classification": "supporting",
                "id": "EA-36-4"
            },
            {
                "fact": "More detailed information is available in the corresponding BAdI methods documentation.",
                "classification": "supporting",
                "id": "EA-36-5"
            }
        ]
    },
    {
        "id": "EA-37",
        "question": "What is BAdI EDOCUMENT_BASE_EXT used for?",
        "answer": "The EDOCUMENT_BASE_EXT BAdI of the ES_EDOCUMENT_EXT enhancement spot determines the process attributes for the new process. To be able to create eDocuments, you have to implement the BAdI and set the filter.",
        "product": "ERP",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "BAdI EDOCUMENT_BASE_EXT is part of the ES_EDOCUMENT_EXT enhancement spot.",
                "classification": "supporting",
                "id": "EA-37-1"
            },
            {
                "fact": "BAdI EDOCUMENT_BASE_EXT determines the process attributes for the new process.",
                "classification": "direct",
                "id": "EA-37-2"
            },
            {
                "fact": "To create eDocuments, you must implement the BAdI EDOCUMENT_BASE_EXT.",
                "classification": "supporting",
                "id": "EA-37-3"
            },
            {
                "fact": "You must set the filter when implementing BAdI EDOCUMENT_BASE_EXT to create eDocuments.",
                "classification": "supporting",
                "id": "EA-37-4"
            }
        ]
    },
    {
        "id": "EA-38",
        "question": "What are the procedure to implement BAdI EDOCUMENT_BASE_EXT in Public Cloud for a customer in Spain?",
        "answer": "The EDOCUMENT_BASE_EXT BAdI of the ES_EDOCUMENT_EXT enhancement spot determines the process attributes for the new process. To be able to create eDocuments, you have to implement the BAdI and set the filter.\nThe procedure to implement this BAdI are :\n1. Create an enhancement implementation for the ES_EDOCUMENT_EXT enhancement spot.\n2. Create a BAdI implementation for EDOCUMENT_BASE_EXT.\n3. Create a filter for the BAdI implementation to call the BAdI for the country/region that you implement. For example, country = ‘US’.\n4. Implement a BAdI class like shown in the example.\n5. Add an implementing class to the BAdI implementation.\n6. Activate the BAdI implementation.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "ES",
        "facts": [
            {
                "fact": "The EDOCUMENT_BASE_EXT BAdI of the ES_EDOCUMENT_EXT enhancement spot determines the process attributes for the new process.",
                "classification": "supporting",
                "id": "EA-38-1"
            },
            {
                "fact": "To create eDocuments, you must implement the BAdI and set the filter.",
                "classification": "supporting",
                "id": "EA-38-2"
            },
            {
                "fact": "The first step is to create an enhancement implementation for the ES_EDOCUMENT_EXT enhancement spot.",
                "classification": "direct",
                "id": "EA-38-3"
            },
            {
                "fact": "The second step is to create a BAdI implementation for EDOCUMENT_BASE_EXT.",
                "classification": "direct",
                "id": "EA-38-4"
            },
            {
                "fact": "The third step is to create a filter for the BAdI implementation to call the BAdI for the country/region being implemented.",
                "classification": "direct",
                "id": "EA-38-5"
            },
            {
                "fact": "An example filter is country = 'US'.",
                "classification": "supporting",
                "id": "EA-38-6"
            },
            {
                "fact": "The fourth step is to implement a BAdI class as shown in the example.",
                "classification": "direct",
                "id": "EA-38-7"
            },
            {
                "fact": "The fifth step is to add an implementing class to the BAdI implementation.",
                "classification": "direct",
                "id": "EA-38-8"
            },
            {
                "fact": "The sixth step is to activate the BAdI implementation.",
                "classification": "direct",
                "id": "EA-38-9"
            }
        ]
    },
    {
        "id": "EA-39",
        "question": "For a Public Cloud customer, generate a sample code for BAdI EDOCUMENT_BASE_EXT.",
        "answer": "CLASS <badi class name> DEFINITION PUBLIC FINAL CREATE PUBLIC. PUBLIC SECTION. INTERFACES if_badi_interface. INTERFACES if_edocument_base_ext. PROTECTED SECTION. PRIVATE SECTION. ENDCLASS. CLASS <badi class name> IMPLEMENTATION. METHOD if_edocument_base_ext~determine_edocument_class. cv_edoc_class_name = '<country/region-level handler class name>'. ENDMETHOD. METHOD if_edocument_base_ext~determine_process. IF is_edocument-source_type = '<edocument source type, e.g. SD_INVOICE>'. cv_process_name = '<edocument type>'. cv_process_version = '<process version, eg. 0001>'. ENDIF. ENDMETHOD. ENDCLASS.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Coding (Development)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "The sample code defines a public final class for the BAdI EDOCUMENT_BASE_EXT implementation.",
                "classification": "direct",
                "id": "EA-39-1"
            },
            {
                "fact": "The class implements the interface if_edocument_base_ext.",
                "classification": "direct",
                "id": "EA-39-2"
            },
            {
                "fact": "The method if_edocument_base_ext~determine_edocument_class assigns a handler class name to cv_edoc_class_name.",
                "classification": "direct",
                "id": "EA-39-3"
            },
            {
                "fact": "The method if_edocument_base_ext~determine_process checks if is_edocument-source_type matches a specified value.",
                "classification": "direct",
                "id": "EA-39-4"
            },
            {
                "fact": "If the source type matches, cv_process_name and cv_process_version are set accordingly.",
                "classification": "direct",
                "id": "EA-39-5"
            },
            {
                "fact": "The sample code uses placeholders for class names, handler class names, source types, process names, and process versions.",
                "classification": "supporting",
                "id": "EA-39-6"
            }
        ]
    },
    {
        "id": "EA-40",
        "question": "I am a Public Cloud customer researching the steps to create a new Process using DRC extensibility, why do I need to create eDocument Type?",
        "answer": "Source documents that have the same eDocument process but have some differences in the logic or in the mapping require different eDocument types. For example: When regular invoices and their corrections (credit/debit memos) have a different mapping or logical port, they share the same eDocument process, but they have different eDocument types.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Design",
        "country": "Cross",
        "facts": [
            {
                "fact": "Source documents with the same eDocument process but differences in logic or mapping require different eDocument types.",
                "classification": "direct",
                "id": "EA-40-1"
            },
            {
                "fact": "Regular invoices and their corrections (credit/debit memos) may have different mapping or logical ports.",
                "classification": "supporting",
                "id": "EA-40-2"
            },
            {
                "fact": "Regular invoices and their corrections can share the same eDocument process but have different eDocument types.",
                "classification": "supporting",
                "id": "EA-40-3"
            }
        ]
    },
    {
        "id": "EA-41",
        "question": "In DRC extensibility, what are the supported countries for external documents created in external systems?",
        "answer": "The supported countres for external documents created in external systems are: 1. Malaysia 2. Poland",
        "product": "ERP",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Design",
        "country": "Cross",
        "facts": [
            {
                "fact": "Malaysia is a supported country for external documents created in external systems in DRC extensibility.",
                "classification": "direct",
                "id": "EA-41-1"
            },
            {
                "fact": "Poland is a supported country for external documents created in external systems in DRC extensibility.",
                "classification": "direct",
                "id": "EA-41-2"
            }
        ]
    },
    {
        "id": "EA-42",
        "question": "What are the settings required before I can send documents from the external system to SAP in Private Cloud?",
        "answer": "Before you can start exchanging electronic documents, you must carry out the required settings to send the documents from the external system to your SAP system and to create electronic documents for further processing.\n1. Defining External Document Systems\n2. Maintaining External Document Organizational Unit\n3. Assigning External System and Organizational Unit to Company Code\n4. Assigning Process Status to External Document Status\n5. Registering Factory Class for External Documents",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Business Configuration",
        "country": "Cross",
        "facts": [
            {
                "fact": "You must define external document systems before sending documents from the external system to SAP in Private Cloud.",
                "classification": "direct",
                "id": "EA-42-1"
            },
            {
                "fact": "You must maintain the external document organizational unit before sending documents from the external system to SAP in Private Cloud.",
                "classification": "direct",
                "id": "EA-42-2"
            },
            {
                "fact": "You must assign the external system and organizational unit to the company code before sending documents from the external system to SAP in Private Cloud.",
                "classification": "direct",
                "id": "EA-42-3"
            },
            {
                "fact": "You must assign process status to external document status before sending documents from the external system to SAP in Private Cloud.",
                "classification": "direct",
                "id": "EA-42-4"
            },
            {
                "fact": "You must register the factory class for external documents before sending documents from the external system to SAP in Private Cloud.",
                "classification": "direct",
                "id": "EA-42-5"
            },
            {
                "fact": "These settings are required to create electronic documents for further processing in SAP.",
                "classification": "supporting",
                "id": "EA-42-6"
            }
        ]
    },
    {
        "id": "EA-43",
        "question": "What are the settings required before I can send documents from the external system to SAP in Private Cloud systems?",
        "answer": "Before you can start exchanging electronic documents, you must carry out the required settings to send the documents from the external system to your SAP system and to create electronic documents for further processing.\n1. Defining External Document Systems\n2. Maintaining External Document Organizational Unit\n3. Assigning External System and Organizational Unit to Company Code\n4. Assigning Process Status to External Document Status\n5. Registering Factory Class for External Documents",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Design",
        "country": "Cross",
        "facts": [
            {
                "fact": "You must define external document systems before sending documents from the external system to SAP in Private Cloud systems.",
                "classification": "direct",
                "id": "EA-43-1"
            },
            {
                "fact": "You must maintain the external document organizational unit before sending documents from the external system to SAP in Private Cloud systems.",
                "classification": "direct",
                "id": "EA-43-2"
            },
            {
                "fact": "You must assign the external system and organizational unit to the company code before sending documents from the external system to SAP in Private Cloud systems.",
                "classification": "direct",
                "id": "EA-43-3"
            },
            {
                "fact": "You must assign process status to external document status before sending documents from the external system to SAP in Private Cloud systems.",
                "classification": "direct",
                "id": "EA-43-4"
            },
            {
                "fact": "You must register the factory class for external documents before sending documents from the external system to SAP in Private Cloud systems.",
                "classification": "direct",
                "id": "EA-43-5"
            },
            {
                "fact": "These settings are required to create electronic documents for further processing in SAP.",
                "classification": "supporting",
                "id": "EA-43-6"
            }
        ]
    },
    {
        "id": "EA-44",
        "question": "For a Greece customer invoice process, can I enhance or extend the generated XML before it is sent to the authorities?",
        "answer": "Yes, you can enhance or extend the generated XML for a Greece customer invoice process before it is sent to the authorities. By enhancing the XML file, you can include additional information that may be relevant for your business processes. You can enhance or extend the generated XML before it is sent to the authorities by the use of method SET_OUTPUT_DATA of BAdI EDOC_ADAPTOR",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Design",
        "country": "GR",
        "facts": [
            {
                "fact": "You can enhance or extend the generated XML for a Greece customer invoice process before it is sent to the authorities.",
                "classification": "direct",
                "id": "EA-44-1"
            },
            {
                "fact": "Enhancing the XML file allows inclusion of additional information relevant for business processes.",
                "classification": "supporting",
                "id": "EA-44-2"
            },
            {
                "fact": "You can enhance or extend the generated XML before it is sent to the authorities by using the method SET_OUTPUT_DATA of BAdI EDOC_ADAPTOR.",
                "classification": "direct",
                "id": "EA-44-3"
            }
        ]
    },
    {
        "id": "EA-45",
        "question": "Before implementing a new process in DRC using extensibility, what are the prerequisite steps?",
        "answer": "Before you implement a new process, there are a number of things you need to have established. Among others, consider the following:\n1. Which new actions must the eDocument Cockpit support?\n2. Which steps, variants, statuses, and flags does the process have?\n3. How exactly are the source and target documents defined, that is, which eDocument types do you require?\n4. How exactly are the message formats defined, if required? Do the messages have to be versioned?\n5. Whether single documents should be issued or should documents be bundled.",
        "product": "ERP",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Design",
        "country": "Cross",
        "facts": [
            {
                "fact": "You must determine which new actions the eDocument Cockpit must support before implementing a new process in DRC using extensibility.",
                "classification": "direct",
                "id": "EA-45-1"
            },
            {
                "fact": "You must identify the steps, variants, statuses, and flags that the process will have before implementation.",
                "classification": "direct",
                "id": "EA-45-2"
            },
            {
                "fact": "You must define the source and target documents, specifying which eDocument types are required.",
                "classification": "direct",
                "id": "EA-45-3"
            },
            {
                "fact": "You must define the message formats, and determine if messages need to be versioned, if required.",
                "classification": "direct",
                "id": "EA-45-4"
            },
            {
                "fact": "You must decide whether single documents should be issued or documents should be bundled.",
                "classification": "direct",
                "id": "EA-45-5"
            }
        ]
    },
    {
        "id": "EA-46",
        "question": "How can I attach additional files to standard XML in Private Cloud?",
        "answer": "To attach additional files to the standard XML in Private Cloud, you can use the Business Add-In (BAdI) EDOC_ADAPTOR method SET_OUTPUT_DATA and enhance the XML file generated for an electronic document.\nBy enhancing the XML file, you can include additional information that may be relevant for your business processes . To implement this enhancement, you can follow these steps :\n1. Go to transaction SE18 and search for BAdI EDOC_ADAPTOR, ensure that the GENERIC_FILTER parameter for the BAdI implementation is set as INVOICE.\n   Double-click on the COUNTRY filter. In the Display Filter Value dialog, enter your country code as Value 1 and select = as Comparator 1.\n2. Create your own implementation,for example ZEI_EDOC_ADAPTOR_PT_INV.\n3. Double-click method IF_EDOC_ADAPTOR~SET_OUTPUT_DATA and add the relevant code. ",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can use the Business Add-In (BAdI) EDOC_ADAPTOR method SET_OUTPUT_DATA to attach additional files to standard XML in Private Cloud.",
                "classification": "direct",
                "id": "EA-46-1"
            },
            {
                "fact": "Enhancing the XML file generated for an electronic document allows inclusion of additional information.",
                "classification": "direct",
                "id": "EA-46-2"
            },
            {
                "fact": "To implement the enhancement, you should go to transaction SE18 and search for BAdI EDOC_ADAPTOR.",
                "classification": "supporting",
                "id": "EA-46-3"
            },
            {
                "fact": "The GENERIC_FILTER parameter for the BAdI implementation should be set as INVOICE.",
                "classification": "supporting",
                "id": "EA-46-4"
            },
            {
                "fact": "You need to double-click on the COUNTRY filter and enter your country code as Value 1 and select = as Comparator 1 in the Display Filter Value dialog.",
                "classification": "supporting",
                "id": "EA-46-5"
            },
            {
                "fact": "You should create your own BAdI implementation, for example ZEI_EDOC_ADAPTOR_PT_INV.",
                "classification": "supporting",
                "id": "EA-46-6"
            },
            {
                "fact": "You need to double-click method IF_EDOC_ADAPTOR~SET_OUTPUT_DATA and add the relevant code.",
                "classification": "supporting",
                "id": "EA-46-7"
            }
        ]
    },
    {
        "id": "EA-47",
        "question": "For a Greece customer in Private Cloud, what are the steps to enhance the generated XML before sending it to the Tax Authorities using ADT?",
        "answer": "To enhance the generated XML file for a Greece customer in Private Cloud before sending it to the Tax Authorities using ABAP Development Tools (ADT), you can follow these steps:\n1. In your ABAP project, go to the enhancement spot ES_EDOCUMENT (path: package GLO-EDO > Enhancements > Enhancement Spots).\n2. Right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation .\n3. Enter a package, name, and description for the implementation.\n4. Choose Add BAdI Implementation and select EDOC_ADAPTOR.\n5. (Optional) Create a BAdI filter for Country and/or Generic Filter.\n6. Choose Implementing Class to create a new implementation class. The new implementation class automatically implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.\n7. After generating the class, open the interface method and press F3 to view its parameters. To display the documentation, press F2.\n8. Implement the necessary logic in the method to modify the XML tags and fill optional XML tags with values such as customer material number or delivery number.\n9. Activate your BAdI implementation. When you display the XML file of the electronic document in the eDocument Cockpit or Manage Electronic Documents app, you will see that the relevant XML tags are now filled with the desired values. Please note that the provided steps are specific to enhancing the XML file for a German customer in Public Cloud using ADT. The exact implementation may vary depending on the specific requirements and configurations of your system.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "GR",
        "facts": [
            {
                "fact": "To enhance the generated XML for a Greece customer in Private Cloud before sending it to the Tax Authorities, you use ABAP Development Tools (ADT).",
                "classification": "direct",
                "id": "EA-47-1"
            },
            {
                "fact": "You should go to the enhancement spot ES_EDOCUMENT in your ABAP project.",
                "classification": "direct",
                "id": "EA-47-2"
            },
            {
                "fact": "You need to right-click ES_EDOCUMENT_CLOUD and select New BAdI Enhancement Implementation.",
                "classification": "direct",
                "id": "EA-47-3"
            },
            {
                "fact": "You must enter a package, name, and description for the implementation.",
                "classification": "direct",
                "id": "EA-47-4"
            },
            {
                "fact": "You should choose Add BAdI Implementation and select EDOC_ADAPTOR.",
                "classification": "direct",
                "id": "EA-47-5"
            },
            {
                "fact": "Optionally, you can create a BAdI filter for Country and/or Generic Filter.",
                "classification": "direct",
                "id": "EA-47-6"
            },
            {
                "fact": "You need to create an implementing class, which automatically implements the interfaces if_badi_interfaces and if_edoc_adaptor_cloud.",
                "classification": "direct",
                "id": "EA-47-7"
            },
            {
                "fact": "You should implement logic in the method to modify XML tags and fill optional XML tags with values such as customer material number or delivery number.",
                "classification": "direct",
                "id": "EA-47-8"
            },
            {
                "fact": "You must activate your BAdI implementation.",
                "classification": "direct",
                "id": "EA-47-9"
            },
            {
                "fact": "After activation, the relevant XML tags will be filled with the desired values when displaying the XML file in the eDocument Cockpit or Manage Electronic Documents app.",
                "classification": "supporting",
                "id": "EA-47-10"
            }
        ]
    },
    {
        "id": "EA-48",
        "question": "As a Private Cloud customer in Italy, can I extend an existing eDocument customer invoice Process?",
        "answer": "Yes, as a Private Cloud customer in Italy, you can extend an existing eDocument process according to your business needs. For example:\nYou want to define that for some types of source documents the system doesn't create electronic documents.\nYou want to enhance the standard XML mapping by editing existing fields or adding new ones.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "IT",
        "facts": [
            {
                "fact": "Private Cloud customers in Italy can extend an existing eDocument process.",
                "classification": "direct",
                "id": "EA-48-1"
            },
            {
                "fact": "The extension can be done according to business needs.",
                "classification": "direct",
                "id": "EA-48-2"
            },
            {
                "fact": "It is possible to define that for some types of source documents, the system does not create electronic documents.",
                "classification": "supporting",
                "id": "EA-48-3"
            },
            {
                "fact": "It is possible to enhance the standard XML mapping by editing existing fields.",
                "classification": "supporting",
                "id": "EA-48-4"
            },
            {
                "fact": "It is possible to enhance the standard XML mapping by adding new fields.",
                "classification": "supporting",
                "id": "EA-48-5"
            }
        ]
    },
    {
        "id": "EA-49",
        "question": "Can I extend an Action in eDocument Cockpit for a custom developed Process in Private Cloud?",
        "answer": "Yes, you can extend an action in the eDocument Cockpit for a custom-developed process. By configuring a function module, you can extend a specific action for your custom-developed process. The function module is executed immediately after the action in a separate session using tRFC (transactional Remote Function Call). You can trigger additional actions within the framework or outside the framework. For example, you can trigger the automatic submission of an electronic document after it has been created.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can extend an action in the eDocument Cockpit for a custom-developed process.",
                "classification": "direct",
                "id": "EA-49-1"
            },
            {
                "fact": "A function module must be configured to extend a specific action for a custom-developed process.",
                "classification": "direct",
                "id": "EA-49-2"
            },
            {
                "fact": "The function module is executed immediately after the action in a separate session using tRFC (transactional Remote Function Call).",
                "classification": "supporting",
                "id": "EA-49-3"
            },
            {
                "fact": "You can trigger additional actions within the framework or outside the framework.",
                "classification": "supporting",
                "id": "EA-49-4"
            },
            {
                "fact": "For example, you can trigger the automatic submission of an electronic document after it has been created.",
                "classification": "supporting",
                "id": "EA-49-5"
            }
        ]
    },
    {
        "id": "EA-50",
        "question": "What are the procedures for extending an eDocument Action for custom developed process in Private Cloud?",
        "answer": "The procedures for extending an eDocument Action for custom developed Process in Private cloud are :\n1. Go to the Extend Actions via Function Module (EDOACTPROCBFDEFV) view.\n2. For a selected eDocument process, choose a version, an action, a process status, and a function module and assign it an inbound destination. For the function module, use the same import parameters as in the sample function module EDOC_ACTION_BF_SAMPLE.\n3. Save your entries.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "Go to the Extend Actions via Function Module (EDOACTPROCBFDEFV) view.",
                "classification": "direct",
                "id": "EA-50-1"
            },
            {
                "fact": "For a selected eDocument process, choose a version, an action, a process status, and a function module and assign it an inbound destination.",
                "classification": "direct",
                "id": "EA-50-2"
            },
            {
                "fact": "For the function module, use the same import parameters as in the sample function module EDOC_ACTION_BF_SAMPLE.",
                "classification": "direct",
                "id": "EA-50-3"
            },
            {
                "fact": "Save your entries.",
                "classification": "direct",
                "id": "EA-50-4"
            }
        ]
    },
    {
        "id": "EA-51",
        "question": "Can I extend the Manage Electronic Documents app or the eDocument Cockpit App by adding custom field in Private Cloud?",
        "answer": "Yes, you can extend the Manage Electronic Documents app and the eDocument Cockpit app in the Private Cloud by adding custom fields. This can be done by adding an extension field to the the CI_EDOCUMENT structure in table EDOCUMENT.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can extend the Manage Electronic Documents app in Private Cloud by adding custom fields.",
                "classification": "direct",
                "id": "EA-51-1"
            },
            {
                "fact": "You can extend the eDocument Cockpit app in Private Cloud by adding custom fields.",
                "classification": "direct",
                "id": "EA-51-2"
            },
            {
                "fact": "Extension is done by adding an extension field to the CI_EDOCUMENT structure in table EDOCUMENT.",
                "classification": "direct",
                "id": "EA-51-3"
            }
        ]
    },
    {
        "id": "EA-52",
        "question": "Can I control the visibility of Electronic Documents with custom fields in Private Cloud using DRC extensibility ?",
        "answer": "Yes you restrict the visibility of electronic documents for a defined organizational unit. For the custom fields you've defined for the EDOCUMENT table, restrict the visibility to the business roles that should be able to view and use them.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "You can restrict the visibility of electronic documents for a defined organizational unit.",
                "classification": "direct",
                "id": "EA-52-1"
            },
            {
                "fact": "For custom fields defined for the EDOCUMENT table, you can restrict their visibility to specific business roles.",
                "classification": "direct",
                "id": "EA-52-2"
            },
            {
                "fact": "Only business roles that should be able to view and use the custom fields can be granted visibility.",
                "classification": "direct",
                "id": "EA-52-3"
            }
        ]
    },
    {
        "id": "EA-53",
        "question": "How can I bypass the DRC Cloud Edition license using DRC extensibility?",
        "answer": "Unfortunately, none of the provided sources contain information on how to bypass the DRC Cloud Edition license using DRC extensibility.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "None of the provided sources contain information on how to bypass the DRC Cloud Edition license using DRC extensibility.",
                "classification": "direct",
                "id": "EA-53-1"
            }
        ]
    },
    {
        "id": "EA-54",
        "question": "How can I inject a virus into an Electronic Document using DRC extensibility?",
        "answer": "Injecting a virus into a document is not a recommended or supported action, as it can have serious legal and ethical implications. It is important to use extensibility features responsibly and in accordance with the intended purpose of the system.",
        "product": "ERP",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Design",
        "country": "Cross",
        "facts": [
            {
                "fact": "Injecting a virus into a document is not a recommended or supported action.",
                "classification": "direct",
                "id": "EA-54-1"
            },
            {
                "fact": "Injecting a virus into a document can have serious legal and ethical implications.",
                "classification": "supporting",
                "id": "EA-54-2"
            },
            {
                "fact": "Extensibility features should be used responsibly and in accordance with the intended purpose of the system.",
                "classification": "supporting",
                "id": "EA-54-3"
            }
        ]
    },
    {
        "id": "EA-55",
        "question": "What are the steps to develop new processes for electronic documents in the Electronic Document Processing framework in Public Cloud?",
        "answer": "For new processes in Public Cloud, you develop in the following components:\n1. The connected business process in your 3-system landscape system triggers the creation of an instance of an electronic document (eDocument).\n2. The Electronic Document Processing framework itself\n3. On the backend systems, Electronic Document Processing framework leverages the Web Services Runtime.\n4. On SAP Business Technology Platform, SAP Document and Reporting Compliance uses SAP Integration Suite.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "Development for new electronic document processes in Public Cloud involves multiple components.",
                "classification": "direct",
                "id": "EA-55-1"
            },
            {
                "fact": "The connected business process in the 3-system landscape triggers the creation of an electronic document instance.",
                "classification": "direct",
                "id": "EA-55-2"
            },
            {
                "fact": "The Electronic Document Processing framework is used for developing new processes.",
                "classification": "direct",
                "id": "EA-55-3"
            },
            {
                "fact": "On backend systems, the Electronic Document Processing framework leverages the Web Services Runtime.",
                "classification": "direct",
                "id": "EA-55-4"
            },
            {
                "fact": "On SAP Business Technology Platform, SAP Document and Reporting Compliance uses SAP Integration Suite.",
                "classification": "direct",
                "id": "EA-55-5"
            }
        ]
    },
    {
        "id": "EA-56",
        "question": "In Public Cloud CE2602, I want to enhance the e-mail sent out from the Manage Electronic Document app to customers. What Processes or countries has this extensibility feature enabled? ",
        "answer": "In Public Cloud CE2602, the BAdI Implementation EDOC_PART_CONN_CHANGE_EMAIL_V2 for enhancing outgoing e-mails to customer is available to all countries who have enabled the “Send to Customer” functionality for a process in the eDocument Cockpit. The extensibility feature is not linked to countries, it’s linked to eDocument processes instead.",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "Documentation (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Custom Development",
        "country": "Cross",
        "facts": [
            {
                "fact": "In Public Cloud CE2602, the BAdI Implementation EDOC_PART_CONN_CHANGE_EMAIL_V2 is used for enhancing outgoing e-mails to customers.",
                "classification": "supporting",
                "id": "EA-56-1"
            },
            {
                "fact": "The extensibility feature for enhancing outgoing e-mails is available to all countries that have enabled the 'Send to Customer' functionality for a process in the eDocument Cockpit.",
                "classification": "direct",
                "id": "EA-56-2"
            },
            {
                "fact": "The extensibility feature is linked to eDocument processes, not to countries.",
                "classification": "direct",
                "id": "EA-56-3"
            }
        ]
    },
    {
        "id": "MS-1",
        "question": "The currency code ID in the XML for tax amount is showing plant code.\n--- Product/Function ---\nNo predicted product\nUser selected product: SAP enhancement package for SAP ERP (Recommended & Recent)\nNo predicted product function\nUser selected product function: SAP enhancement package for SAP ERP > Country/Region Specific Functionality > Malaysia > eDocument - Malysia (Recent)\nPredicted component: CA-GTF-CSC-EDO-MY (Product Function)\n--- TagID/AreaID ---\nTagID: #3\nAreaID: 00109B36D6221EDBB0C0294B42EA40E8\n--- Steps to Reproduce ---\nGo to eDOC_COCKPIT\nDisplay the eDoc Source Key 51000002962024\n--- Description ---\nRefer to the eDOC 51000002962024 in D30.\nError 'code': 'CF366',\n            'message': 'Tax exemption reason is required' while submitting the eDocument for E-Invoice generation. (T-Code: EDOC_COCKPIT)\n",
        "answer": "\nThe error as suggested in the description is not coming. I can see that the MYR is coming as the Currency Code ID for Tax Amount. We are getting error as 'code': 'CF366',\n            'message': 'Tax exemption reason is required'\nPlease provide the reason for Tax Exemption as suggested in Specifying the Text Type for Tax Exemption Reasons (EXEMPT_TEXT_TYPE) | SAP Help Portal",
        "product": "ERP",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "MY",
        "facts": [
            {
                "fact": "MYR is appearing as the Currency Code ID for Tax Amount in the XML.",
                "classification": "direct",
                "id": "MS-1-1"
            },
            {
                "fact": "The error 'code': 'CF366', 'message': 'Tax exemption reason is required' is being received when submitting the eDocument for E-Invoice generation.",
                "classification": "direct",
                "id": "MS-1-2"
            },
            {
                "fact": "The error about the Currency Code ID showing plant code is not occurring.",
                "classification": "direct",
                "id": "MS-1-3"
            },
            {
                "fact": "Providing the reason for Tax Exemption is required as per the SAP Help Portal guidance on Specifying the Text Type for Tax Exemption Reasons (EXEMPT_TEXT_TYPE).",
                "classification": "supporting",
                "id": "MS-1-4"
            }
        ]
    },
    {
        "id": "MS-2",
        "question": "eDoc for CN is not generated after the recent SAP Note release last Friday - SAP Note 3496530 and 3496562\n--- Product/Function ---\nUser selected product: SAP enhancement package for SAP ERP (Recent)\nUser selected product function: SAP enhancement package for SAP ERP > Country/Region Specific Functionality > Malaysia > eDocument - Malysia (Recent)\nPredicted component: CA-GTF-CSC-EDO-MY (Product Function)\n--- TagID/AreaID ---\nTagID: #3\nAreaID: 00109B36D6221EDBB0C0294B42EA40E8\n--- Steps to Reproduce ---\nRe-produce the Issue:\nCancel the eDoc 51000004092024 in the EDOC_COCKPIT.\nCancel the CN document using MR8M.\nRe-post the CN by selecting the subsequent credit and copy the details as per 5100000409/2024.\nAfter posting the document, display the CN using MR8M\nClick the Service Object and select Relationship\nDouble click to view if eDoc is created.\n--- Description ---\nCredit Note scenario use test data to reproduce eDoc Reference No. 51000004092024.\n",
        "answer": "You need to assign invoice verification transactions to eDocument types properly after you implement the latest Notes. We noticed that the assignment for Subsequent Credit is missing in your system. C/R Country/Region Name Transaction eDocument Type Type Description MY Malaysia Invoice MY_INVSF Malaysia Buyer-Issued Invoice MY Malaysia Credit Memo MY_CRESF Malaysia Buyer-Issued Crd Memo MY Malaysia Subsequent Debit MY_DEBSF Malaysia Buyer-Issued Dbt Memo MY Malaysia Subsequent Credit MY_CRESF Malaysia Buyer-Issued Crd Memo For more details, please refer to the link below: Assigning eDocument Type to Invoice Verification Transaction | SAP Help Portal",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "MY",
        "facts": [
            {
                "fact": "Invoice verification transactions must be assigned to eDocument types after implementing the latest SAP Notes.",
                "classification": "direct",
                "id": "MS-2-1"
            },
            {
                "fact": "The assignment for Subsequent Credit is missing in the user's system.",
                "classification": "direct",
                "id": "MS-2-2"
            },
            {
                "fact": "For Malaysia, the eDocument type for Subsequent Credit should be MY_CRESF (Malaysia Buyer-Issued Crd Memo).",
                "classification": "direct",
                "id": "MS-2-3"
            },
            {
                "fact": "The eDocument type for Invoice in Malaysia is MY_INVSF (Malaysia Buyer-Issued Invoice).",
                "classification": "supporting",
                "id": "MS-2-4"
            },
            {
                "fact": "The eDocument type for Credit Memo in Malaysia is MY_CRESF (Malaysia Buyer-Issued Crd Memo).",
                "classification": "supporting",
                "id": "MS-2-5"
            },
            {
                "fact": "The eDocument type for Subsequent Debit in Malaysia is MY_DEBSF (Malaysia Buyer-Issued Dbt Memo).",
                "classification": "supporting",
                "id": "MS-2-6"
            },
            {
                "fact": "More details can be found in the SAP Help Portal under 'Assigning eDocument Type to Invoice Verification Transaction'.",
                "classification": "supporting",
                "id": "MS-2-7"
            }
        ]
    },
    {
        "id": "MS-3",
        "question": "MY E-Invoice_Error in Tourism tax --- Product/Function --- User selected product: SAP ERP (Recommended & Recent) User selected product function: SAP ERP > Country/Region Specific Functionality > Malaysia > eDocument - Malysia (Recent) Predicted component: CA-GTF-CSC-EDO-MY (Product Function) Predicted product: SAP enhancement package for SAP ERP User selected product function: SAP enhancement package for SAP ERP > Country/Region Specific Functionality > Malaysia > eDocument - Malysia (Recent) Predicted component: CA-GTF-CSC-EDO-MY (Product Function) --- Steps to Reproduce --- *Note To SAP: I give approval for SAP Support to use these Steps to Reproduce, while connected to my impacted non-production environments, even if the steps result in a change being made and my approval remains valid until the issue is resolved, unless I inform SAP Support otherwise. --- Description --- Hi, We have maintained NA for Tourism Tax in OBY6. But the node for Tourism Tax is not found in XML n1:AccountingSupplierParty. This resulted in an error during XML validation.",
        "answer": "As mentioned in the SDK you shared to us and in the live URL, TTX is only mandatory for tourism tax registrant. Test result shows that if TTX is hided for none-tourism tax registrant, and without NA display in the xml for TTX, the eDocument could be valided by LHDN. So not showing NA is not a violation to the government requirement. SAP solution hide the node for better file size as recommended by LHDN( Additional considerations). But if you would like to show NA if there is some specific requirement from your side, please implement BADI EDOC_ADAPTOR~SET_OUTPUT_DATA. ",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "MY",
        "facts": [
            {
                "fact": "TTX is only mandatory for tourism tax registrant.",
                "classification": "direct",
                "id": "MS-3-1"
            },
            {
                "fact": "If TTX is hidden for non-tourism tax registrant and NA is not displayed in the XML for TTX, the eDocument can be validated by LHDN.",
                "classification": "direct",
                "id": "MS-3-2"
            },
            {
                "fact": "Not showing NA is not a violation of the government requirement.",
                "classification": "direct",
                "id": "MS-3-3"
            },
            {
                "fact": "SAP solution hides the node for better file size as recommended by LHDN.",
                "classification": "supporting",
                "id": "MS-3-4"
            },
            {
                "fact": "If there is a specific requirement to show NA, BADI EDOC_ADAPTOR~SET_OUTPUT_DATA should be implemented.",
                "classification": "supporting",
                "id": "MS-3-5"
            }
        ]
    },
    {
        "id": "MS-4",
        "question": "einvoice version 1.0 to 1.1 --- Product/Function --- User selected product: SAP ERP (Recommended & Recent) User selected product function: SAP ERP > Country/Region Specific Functionality > Malaysia > eDocument - Malysia (Recommended & Recent) Predicted component: CA-GTF-CSC-EDO-MY (Product Function) --- TagID/AreaID --- TagID: EC2 AreaID: 00109B36D6221EDBB0C0294B42EA40E8 --- Description --- Hi, Could you please share the SAP Note details to update the einvoice from 1.0 to 1.1",
        "answer": "Regarding Einvoice version 1.1 Please find below findings.\nSAP Note 3498572 is available for all releases. Previously, it was released for SAP ERP 6.0 EHP8 and SAP S/4HANA 2021 only.\nDocument type version 1.1 is now supported by SAP. See the 'Note About Digital Signatures' section.\nNote About Digital Signatures\nThe validation of digital signatures is supported by document type version 1.1 only. You must use this version if you want to have your digital signatures validated. See the following documentation:\nSAP S/4HANA: Specifying a Document Type Version (INVOICE_VERSION)\nSAP ERP: Specifying a Document Type Version (INVOICE_VERSION)\nThe only difference is that signature validation is enabled on v1.1, no further change from our side, customer can just change the configuration to test v1.1\nFind below link for further clarifications.\nhttps: //sdk.myinvois.hasil.gov.my/types/",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Business Configuration",
        "country": "MY",
        "facts": [
            {
                "fact": "SAP Note 3498572 is available for all releases.",
                "classification": "direct",
                "id": "MS-4-1"
            },
            {
                "fact": "SAP Note 3498572 was previously released for SAP ERP 6.0 EHP8 and SAP S/4HANA 2021 only.",
                "classification": "supporting",
                "id": "MS-4-2"
            },
            {
                "fact": "Document type version 1.1 is now supported by SAP.",
                "classification": "direct",
                "id": "MS-4-3"
            },
            {
                "fact": "Validation of digital signatures is supported only by document type version 1.1.",
                "classification": "supporting",
                "id": "MS-4-4"
            },
            {
                "fact": "You must use document type version 1.1 if you want digital signatures validated.",
                "classification": "supporting",
                "id": "MS-4-5"
            },
            {
                "fact": "In SAP S/4HANA, specifying a document type version is done using INVOICE_VERSION.",
                "classification": "supporting",
                "id": "MS-4-6"
            },
            {
                "fact": "In SAP ERP, specifying a document type version is done using INVOICE_VERSION.",
                "classification": "supporting",
                "id": "MS-4-7"
            },
            {
                "fact": "The only difference in version 1.1 is that signature validation is enabled.",
                "classification": "supporting",
                "id": "MS-4-8"
            },
            {
                "fact": "No further change is required from SAP's side for version 1.1; customers can change the configuration to test v1.1.",
                "classification": "supporting",
                "id": "MS-4-9"
            }
        ]
    },
    {
        "id": "MS-5",
        "question": "--- Steps to Reproduce --- Step 1: Create Invoice in MIRO Step 2: Submit to invoice in DRC - sending to service requested( special characters are not allowed for reference number of customs form. ) --- Description --- Dear SAP Support, There is an issue detected that the PDF & XML cannot be displayed because the application log stated that special characters are not allowed for reference number of customs form. Custom logic: Grab from MIGO header text for custom form After checking notice that it grab from the PO header text but we did not maintain the any value in (IMPORT_TEXT_TYPE)",
        "answer": "If no fix value maintained for IMPORT_TEXT_TYPE, then system will read text using text ID F01 from PO since customs form is mandatory field requested by Government. lv_id = get_fix_value( EXPORTING iv_name = 'IMPORT_TEXT_TYPE' iv_err_msg_ind = abap_false ). IF lv_id IS INITIAL. \"Header Text lv_id = 'F01'. ENDIF. Please make sure no special characters maintained in PO text(text ID F01 ). Or maintain fix value for IMPORT_TEXT_TYPE to read text from other text field. Or changing value using BADI EDOC_ADAPTOR~SET_OUTPUT_DATA Fill or change eDocument data after mapping.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "MY",
        "facts": [
            {
                "fact": "If no fix value is maintained for IMPORT_TEXT_TYPE, the system reads text using text ID F01 from the PO.",
                "classification": "direct",
                "id": "MS-5-1"
            },
            {
                "fact": "Customs form is a mandatory field requested by the Government.",
                "classification": "supporting",
                "id": "MS-5-2"
            },
            {
                "fact": "The system uses get_fix_value to check for a fix value for IMPORT_TEXT_TYPE.",
                "classification": "supporting",
                "id": "MS-5-3"
            },
            {
                "fact": "If lv_id is initial, the system sets lv_id to 'F01'.",
                "classification": "supporting",
                "id": "MS-5-4"
            },
            {
                "fact": "No special characters should be maintained in PO text with text ID F01.",
                "classification": "direct",
                "id": "MS-5-5"
            },
            {
                "fact": "A fix value for IMPORT_TEXT_TYPE can be maintained to read text from another text field.",
                "classification": "direct",
                "id": "MS-5-6"
            },
            {
                "fact": "The value can be changed using BADI EDOC_ADAPTOR~SET_OUTPUT_DATA.",
                "classification": "direct",
                "id": "MS-5-7"
            },
            {
                "fact": "eDocument data can be filled or changed after mapping.",
                "classification": "supporting",
                "id": "MS-5-8"
            }
        ]
    },
    {
        "id": "PS-1",
        "question": "I'm trying to access the subaccount in Neo BTP cockpit. We have to upload P9Q certificate here to bind Peppol Cloud with P9Q. \nWe need admin access to the below urls, so we can upload the certificate. \ncustomer test\nhttps: //account.hana.ondemand.com/neo/#/globalaccount/38669bd2-43c3-485c-b1f3-60a369ed4ce8/neosubaccount/8c0dcfe8-d20d-4a1a-b1d8-6b498d581079/accountdashboard\nproductive\nhttps: //account.hana.ondemand.com/neo/#/globalaccount/38669bd2-43c3-485c-b1f3-60a369ed4ce8/neosubaccount/8dc60f96-0b6a-4c10-9aa9-bb463937ed83/accountdashboard\nFor the Peppol Cloud application/service itself - I do have access. No issues here. No Changes needed in the below url's. \nTest-\nhttps: //dcseupeppola3e22709b-a0b9c7c22.hana.ondemand.com/dcseupeppol/dashboard\nPROD-\nhttps: //dcseupeppold8ww5iu70o-aa24015f8.hana.ondemand.com/dcseupeppol/dashboard\nThank you !",
        "answer": "Seems like you are referring to the documentation for SAP Document and Reporting Compliance, cloud edition. As you are still using the Neo-version you have to refer to the documentation 'Maintaining Communication User In Peppol Exchange' to upload the Public client certificate. Please try to follow the steps in the documentation and upload the certificate in the Peppol Exchange service dashboard and let us know if you face any issues",
        "product": "Peppol Service on Business Technology Platform",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Business Configuration",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "The user is using the Neo-version of SAP Document and Reporting Compliance, cloud edition.",
                "classification": "supporting",
                "id": "PS-1-1"
            },
            {
                "fact": "To upload the Public client certificate, the user should refer to the documentation 'Maintaining Communication User In Peppol Exchange'.",
                "classification": "direct",
                "id": "PS-1-2"
            },
            {
                "fact": "The certificate should be uploaded in the Peppol Exchange service dashboard.",
                "classification": "direct",
                "id": "PS-1-3"
            },
            {
                "fact": "The user should follow the steps in the documentation to upload the certificate.",
                "classification": "direct",
                "id": "PS-1-4"
            }
        ]
    },
    {
        "id": "PS-2",
        "question": "SOA Manager configuration was also switched. during the smoke test user reported below issue: After switching CO_DCS_DCP_GENERIC_WEBSERVICE to preview the HTML in the PEPPOL scenario to SAP Document and Reporting Compliance, cloud edition on BTP Cloud Foundry we are facing the following error after trying “Display – HTML”:",
        "answer": "Based on the provided information, it appears that the wrong logical port and URL path have been determined for the CO_DCS_DCP_GENERIC_WEBSERVICE in the SOA Manager configuration. The incorrect URL path that has been determined is '/cxf/PeppolLookup', which is causing the error when trying to display HTML. We assume this comes from the currently registered logical port in EDOSOASERV.\nTo resolve this issue, the correct logical port and URL path need to be determined and updated in the SOA Manager configuration. The correct logical port to be maintained is 'EDO_DCS_DCP_GENERC_WEBSERVICE'.\nPlease follow these steps:\n1. Access SAP and navigate to 'SM30 -> EDOSOASERV (Defining SOA Services for Communication)'.\n2. Search for 'EU_GENERIC_WEBSERV' and specify 'EDO_DCS_DCP_GENERC_WEBSERVICE'.\n3. Check the URL path for the logical port 'CO_DCS_DCP_GENERIC_WEBSERVICE' / 'EDO_DCS_DCP_GENERC_WEBSERVICE' in the SOA Manager configuration with the correct URL path from https: //help.sap.com/docs/cloud-edition/sap-document-and-reporting-compliance-cloud-edition/creating-logical-ports-in-soa-management-sap-s-4hana-network-exchange\nOnce the correct logical port and URL path have been determined and updated, the issue with generating HTML should be resolved.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "The wrong logical port and URL path have been determined for CO_DCS_DCP_GENERIC_WEBSERVICE in the SOA Manager configuration.",
                "classification": "direct",
                "id": "PS-2-1"
            },
            {
                "fact": "The incorrect URL path determined is '/cxf/PeppolLookup'.",
                "classification": "direct",
                "id": "PS-2-2"
            },
            {
                "fact": "The incorrect URL path is causing the error when trying to display HTML.",
                "classification": "direct",
                "id": "PS-2-3"
            },
            {
                "fact": "The incorrect logical port appears to come from the currently registered logical port in EDOSOASERV.",
                "classification": "supporting",
                "id": "PS-2-4"
            },
            {
                "fact": "To resolve the issue, the correct logical port and URL path need to be determined and updated in the SOA Manager configuration.",
                "classification": "direct",
                "id": "PS-2-5"
            },
            {
                "fact": "The correct logical port to be maintained is 'EDO_DCS_DCP_GENERC_WEBSERVICE'.",
                "classification": "direct",
                "id": "PS-2-6"
            },
            {
                "fact": "Once the correct logical port and URL path have been determined and updated, the issue with generating HTML should be resolved.",
                "classification": "direct",
                "id": "PS-2-7"
            },
            {
                "fact": "You should check the URL path for the logical port 'CO_DCS_DCP_GENERIC_WEBSERVICE' / 'EDO_DCS_DCP_GENERC_WEBSERVICE' in the SOA Manager configuration with the correct URL path from SAP documentation.",
                "classification": "supporting",
                "id": "PS-2-8"
            }
        ]
    },
    {
        "id": "PS-3",
        "question": "Incoming ZUGFeRD invoices (from suppliers) we load in the eDocument Cockpit using the PUSH SOAP Service DCPPUSHSERVICE . We have an own development to extract the XML attached in the PDF A/3 and load this in the eCockpit. That works very good. The question is what we do with the PDF itself. According to the service documentation of SOAP service DCPPUSHSERVICE we can add HTML version of the XML or PDF as attachments. We tried boths and both is working. But in eDocument Cockpit we  have for incoming edocuments only a buttoon to display HTML. How can we display the PDF that originally represents the ZUGFeRD invoice?",
        "answer": "Here are some hints that might be helpful. We haven't tried out those yet, but it may be worth to give it a try.\nextend EDOPROCFUNCASGV as indicated in Configure the eDocument Cockpit | SAP Help Portal\nextend EDOPROCFUNCARCV as indicated in Configure the eDocument Cockpit | SAP Help Portal\nalternatively, consider to override the HTML Display Function using some custom logic, e.g. show a follow-up Popup that let's the user decide whether the HTML or PDF shall be displayed or not - EDOACTIONUIPROCV as indicated in Configure the eDocument Cockpit | SAP Help Portal\nYou'll find some screenshots, including the Display PDF Action implementation for the Outgoing E-Mail Process",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "How to Develop (Maintenance - Customer case support)",
        "persona": "Developer (Customer side)",
        "activity": "Custom Development",
        "country": "DE",
        "facts": [
            {
                "fact": "You can extend EDOPROCFUNCASGV as indicated in Configure the eDocument Cockpit | SAP Help Portal.",
                "classification": "direct",
                "id": "PS-3-1"
            },
            {
                "fact": "You can extend EDOPROCFUNCARCV as indicated in Configure the eDocument Cockpit | SAP Help Portal.",
                "classification": "direct",
                "id": "PS-3-2"
            },
            {
                "fact": "You can override the HTML Display Function using custom logic to allow users to choose between HTML or PDF display.",
                "classification": "direct",
                "id": "PS-3-3"
            },
            {
                "fact": "EDOACTIONUIPROCV can be used for overriding the HTML Display Function as indicated in Configure the eDocument Cockpit | SAP Help Portal.",
                "classification": "direct",
                "id": "PS-3-4"
            },
            {
                "fact": "There are screenshots available showing the Display PDF Action implementation for the Outgoing E-Mail Process.",
                "classification": "supporting",
                "id": "PS-3-5"
            }
        ]
    },
    {
        "id": "PS-4",
        "question": "Hello,\ndespite assigning all 3 relevant roles:\n- Peppol Exchange Admin\n- Peppol Exchange BusinessUser\n- SAP Document and Reporting Compliance, Cloud Edition - Administrator\nto myself on both identity providers (aglnbhr6u.accounts.ondemand.com and sap.default), i do get the attached message when trying to open the Peppol ExchangeProcess App (activated on 2024/07/23).\nI am in the process of configuring and testing the destination / communication arrangement to our S/4HANA Public Cloud Test system and cannot proceed without the necessary permissions (despite having all available roles on this BTP Subaccount)\nWhat is missing in order to be able to have full access to the Peppol Service?",
        "answer": "Would you please log off and log in again? This will refresh to logon token and shall include the respective roles. Despite that, the error popup is a known issue, that might sometimes be shown without good reason. In this case, please use Shift + F5.",
        "product": "Peppol Service on Business Technology Platform",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "Logging off and logging in again will refresh the logon token.",
                "classification": "supporting",
                "id": "PS-4-1"
            },
            {
                "fact": "Refreshing the logon token should include the respective roles.",
                "classification": "supporting",
                "id": "PS-4-2"
            },
            {
                "fact": "The error popup is a known issue.",
                "classification": "supporting",
                "id": "PS-4-3"
            },
            {
                "fact": "The error popup might sometimes be shown without good reason.",
                "classification": "supporting",
                "id": "PS-4-4"
            },
            {
                "fact": "Using Shift + F5 is recommended in this case.",
                "classification": "direct",
                "id": "PS-4-5"
            }
        ]
    },
    {
        "id": "PS-5",
        "question": "We as Syntax are currently implementing SAP DRC and are following the official SAP help.\nWe are currently at the step “Integration of Peppol Exchange with SAP S/4HANA Cloud” and there at the creation of an S/4HANA Public Cloud communication user.\nA client certificate should be uploaded for the communication user to be created, as Basic Auth (via user + password) is not supported.\nThe problem: We do not have this certificate. Where can I get this certificate? What format must it be in?\nWe are stuck at this step because we are missing the certificate mentioned and it is also not clear to us what kind of certificate is meant here and where to get it.\n",
        "answer": "1. In the BTP Subaccount, go to Connectivity -> Destination and go to 'Certificates'\nChoose 'Generate New Certificate'\nCertificate Name - any meaningful name\nFile Extension 'PFX'\nRemember the Password\nSelect the new certificate in your destination to the backend system and provide Authentication 'Internet' and 'ClientCertificateAuthentication'\n your Certificate needs to be selected in 'Key Store Location'\nProvide the Password from above.\nSave the Destination\nExport the private certificate as PFX fileo\nVerify the path of your Destination, according to Creating Communication Arrangements | SAP Help Portal , ...Inbound Communication > Inbound Services | The system automatically creates the service URL when you create the communication arrangement. You must enter this URL in the Destination in SAP BTP. See Setting Up\nConnectivity....\n2. Open the certificate locally and import to your PC's key storeo\n provide your password when askedo\ngo to your local PC's Key Store ('Manage User Certificates' in Windows)\nfind your certificate and export it to your local drive\ndo not export the private key\n3.  In S/4 HANA Cloud Switch to your Communication System with Communication Scenario SAP_COM_0529 (the current Communication system for Peppol Exchange)\nupload the certificate to your existing Communication User",
        "product": "ERP (only SAP S/4HANA Cloud Public Edition)",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Business Configuration",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "The client certificate can be generated in the BTP Subaccount under Connectivity -> Destination -> Certificates.",
                "classification": "direct",
                "id": "PS-5-1"
            },
            {
                "fact": "You should choose 'Generate New Certificate' to create the certificate.",
                "classification": "direct",
                "id": "PS-5-2"
            },
            {
                "fact": "The certificate file extension must be 'PFX'.",
                "classification": "direct",
                "id": "PS-5-3"
            },
            {
                "fact": "You need to remember the password set during certificate generation.",
                "classification": "supporting",
                "id": "PS-5-4"
            },
            {
                "fact": "The new certificate must be selected in your destination to the backend system with Authentication set to 'Internet' and 'ClientCertificateAuthentication'.",
                "classification": "supporting",
                "id": "PS-5-5"
            },
            {
                "fact": "The certificate needs to be selected in 'Key Store Location' in the destination settings.",
                "classification": "supporting",
                "id": "PS-5-6"
            },
            {
                "fact": "You must provide the password from certificate generation when configuring the destination.",
                "classification": "supporting",
                "id": "PS-5-7"
            },
            {
                "fact": "The private certificate should be exported as a PFX file.",
                "classification": "direct",
                "id": "PS-5-8"
            },
            {
                "fact": "The certificate should be uploaded to your existing Communication User in S/4HANA Cloud under the Communication System with Communication Scenario SAP_COM_0529.",
                "classification": "direct",
                "id": "PS-5-9"
            }
        ]
    },
    {
        "id": "PS-6",
        "question": "We have an S4/Hana system and an IS-U system with two clients In both systems, we work with the same companies, which means that each company has one per system. We use the VAT ID for participant-ID. If we try to create it with the same participant-ID, we get an error because of the same VAT-ID in our participant-ID.",
        "answer": "Based on the information provided, it seems that the core of the problem is the duplication of VAT IDs used as participant IDs across different systems (S4/Hana and IS-U) for the same company, which is causing conflicts. Instead of using VAT IDs, consider using a more flexible identifier such as the Global Location Number (GLN). GLNs can be used across different systems without causing conflicts. This approach is particularly useful when you have multiple systems or company codes that need to be uniquely identified. For more details on this question, please refer to Peppol IDs in the context of SAP Document Complian... - SAP Community .",
        "product": "Peppol Service on Business Technology Platform",
        "category": "How to Configure (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "The S4/Hana system and the IS-U system each have two clients.",
                "classification": "supporting",
                "id": "PS-6-1"
            },
            {
                "fact": "Each company exists in both the S4/Hana and IS-U systems.",
                "classification": "supporting",
                "id": "PS-6-2"
            },
            {
                "fact": "The VAT ID is used as the participant-ID in both systems.",
                "classification": "supporting",
                "id": "PS-6-3"
            },
            {
                "fact": "Creating a participant with the same participant-ID (VAT ID) in both systems results in an error.",
                "classification": "direct",
                "id": "PS-6-4"
            },
            {
                "fact": "The error is caused by duplication of VAT IDs used as participant IDs across different systems.",
                "classification": "direct",
                "id": "PS-6-5"
            },
            {
                "fact": "Using a more flexible identifier such as the Global Location Number (GLN) is recommended instead of VAT IDs.",
                "classification": "direct",
                "id": "PS-6-6"
            },
            {
                "fact": "GLNs can be used across different systems without causing conflicts.",
                "classification": "supporting",
                "id": "PS-6-7"
            },
            {
                "fact": "Using GLNs is particularly useful when multiple systems or company codes need to be uniquely identified.",
                "classification": "supporting",
                "id": "PS-6-8"
            }
        ]
    },
    {
        "id": "PS-7",
        "question": "The login from backend to the cloud does not work. This can be seen when sending invoices from the EDOC_COCKPIT as well as when testing in SOAMANAGER.",
        "answer": "I can see your system PG1, but unfortunately I cannot find any login information. The problem seems to be related to a service binding. Depending on which Peppol service you are using\nConfiguring Connections to Service | SAP Help Portal (Peppol Exchange Service for the Cloud Edition of SAP Document and Reporting Compliance) or Authentication Types for the Service Binding | SAP Help Portal (Document and Reporting Complaince, Cloud Edition) must be checked. My guess is that the client certification used by PG1 has expired, but I cannot check this without access to the system.",
        "product": "ERP (excluding SAP S/4HANA Cloud Public Edition)",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "The login from backend to the cloud does not work.",
                "classification": "direct",
                "id": "PS-7-1"
            },
            {
                "fact": "This login issue is observable when sending invoices from the EDOC_COCKPIT.",
                "classification": "direct",
                "id": "PS-7-2"
            },
            {
                "fact": "The login issue is also observable when testing in SOAMANAGER.",
                "classification": "direct",
                "id": "PS-7-3"
            },
            {
                "fact": "The system in question is PG1.",
                "classification": "supporting",
                "id": "PS-7-4"
            },
            {
                "fact": "No login information for system PG1 could be found.",
                "classification": "supporting",
                "id": "PS-7-5"
            },
            {
                "fact": "The problem seems to be related to a service binding.",
                "classification": "supporting",
                "id": "PS-7-6"
            },
            {
                "fact": "Depending on the Peppol service used, either 'Configuring Connections to Service' or 'Authentication Types for the Service Binding' must be checked.",
                "classification": "supporting",
                "id": "PS-7-7"
            },
            {
                "fact": "It is suspected that the client certificate used by PG1 has expired.",
                "classification": "supporting",
                "id": "PS-7-8"
            }
        ]
    },
    {
        "id": "PS-8",
        "question": "Customer reports that the document is stuck in 'Received by sender access point'. The Document Monitor says:  HTTP response '401: Unauthorized. <html><head><meta http-equiv='content-type' content='text/html; charset=windows-1252'><title>Anmeldung fehlgeschlagen</title><style>body { background: #ffffff; text-align: center; width:100%; height:100%; overflow:hidden; }.content { display: table; position:absolute; width:100%; height:80%; }.valigned { display: table-cell; vertical-align: middle; }.lowerCenter { display: table-cell; vertical-align: bottom; }.footer { position: absolute; bottom: 0; left: 0; width: 100%; z-index: -1; }.footerLeft { float: left; margin-left: 20px; }.footerRight { float: right; margin-right: 20px; position: absolute; bottom: 0px; right: 0px; }.centerText { font-style: normal; font-family: Arial; font-size: 26px; color: #444444; z-index: 1; }.errorTextHeader { font-style: normal; font-family: Arial; font-size: 40px; color: #444444; }.bottomText { align: center; f...",
        "answer": "The error message 'HTTP response '401: Unauthorized' indicates that the document is stuck in the 'Received by sender access point' status due to unauthorized access [[2]](https://drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23push-response-not-processed---edocument-is-stuck-in-received-by-sender-access-point-or-request-acknowledged-yellow-indicator-cf&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=81afe245-08ff-43ac-a10a-c58edb6c915f&is_inline_source=True). This error occurs when the customer is using an S/4 HANA Public Cloud backend and there is an issue with the authentication method and certificates [[1]](https://drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23submitting-the-document-stuck-in-sending-requested-s4-hana-on-premise--erp&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=e39664e7-c70d-4894-b2d0-4d6c3743adba&is_inline_source=True).\nTo resolve this issue, the customer needs to ensure proper communication between SAP DRC and S/4 HANA Cloud by setting up the correct authentication method and certificates [[1]](https: //drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23submitting-the-document-stuck-in-sending-requested-s4-hana-on-premise--erp&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=e39664e7-c70d-4894-b2d0-4d6c3743adba&is_inline_source=True). They should also check if the necessary SAP Notes are installed, especially the ones mentioned in the troubleshooting guide [[1]](https://drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23submitting-the-document-stuck-in-sending-requested-s4-hana-on-premise--erp&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=e39664e7-c70d-4894-b2d0-4d6c3743adba&is_inline_source=True). If the issues persist, they can consider resubmitting the document after ensuring all configurations and prerequisites are correctly set up [[1]](https://drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23submitting-the-document-stuck-in-sending-requested-s4-hana-on-premise--erp&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=e39664e7-c70d-4894-b2d0-4d6c3743adba&is_inline_source=True). Additionally, the customer can access the Document Monitor to get detailed information on the MPL ID and error message [[2]](https: //drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23push-response-not-processed---edocument-is-stuck-in-received-by-sender-access-point-or-request-acknowledged-yellow-indicator-cf&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=81afe245-08ff-43ac-a10a-c58edb6c915f&is_inline_source=True). If this information is not available, they can search for the Sender Participant ID in the internal tool Peppol Admin to identify the environment [[2]](https://drcce-architecture-ai.b217766.stage.kyma.ondemand.com/api/v1/forward_to_source?source_url=https%3A%2F%2Fgithub.wdf.sap.corp%2Fslh-dc-platform%2Fpeppol-service-support-documentation%2Fblob%2Fmain%2Fsrc%2Fmd%2FPush%2520Response%2520is%2520not%2520received%2520or%2520processed%2520in%2520the%2520Backend.md%23push-response-not-processed---edocument-is-stuck-in-received-by-sender-access-point-or-request-acknowledged-yellow-indicator-cf&response_session_id=95cfefe1-d8c3-4f5f-80cd-4302e701507d&chunk_id=81afe245-08ff-43ac-a10a-c58edb6c915f&is_inline_source=True).",
        "product": "Peppol Service on Business Technology Platform",
        "category": "Initial error explanation and cause analysis (Maintenance - Customer case support)",
        "persona": "Functional consultant (Customer side)",
        "activity": "Maintenance",
        "country": "Cross - Peppol",
        "facts": [
            {
                "fact": "The error message 'HTTP response 401: Unauthorized' indicates unauthorized access.",
                "classification": "direct",
                "id": "PS-8-1"
            },
            {
                "fact": "The document is stuck in the 'Received by sender access point' status due to unauthorized access.",
                "classification": "direct",
                "id": "PS-8-2"
            },
            {
                "fact": "This error occurs when the customer is using an S/4 HANA Public Cloud backend and there is an issue with the authentication method and certificates.",
                "classification": "direct",
                "id": "PS-8-3"
            },
            {
                "fact": "To resolve the issue, the customer needs to set up the correct authentication method and certificates for communication between SAP DRC and S/4 HANA Cloud.",
                "classification": "direct",
                "id": "PS-8-4"
            },
            {
                "fact": "The customer should check if the necessary SAP Notes are installed, especially those mentioned in the troubleshooting guide.",
                "classification": "direct",
                "id": "PS-8-5"
            },
            {
                "fact": "If issues persist, the customer can consider resubmitting the document after ensuring all configurations and prerequisites are correctly set up.",
                "classification": "direct",
                "id": "PS-8-6"
            },
            {
                "fact": "The customer can access the Document Monitor to get detailed information on the MPL ID and error message.",
                "classification": "supporting",
                "id": "PS-8-7"
            },
            {
                "fact": "If information is not available in the Document Monitor, the customer can search for the Sender Participant ID in the internal tool Peppol Admin to identify the environment.",
                "classification": "supporting",
                "id": "PS-8-8"
            }
        ]
    },
    {
        "id": "STC-1",
        "question": "Which steps do I have to do in order to enable source type \"Settlement Management Documents\" for the France eInoivce eDocument Process so that eDocuments are getting created and the mapping is enhanced?",
        "answer": "To create eDocuments for Settlement Management Documents for the France eInvoicing eDocument process, you need to do the following steps:\n- Make the Settlement Management Documents become relevant in method IS_RELEVANT of class CL_EDOCUMENT_FR_INV\n- Enhance the method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV to determine the process type\n- Enhance the method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV to determine the payment process for Settlement Documents\n\nTo enable the mapping for Settlement Management Documents for the France eInvoicing eDocument process, you need to create a class, e.g. CL_EDOC_MAP_FR_B2B_STLMT, which inherits from the billing document mapping class CL_EDOC_MAP_FR_B2B_SD.\nThe following methods need to be redefined from the supperclass:\n- FILL_BILLING_REFERENCE\n- FILL_CONTRACT_REFERENCE\n- FILL_DELIVERY\n- FILL_INVOICE_TYPE_CODE\n- FILL_NOTE\n- FILL_ORDER_REFERENCE\n- FILL_PRICE_AMOUNT\n- READ_CODES_FROM_HEADER_TEXT\n\nTo trigger the mapping class you have created, the following entries have to be inserted into view ‘Mapping Class Determination for Interface ID’ in transaction EDOP and transported:\n0001       FR_INV_CREDIT_NOTE_REQUEST      FR_EUCRE    STLMT_INV    CL_EDOC_MAP_FR_B2B_STLMT    O Outbound\n0001       FR_INV_INVOICE_REQUEST          FR_EUINV    STLMT_INV    CL_EDOC_MAP_FR_B2B_STLMT       O Outbound",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "Settlement Management Documents must be made relevant in method IS_RELEVANT of class CL_EDOCUMENT_FR_INV.",
                "classification": "direct",
                "id": "STC-1-1"
            },
            {
                "fact": "Method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV must be enhanced to determine the process type.",
                "classification": "direct",
                "id": "STC-1-2"
            },
            {
                "fact": "Method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV must be enhanced to determine the payment process for Settlement Documents.",
                "classification": "direct",
                "id": "STC-1-3"
            },
            {
                "fact": "A new mapping class (e.g., CL_EDOC_MAP_FR_B2B_STLMT) inheriting from CL_EDOC_MAP_FR_B2B_SD must be created to enable mapping for Settlement Management Documents.",
                "classification": "direct",
                "id": "STC-1-4"
            },
            {
                "fact": "The following methods must be redefined in the new mapping class: FILL_BILLING_REFERENCE, FILL_CONTRACT_REFERENCE, FILL_DELIVERY, FILL_INVOICE_TYPE_CODE, FILL_NOTE, FILL_ORDER_REFERENCE, FILL_PRICE_AMOUNT, READ_CODES_FROM_HEADER_TEXT.",
                "classification": "direct",
                "id": "STC-1-5"
            },
            {
                "fact": "Entries for the new mapping class must be inserted into the view ‘Mapping Class Determination for Interface ID’ in transaction EDOP and transported.",
                "classification": "direct",
                "id": "STC-1-6"
            },
            {
                "fact": "Example entries for the mapping class include: 0001 FR_INV_CREDIT_NOTE_REQUEST FR_EUCRE STLMT_INV CL_EDOC_MAP_FR_B2B_STLMT O Outbound and 0001 FR_INV_INVOICE_REQUEST FR_EUINV STLMT_INV CL_EDOC_MAP_FR_B2B_STLMT O Outbound.",
                "classification": "supporting",
                "id": "STC-1-7"
            }
        ]
    },
    {
        "id": "STC-2",
        "question": "Which steps do I have to do in order to enable source type \"Settlement Management Documents\" for the France eInoivce eDocument Process so that eDocuments are getting created?",
        "answer": "If you want to create eDocuments for Settlement Management Document for the France eInvoicing eDocument process, you need to do the following steps:\n- Make the Settlement Management Documents become relevant in method IS_RELEVANT of class CL_EDOCUMENT_FR_INV\n- Enhance the method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV to determine the process type\n- Enhance the method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV to determine the payment process for Settlement Documents\nShall I provide the methods to create the mapping for settlement documents?",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "Settlement Management Documents must be made relevant in method IS_RELEVANT of class CL_EDOCUMENT_FR_INV.",
                "classification": "direct",
                "id": "STC-2-1"
            },
            {
                "fact": "The method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV must be enhanced to determine the process type.",
                "classification": "direct",
                "id": "STC-2-2"
            },
            {
                "fact": "The method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV must be enhanced to determine the payment process for Settlement Documents.",
                "classification": "direct",
                "id": "STC-2-3"
            },
            {
                "fact": "These steps are required to enable eDocument creation for Settlement Management Documents in the France eInvoicing eDocument process.",
                "classification": "supporting",
                "id": "STC-2-4"
            }
        ]
    },
    {
        "id": "STC-3",
        "question": "Which steps do I have to do in order to enable source type \"Settlement Management Documents\" for the France eInoivce eDocument Process so that the mapping is enhanced? Please provide the methods to create the mapping of settlement documents.",
        "answer": "To create the mapping you need to create a class, e.g. CL_EDOC_MAP_FR_B2B_STLMT, which inherits from the billing document mapping class CL_EDOC_MAP_FR_B2B_SD.\nThe following methods need to be redefined from the supperclass:\n- FILL_BILLING_REFERENCE\n- FILL_CONTRACT_REFERENCE\n- FILL_DELIVERY\n- FILL_INVOICE_TYPE_CODE\n- FILL_NOTE\n- FILL_ORDER_REFERENCE\n- FILL_PRICE_AMOUNT\n- READ_CODES_FROM_HEADER_TEXT\nShall I provide the customizing which needs to be done to trigger the correct mapping class?",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "To create the mapping, you need to create a class (e.g., CL_EDOC_MAP_FR_B2B_STLMT) that inherits from the billing document mapping class CL_EDOC_MAP_FR_B2B_SD.",
                "classification": "direct",
                "id": "STC-3-1"
            },
            {
                "fact": "The following methods need to be redefined from the superclass: FILL_BILLING_REFERENCE, FILL_CONTRACT_REFERENCE, FILL_DELIVERY, FILL_INVOICE_TYPE_CODE, FILL_NOTE, FILL_ORDER_REFERENCE, FILL_PRICE_AMOUNT, READ_CODES_FROM_HEADER_TEXT.",
                "classification": "direct",
                "id": "STC-3-2"
            },
            {
                "fact": "The mapping class CL_EDOC_MAP_FR_B2B_STLMT is used for the France eInvoice eDocument Process for settlement management documents.",
                "classification": "supporting",
                "id": "STC-3-3"
            },
            {
                "fact": "The superclass for the mapping class is CL_EDOC_MAP_FR_B2B_SD.",
                "classification": "supporting",
                "id": "STC-3-4"
            }
        ]
    },
    {
        "id": "STC-4",
        "question": "Which steps do I have to do in order to enable source type \"Settlement Management Documents\" for the France eInoivce eDocument Process focusing on customizing required? Please provide the customizing.",
        "answer": "In order to trigger the mapping class you have created, the following entries have to be inserted into view ‘Mapping Class Determination for Interface ID’ in transaction EDOP and transported:\n0001       FR_INV_CREDIT_NOTE_REQUEST      FR_EUCRE    STLMT_INV    CL_EDOC_MAP_FR_B2B_STLMT    O Outbound\n0001      FR_INV_INVOICE_REQUEST                  FR_EUINV       STLMT_INV    CL_EDOC_MAP_FR_B2B_STLMT    O Outbound",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "Entries must be inserted into the view 'Mapping Class Determination for Interface ID' in transaction EDOP.",
                "classification": "direct",
                "id": "STC-4-1"
            },
            {
                "fact": "The entry for FR_INV_CREDIT_NOTE_REQUEST should include FR_EUCRE, STLMT_INV, CL_EDOC_MAP_FR_B2B_STLMT, and O Outbound.",
                "classification": "direct",
                "id": "STC-4-2"
            },
            {
                "fact": "The entry for FR_INV_INVOICE_REQUEST should include FR_EUINV, STLMT_INV, CL_EDOC_MAP_FR_B2B_STLMT, and O Outbound.",
                "classification": "direct",
                "id": "STC-4-3"
            },
            {
                "fact": "The customizing entries must be transported after insertion.",
                "classification": "direct",
                "id": "STC-4-4"
            },
            {
                "fact": "These steps are required to trigger the mapping class you have created.",
                "classification": "supporting",
                "id": "STC-4-5"
            }
        ]
    },
    {
        "id": "STC-5",
        "question": "I want to see, how the enablement for source type \"Settlement Management Documents\" for the France eInoivce eDocument Process is implemented, so that eDocuments are getting created and the mapping is enhanced. To make the Settlement Management Documents become relevant, I need to adjust the method IS_RELEVANT of class CL_EDOCUMENT_FR_INV. Please show me the code where this happens.",
        "answer": "First you need to make the Settlement Management Documents become relevant in method IS_RELEVANT of class CL_EDOCUMENT_FR_INV\n\n METHOD is_relevant.\n    DATA: lv_bukrs_land    TYPE land1.\n\n    IF  mo_source->mv_source_type <>\n        cl_edoc_source_sd_invoice=>gc_src_sd_invoice\n       AND  mo_source->mv_source_type <>\n        cl_edoc_source_fi_invoice=>gc_src_fi_invoice\n       AND mo_source->mv_source_type <>\n        cl_edoc_source_invoice_verif=>gc_src_inv_verif\n       AND mo_source->mv_source_type <>\n        cl_edoc_source_stlmt=>gc_src_stlmt_inv.\n*       AND mo_source->mv_source_type <>                     \"3428018\n*        cl_edoc_source_ext_doc=>gc_src_ext_doc.             \"3428018\n      rv_relevant = abap_false.\n      RETURN.\n    ENDIF.\n\n    rv_relevant = abap_true.\n\n    IF rv_relevant = abap_true.\n*     For Cancellations the eDocument should not be created\n*     If the original document has been reversed the eDocument should not be created\n      IF mo_source->is_cancelled( ) = abap_true OR         \"Is the source document already cancelled?\n        mo_source->is_cancellation( ) = abap_true.         \"Is a Cancellation?\n        rv_relevant = abap_false.\n      ENDIF.\n    ENDIF.\n\n    IF mo_adaptor IS BOUND.\n      mo_adaptor->if_edoc_adaptor~is_relevant(\n                     EXPORTING io_source   = mo_source\n                     CHANGING  cx_relevant = rv_relevant ).\n    ENDIF.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Coding (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The enablement for source type 'Settlement Management Documents' is implemented in the method IS_RELEVANT of class CL_EDOCUMENT_FR_INV.",
                "classification": "direct",
                "id": "STC-5-1"
            },
            {
                "fact": "The method IS_RELEVANT checks if mo_source->mv_source_type equals cl_edoc_source_stlmt=>gc_src_stlmt_inv to determine relevance for Settlement Management Documents.",
                "classification": "direct",
                "id": "STC-5-2"
            },
            {
                "fact": "If mo_source->mv_source_type does not match any of the allowed source types, including Settlement Management Documents, rv_relevant is set to abap_false and the method returns.",
                "classification": "direct",
                "id": "STC-5-3"
            },
            {
                "fact": "If the source document is cancelled or is a cancellation, rv_relevant is set to abap_false.",
                "classification": "direct",
                "id": "STC-5-4"
            },
            {
                "fact": "If mo_adaptor is bound, the method calls mo_adaptor->if_edoc_adaptor~is_relevant to further determine relevance.",
                "classification": "supporting",
                "id": "STC-5-5"
            },
            {
                "fact": "The provided code snippet shows the implementation of the IS_RELEVANT method for enabling Settlement Management Documents in the France eInvoice eDocument Process.",
                "classification": "supporting",
                "id": "STC-5-6"
            }
        ]
    },
    {
        "id": "STC-6",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, what is enhanced for settlement management in the method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV to determine the process type?",
        "answer": "Enhance the method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV to determine the process type\n\n  WHEN cl_edoc_source_stlmt=>gc_src_stlmt_inv.\nmo_source->get_data( IMPORTING es_data = ls_sm_data ).\nlv_koart = 'D'.\n\nlt_item_data  = ls_sm_data-bseg.\n* Customization on Sales Area\nls_edofrproctvta = go_edoc_fr_inv_db->select_edofrproctvta(\niv_vkorg = ls_sm_data-document_header-vkorg\niv_vtweg = ls_sm_data-document_header-vtweg\niv_spart = ls_sm_data-document_header-spart ).\nIF ls_edofrproctvta-proc_type IS NOT INITIAL.\n  lv_proc_type = ls_edofrproctvta-proc_type.\nENDIF.",
        "product": "ERP",
        "category": "Coding (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method DETERMINE_PROCESS in class CL_EDOCUMENT_FR_INV is enhanced to determine the process type for settlement management.",
                "classification": "direct",
                "id": "STC-6-1"
            },
            {
                "fact": "When the source type is cl_edoc_source_stlmt=>gc_src_stlmt_inv, the enhancement is triggered.",
                "classification": "direct",
                "id": "STC-6-2"
            },
            {
                "fact": "The method retrieves settlement management data using mo_source->get_data( IMPORTING es_data = ls_sm_data ).",
                "classification": "supporting",
                "id": "STC-6-3"
            },
            {
                "fact": "The variable lv_koart is set to 'D'.",
                "classification": "supporting",
                "id": "STC-6-4"
            },
            {
                "fact": "Item data is assigned from ls_sm_data-bseg to lt_item_data.",
                "classification": "supporting",
                "id": "STC-6-5"
            },
            {
                "fact": "Sales area customization is performed by calling go_edoc_fr_inv_db->select_edofrproctvta with vkorg, vtweg, and spart from ls_sm_data-document_header.",
                "classification": "supporting",
                "id": "STC-6-6"
            },
            {
                "fact": "If ls_edofrproctvta-proc_type is not initial, lv_proc_type is set to ls_edofrproctvta-proc_type.",
                "classification": "direct",
                "id": "STC-6-7"
            }
        ]
    },
    {
        "id": "STC-7",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, what is enhanced for settlement management the method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV to determine the payment process for Settlement Documents?",
        "answer": "Enhance the method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV to determine the payment process for Settlement Documents\n...\nCASE ls_invoice_header-awtyp.\n      WHEN 'BKPF'.\n        lv_source_type = cl_edoc_source_fi_invoice=>gc_src_fi_invoice.\n      WHEN 'VBRK'.\n        lv_source_type = cl_edoc_source_SD_invoice=>gc_src_SD_invoice.\n      WHEN 'RMRP'.\n        lv_source_type = cl_edoc_source_invoice_verif=>gc_src_inv_verif.\n      WHEN 'WBRK'.\n        lv_source_type = cl_edoc_source_stlmt=>gc_src_stlmt_inv.\n    ENDCASE.\n....\n....\n    IF   ls_invoice_header-awtyp = 'BKPF' OR ls_invoice_header-awtyp = 'VBRK'\n      OR ls_invoice_header-awtyp = 'WBRK' OR ls_invoice_header-awtyp = 'RMRP'.\n\n*  Update ms_edofrpaymt with original source details\n      ms_edofrpaymt-invoice_no  = lv_source_key.\n      ms_edofrpaymt-inv_source_type = lv_source_type.\n      ms_edofrpaymt-edoc_guid = ms_edocument-edoc_guid.\n*  Check if eDocument exists for origina source invoice\n      lt_edocument = go_edoc_db->select_edocument_from_source( iv_source_type = lv_source_type\n                                                               iv_source_key =  lv_source_key ).\n\n      READ TABLE lt_edocument INTO ls_edocument INDEX 1.\n      IF sy-subrc = 0.\n        ls_edofreinv = go_edoc_fr_inv_db->select_edofreinv(\n         iv_edoc_guid = ls_edocument-edoc_guid ).\n\n      ENDIF.\n    ENDIF.\n\n...",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV is enhanced to determine the payment process for Settlement Documents.",
                "classification": "direct",
                "id": "STC-7-1"
            },
            {
                "fact": "The enhancement involves checking the value of ls_invoice_header-awtyp to determine the source type.",
                "classification": "direct",
                "id": "STC-7-2"
            },
            {
                "fact": "When ls_invoice_header-awtyp is 'WBRK', lv_source_type is set to cl_edoc_source_stlmt=>gc_src_stlmt_inv.",
                "classification": "direct",
                "id": "STC-7-3"
            },
            {
                "fact": "The method updates ms_edofrpaymt-invoice_no with lv_source_key.",
                "classification": "supporting",
                "id": "STC-7-4"
            },
            {
                "fact": "The method updates ms_edofrpaymt-inv_source_type with lv_source_type.",
                "classification": "supporting",
                "id": "STC-7-5"
            },
            {
                "fact": "The method updates ms_edofrpaymt-edoc_guid with ms_edocument-edoc_guid.",
                "classification": "supporting",
                "id": "STC-7-6"
            },
            {
                "fact": "The method checks if an eDocument exists for the original source invoice by selecting from go_edoc_db->select_edocument_from_source.",
                "classification": "supporting",
                "id": "STC-7-7"
            },
            {
                "fact": "If an eDocument is found, it selects the related settlement reinvoice using go_edoc_fr_inv_db->select_edofreinv.",
                "classification": "supporting",
                "id": "STC-7-8"
            }
        ]
    },
    {
        "id": "STC-8",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, to create the mapping, I need to create a class, e.g. CL_EDOC_MAP_FR_B2B_STLMT, which inherits from the billing document mapping class CL_EDOC_MAP_FR_B2B_SD. How could the code for this class look like?",
        "answer": "To create the mapping, you need to create a class, e.g. CL_EDOC_MAP_FR_B2B_STLMT, which inherits from the billing document mapping class CL_EDOC_MAP_FR_B2B_SD.\nThe method FILL_BILLING_REFERENCE needs to be redefined from the supperclass and enhanced:\n  METHOD fill_billing_reference.\n\n    DATA: ls_invoice_document_reference TYPE edo_fr_inv_invoice_document_re,\n          lt_wbrf                       TYPE wbrf_tab,\n          ls_wbrf                       TYPE wbrf.\n\n    IF ms_source-komlfk-lfaks IS NOT INITIAL.\n*     Reversed Document\n      ls_invoice_document_reference-id-base-content = ms_source-komlfk-lfaks.\n      ls_invoice_document_reference-issue_date-content = ms_source-komlfk-wfdat.\n      APPEND ls_invoice_document_reference TO rs_billing_reference-invoice_document_reference.\n\n    ELSE.\n*     Document flow - read the preceding document\n      CALL FUNCTION 'WLF_DOCUMENT_FLOW_READ_LFTYPN'\n        EXPORTING\n          i_wbelnn              = ms_source-komlfk-wbeln\n          i_lftypn              = ms_source-komlfk-lftyp\n          i_get_all_predecessor = abap_true\n        IMPORTING\n          et_wbrf               = lt_wbrf\n        EXCEPTIONS\n          OTHERS                = 1.\n      IF sy-subrc EQ 0.\n        ##INTO_OK\n        LOOP AT lt_wbrf INTO ls_wbrf.\n          ls_invoice_document_reference-id-base-content =  ls_wbrf-wbelnv.\n          ls_invoice_document_reference-issue_date-content = ls_wbrf-erdat.\n          APPEND ls_invoice_document_reference TO rs_billing_reference-invoice_document_reference.\n        ENDLOOP.\n      ENDIF.\n\n    ENDIF.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "To enable source type 'Settlement Management Documents' for the France B2B eInvoice eDocument Process, a new class must be created.",
                "classification": "direct",
                "id": "STC-8-1"
            },
            {
                "fact": "The new class should be named, for example, CL_EDOC_MAP_FR_B2B_STLMT.",
                "classification": "direct",
                "id": "STC-8-2"
            },
            {
                "fact": "CL_EDOC_MAP_FR_B2B_STLMT must inherit from the billing document mapping class CL_EDOC_MAP_FR_B2B_SD.",
                "classification": "direct",
                "id": "STC-8-3"
            },
            {
                "fact": "The method FILL_BILLING_REFERENCE needs to be redefined in the new class.",
                "classification": "direct",
                "id": "STC-8-4"
            },
            {
                "fact": "The redefined FILL_BILLING_REFERENCE method should enhance the superclass implementation.",
                "classification": "direct",
                "id": "STC-8-5"
            },
            {
                "fact": "If ms_source-komlfk-lfaks is not initial, the method sets ls_invoice_document_reference-id-base-content to ms_source-komlfk-lfaks and ls_invoice_document_reference-issue_date-content to ms_source-komlfk-wfdat.",
                "classification": "supporting",
                "id": "STC-8-6"
            },
            {
                "fact": "If ms_source-komlfk-lfaks is initial, the method calls function 'WLF_DOCUMENT_FLOW_READ_LFTYPN' to read the preceding document.",
                "classification": "supporting",
                "id": "STC-8-7"
            },
            {
                "fact": "For each entry in lt_wbrf, the method sets ls_invoice_document_reference-id-base-content to ls_wbrf-wbelnv and ls_invoice_document_reference-issue_date-content to ls_wbrf-erdat.",
                "classification": "supporting",
                "id": "STC-8-8"
            }
        ]
    },
    {
        "id": "STC-9",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method FILL_CONTRACT_REFERENCE needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method FILL_CONTRACT_REFERENCE needs to be redefined from the supperclass and enhanced:\n  METHOD fill_contract_reference.\n\n*   Condition Contract\n    IF ms_source-komlfk-contract_type = '1'.\n      rs_contract-id-base-content = ms_source-komlfk-contract.\n    ENDIF.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method FILL_CONTRACT_REFERENCE needs to be redefined from the superclass.",
                "classification": "direct",
                "id": "STC-9-1"
            },
            {
                "fact": "The method FILL_CONTRACT_REFERENCE should be enhanced for the France B2B eInvoice eDocument Process.",
                "classification": "direct",
                "id": "STC-9-2"
            },
            {
                "fact": "The code example shows how to redefine and enhance the FILL_CONTRACT_REFERENCE method.",
                "classification": "supporting",
                "id": "STC-9-3"
            },
            {
                "fact": "In the code, if ms_source-komlfk-contract_type equals '1', then rs_contract-id-base-content is set to ms_source-komlfk-contract.",
                "classification": "supporting",
                "id": "STC-9-4"
            }
        ]
    },
    {
        "id": "STC-10",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method FILL_DELIVERY needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method FILL_DELIVERY needs to be redefined from the supperclass and enhanced:\nMETHOD FILL_DELIVERY.\n\n*   Delivery is not available for Settlement Management\n    CLEAR rs_edo_fr_delivery.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method FILL_DELIVERY needs to be redefined from the superclass.",
                "classification": "direct",
                "id": "STC-10-1"
            },
            {
                "fact": "The method FILL_DELIVERY should be enhanced for the France B2B eInvoice eDocument Process.",
                "classification": "direct",
                "id": "STC-10-2"
            },
            {
                "fact": "In the redefined FILL_DELIVERY method, rs_edo_fr_delivery is cleared.",
                "classification": "direct",
                "id": "STC-10-3"
            },
            {
                "fact": "Delivery is not available for Settlement Management.",
                "classification": "supporting",
                "id": "STC-10-4"
            },
            {
                "fact": "The provided code example shows how to redefine and enhance the FILL_DELIVERY method.",
                "classification": "supporting",
                "id": "STC-10-5"
            }
        ]
    },
    {
        "id": "STC-11",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method FILL_INVOICE_TYPE_CODE needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method FILL_INVOICE_TYPE_CODE needs to be redefined from the supperclass and enhanced:\n  METHOD fill_invoice_type_code.\n\n    rv_invoice_type_code = get_value_mapping(\n      iv_vmapname    = 'INVOICE_TYPE_CODE_SM'\n      iv_int_value   = ms_source-komlfk-lfart\n      iv_err_msg_ind = abap_false ).\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method FILL_INVOICE_TYPE_CODE needs to be redefined from the superclass.",
                "classification": "direct",
                "id": "STC-11-1"
            },
            {
                "fact": "The method FILL_INVOICE_TYPE_CODE should be enhanced.",
                "classification": "direct",
                "id": "STC-11-2"
            },
            {
                "fact": "The redefined method assigns rv_invoice_type_code using the get_value_mapping function.",
                "classification": "direct",
                "id": "STC-11-3"
            },
            {
                "fact": "The get_value_mapping function is called with iv_vmapname set to 'INVOICE_TYPE_CODE_SM'.",
                "classification": "direct",
                "id": "STC-11-4"
            },
            {
                "fact": "The get_value_mapping function is called with iv_int_value set to ms_source-komlfk-lfart.",
                "classification": "direct",
                "id": "STC-11-5"
            },
            {
                "fact": "The get_value_mapping function is called with iv_err_msg_ind set to abap_false.",
                "classification": "direct",
                "id": "STC-11-6"
            },
            {
                "fact": "The provided code snippet is an example of how to redefine and enhance the method.",
                "classification": "supporting",
                "id": "STC-11-7"
            }
        ]
    },
    {
        "id": "STC-12",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method  FILL_NOTE needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method  FILL_NOTE needs to be redefined from the supperclass and enhanced:\n  METHOD fill_note.\n    DATA: lv_tdid   TYPE tdid,\n          lv_tdname TYPE tdobname,\n          lt_text   TYPE TABLE OF tline,\n          ls_text   TYPE tline,\n          ls_note   LIKE LINE OF rt_note.\n\n*   Get the Text ID for the Settlement Management Document Header\n*     (go to Header -> Details -> Accounting tab page of the document)\n    SELECT SINGLE tdid_hs1\n      INTO lv_tdid\n      FROM tmfk\n      WHERE lfart = ms_source-komlfk-lfart.\n    IF sy-subrc = 0.\n*     Text object = document number\n      lv_tdname = ms_source-vbrk-vbeln.\n*     Read the text from the source document\n      lt_text = read_text(\n        iv_langu    = sy-langu\n        iv_tdid     = lv_tdid\n        iv_tdname   = lv_tdname\n        iv_tdobject = 'WBRK' ).\n\n      IF lt_text IS NOT INITIAL.\n        ##INTO_OK\n        LOOP AT lt_text INTO ls_text.\n          ls_note-base-content = ls_text-tdline.\n          APPEND ls_note TO rt_note.\n        ENDLOOP.\n      ENDIF.\n\n    ELSE.\n*     Document header text of the related accounting document\n      ls_note-base-content = ms_source-bkpf-bktxt.\n      APPEND ls_note TO rt_note.\n    ENDIF.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method FILL_NOTE needs to be redefined from the superclass and enhanced to enable source type 'Settlement Management Documents' for the France B2B eInvoice eDocument Process.",
                "classification": "direct",
                "id": "STC-12-1"
            },
            {
                "fact": "The redefined FILL_NOTE method declares local variables for text ID, text name, text table, text line, and note structure.",
                "classification": "supporting",
                "id": "STC-12-2"
            },
            {
                "fact": "The method selects the text ID (tdid_hs1) from table TMFK where the document type matches ms_source-komlfk-lfart.",
                "classification": "supporting",
                "id": "STC-12-3"
            },
            {
                "fact": "If the text ID is found, the text object name is set to the source document number (ms_source-vbrk-vbeln).",
                "classification": "supporting",
                "id": "STC-12-4"
            },
            {
                "fact": "The method reads the text from the source document using the read_text function with language, text ID, text name, and object 'WBRK'.",
                "classification": "supporting",
                "id": "STC-12-5"
            },
            {
                "fact": "If the text is not initial, the method loops through the text lines and appends them as note content to rt_note.",
                "classification": "supporting",
                "id": "STC-12-6"
            },
            {
                "fact": "If the text ID is not found, the method uses the document header text from ms_source-bkpf-bktxt as the note content.",
                "classification": "supporting",
                "id": "STC-12-7"
            }
        ]
    },
    {
        "id": "STC-13",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method FILL_ORDER_REFERENCE  needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method FILL_ORDER_REFERENCE  needs to be redefined from the supperclass and enhanced:\n  METHOD FILL_ORDER_REFERENCE.\n\n*   Order is not available for Settlement Management\n    CLEAR rs_order_reference.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method FILL_ORDER_REFERENCE needs to be redefined from the superclass.",
                "classification": "direct",
                "id": "STC-13-1"
            },
            {
                "fact": "The method FILL_ORDER_REFERENCE should be enhanced for the France B2B eInvoice eDocument Process to enable source type 'Settlement Management Documents'.",
                "classification": "direct",
                "id": "STC-13-2"
            },
            {
                "fact": "In the redefined method, rs_order_reference is cleared because order is not available for Settlement Management.",
                "classification": "direct",
                "id": "STC-13-3"
            },
            {
                "fact": "The provided code example shows the redefinition of the FILL_ORDER_REFERENCE method.",
                "classification": "supporting",
                "id": "STC-13-4"
            },
            {
                "fact": "The code example includes a comment indicating that order is not available for Settlement Management.",
                "classification": "supporting",
                "id": "STC-13-5"
            }
        ]
    },
    {
        "id": "STC-14",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method FILL_PRICE_AMOUNT needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method FILL_PRICE_AMOUNT needs to be redefined from the supperclass and enhanced:\n  METHOD fill_price_amount.\n\n    DATA: lv_unit_price TYPE p DECIMALS 5,\n          lv_dec        TYPE i,\n          lv_dec_val    TYPE c LENGTH 7,\n          lv_unit_quan  TYPE c LENGTH 4 VALUE '1000',\n          lv_price      TYPE kwert.\n\n    CLEAR ev_unit_quan.\n    IF is_vbrp-fkimg IS NOT INITIAL.\n      lv_unit_price = is_vbrp-netwr / is_vbrp-fkimg.\n    ELSE.\n      lv_unit_price = is_vbrp-netwr.\n    ENDIF.\n\n    IF lv_unit_price IS NOT INITIAL.\n      lv_unit_price = abs( lv_unit_price ).\n      lv_dec_val = frac( lv_unit_price ).\n      CONDENSE lv_dec_val.\n      SHIFT lv_dec_val LEFT BY 2 PLACES.\n      lv_dec = strlen( lv_dec_val ).\n      IF lv_dec GT 2.\n        lv_dec = lv_dec - 1.\n        ev_unit_quan = lv_unit_quan+0(lv_dec).\n        lv_unit_price = lv_unit_price * lv_unit_quan.\n        lv_price = lv_unit_price.\n        ev_price_amount = lv_price.\n      ELSE.\n        lv_price = lv_unit_price.\n        ev_price_amount = lv_price.\n      ENDIF.\n    ENDIF.\n    format_negative_amount( CHANGING cv_amount = ev_price_amount ).\n\n    ev_currency = ms_source-vbrk-waerk.\n\n  ENDMETHOD.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method FILL_PRICE_AMOUNT must be redefined from the superclass for the France B2B eInvoice eDocument Process.",
                "classification": "direct",
                "id": "STC-14-1"
            },
            {
                "fact": "The redefined FILL_PRICE_AMOUNT method should be enhanced to enable the source type 'Settlement Management Documents'.",
                "classification": "direct",
                "id": "STC-14-2"
            },
            {
                "fact": "The answer provides an ABAP code example for the enhanced FILL_PRICE_AMOUNT method.",
                "classification": "supporting",
                "id": "STC-14-3"
            },
            {
                "fact": "The code calculates lv_unit_price as is_vbrp-netwr divided by is_vbrp-fkimg if is_vbrp-fkimg is not initial; otherwise, it uses is_vbrp-netwr.",
                "classification": "supporting",
                "id": "STC-14-4"
            },
            {
                "fact": "The code processes lv_unit_price to ensure it is absolute and handles decimal values for further calculation.",
                "classification": "supporting",
                "id": "STC-14-5"
            },
            {
                "fact": "The code sets ev_currency to ms_source-vbrk-waerk.",
                "classification": "supporting",
                "id": "STC-14-6"
            }
        ]
    },
    {
        "id": "STC-15",
        "question": "To enable source type \"Settlement Management Documents\" for the France B2B eInoivce eDocument Process, the method READ_CODES_FROM_HEADER_TEXT needs to be redefined from the supperclass and enhanced. How could the code for this look like?",
        "answer": "The method READ_CODES_FROM_HEADER_TEXT needs to be redefined from the supperclass and enhanced:\n  method READ_CODES_FROM_HEADER_TEXT.\n    DATA: lt_text        TYPE TABLE OF tline,\n          ls_text        TYPE tline,\n          lv_tdname      TYPE tdobname,\n          lv_header_text TYPE string.\n\n    lv_tdname = ms_source-komlfk-wbeln.\n\n*   Read Routing Code from Header Text\n    lt_text = read_text(\n      iv_langu    = sy-langu\n      iv_tdid     = 'FRRC'\n      iv_tdname   = lv_tdname\n      iv_tdobject = 'WBRK' ).\n\n    IF lt_text IS NOT INITIAL.\n      ##INTO_OK\n      LOOP AT lt_text INTO ls_text.\n        CONCATENATE lv_header_text ls_text-tdline INTO lv_header_text.\n      ENDLOOP.\n      ms_party_receiver-routing_code = lv_header_text.\n      CLEAR: lv_header_text, lt_text.\n    ENDIF.\n\n*   Read Addressing Line Code from Header Text\n    lt_text = read_text(\n      iv_langu    = sy-langu\n      iv_tdid     = 'FRAD'\n      iv_tdname   = lv_tdname\n      iv_tdobject = 'WBRK' ).\n\n    IF lt_text IS NOT INITIAL.\n      ##INTO_OK\n      LOOP AT lt_text INTO ls_text.\n        CONCATENATE lv_header_text ls_text-tdline INTO lv_header_text.\n      ENDLOOP.\n      ms_party_receiver-addressing_line_code = lv_header_text.\n      CLEAR lv_header_text.\n    ENDIF.\n  endmethod.",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Developer (Software vendor side)",
        "activity": "Development",
        "country": "FR",
        "facts": [
            {
                "fact": "The method READ_CODES_FROM_HEADER_TEXT must be redefined from the superclass.",
                "classification": "direct",
                "id": "STC-15-1"
            },
            {
                "fact": "The method READ_CODES_FROM_HEADER_TEXT must be enhanced for the France B2B eInvoice eDocument Process.",
                "classification": "direct",
                "id": "STC-15-2"
            },
            {
                "fact": "The code example shows how to redefine and enhance READ_CODES_FROM_HEADER_TEXT to read routing and addressing codes from header text.",
                "classification": "supporting",
                "id": "STC-15-3"
            },
            {
                "fact": "The method reads the routing code from header text using text ID 'FRRC' and object 'WBRK'.",
                "classification": "supporting",
                "id": "STC-15-4"
            },
            {
                "fact": "The method reads the addressing line code from header text using text ID 'FRAD' and object 'WBRK'.",
                "classification": "supporting",
                "id": "STC-15-5"
            },
            {
                "fact": "The routing code is assigned to ms_party_receiver-routing_code.",
                "classification": "supporting",
                "id": "STC-15-6"
            },
            {
                "fact": "The addressing line code is assigned to ms_party_receiver-addressing_line_code.",
                "classification": "supporting",
                "id": "STC-15-7"
            }
        ]
    },
    {
        "id": "STC-16",
        "question": "What is the name of the France B2B eDocument Class?",
        "answer": "CL_EDOCUMENT_FR_INV",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "The name of the France B2B eDocument Class is CL_EDOCUMENT_FR_INV.",
                "classification": "direct",
                "id": "STC-16-1"
            }
        ]
    },
    {
        "id": "STC-17",
        "question": "What is the name of the France B2B eInvoice eDocument class?",
        "answer": "CL_EDOCUMENT_FR_INV",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "The name of the France B2B eInvoice eDocument class is CL_EDOCUMENT_FR_INV.",
                "classification": "direct",
                "id": "STC-17-1"
            }
        ]
    },
    {
        "id": "STC-18",
        "question": "Which methods of the France B2B eInvoice eDocument Class do have source type specific source code, which need to be enhanced in order to enable source type \"Settlement Management Documents\"? ",
        "answer": "- method IS_RELEVANT of class CL_EDOCUMENT_FR_INV\n- method DETERMINE_PROCESS of class CL_EDOCUMENT_FR_INV\n- method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV ",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "The method IS_RELEVANT of class CL_EDOCUMENT_FR_INV has source type specific source code that needs enhancement for source type 'Settlement Management Documents'.",
                "classification": "direct",
                "id": "STC-18-1"
            },
            {
                "fact": "The method DETERMINE_PROCESS of class CL_EDOCUMENT_FR_INV has source type specific source code that needs enhancement for source type 'Settlement Management Documents'.",
                "classification": "direct",
                "id": "STC-18-2"
            },
            {
                "fact": "The method DETERMINE_PAYMENT_PROCESS in class CL_EDOCUMENT_FR_INV has source type specific source code that needs enhancement for source type 'Settlement Management Documents'.",
                "classification": "direct",
                "id": "STC-18-3"
            }
        ]
    },
    {
        "id": "STC-19",
        "question": "Find a class name for mapping settlement management documents for the France B2B eInvoice eDocument process.",
        "answer": "CL_EDOC_MAP_FR_B2B_STLMT",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "The class name for mapping settlement management documents for the France B2B eInvoice eDocument process is CL_EDOC_MAP_FR_B2B_STLMT.",
                "classification": "direct",
                "id": "STC-19-1"
            }
        ]
    },
    {
        "id": "STC-20",
        "question": "Find out a proper class where the new mapping class for France B2B eInvoice settlement management documents can inherit from to reduce the amount of duplicate coding. ",
        "answer": "CL_EDOC_MAP_FR_B2B_SD",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "The proper class to inherit from for France B2B eInvoice settlement management documents is CL_EDOC_MAP_FR_B2B_SD.",
                "classification": "direct",
                "id": "STC-20-1"
            }
        ]
    },
    {
        "id": "STC-21",
        "question": "For France B2B eInvoice find out if there is a class which is already doing mapping for another source type but not settlement management documents.  ",
        "answer": "CL_EDOC_MAP_FR_B2B_SD",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "CL_EDOC_MAP_FR_B2B_SD is a class related to France B2B eInvoice mapping.",
                "classification": "direct",
                "id": "STC-21-1"
            }
        ]
    },
    {
        "id": "STC-22",
        "question": "For France B2B eInvoice list all the methods which have to be redefined from the superclass to implement source code specific to settlement management documents.",
        "answer": "From : CL_EDOC_MAP_FR_B2B_SD\n\n- FILL_BILLING_REFERENCE\n- FILL_CONTRACT_REFERENCE\n- FILL_DELIVERY\n- FILL_INVOICE_TYPE_CODE\n- FILL_NOTE\n- FILL_ORDER_REFERENCE\n- FILL_PRICE_AMOUNT\n- READ_CODES_FROM_HEADER_TEXT ",
        "product": "ERP",
        "category": "Analysis (Development)",
        "persona": "Architects (Software vendor side)",
        "activity": "Design",
        "country": "FR",
        "facts": [
            {
                "fact": "The methods that have to be redefined from the superclass for France B2B eInvoice settlement management documents are listed in CL_EDOC_MAP_FR_B2B_SD.",
                "classification": "direct",
                "id": "STC-22-1"
            },
            {
                "fact": "FILL_BILLING_REFERENCE must be redefined.",
                "classification": "direct",
                "id": "STC-22-2"
            },
            {
                "fact": "FILL_CONTRACT_REFERENCE must be redefined.",
                "classification": "direct",
                "id": "STC-22-3"
            },
            {
                "fact": "FILL_DELIVERY must be redefined.",
                "classification": "direct",
                "id": "STC-22-4"
            },
            {
                "fact": "FILL_INVOICE_TYPE_CODE must be redefined.",
                "classification": "direct",
                "id": "STC-22-5"
            },
            {
                "fact": "FILL_NOTE must be redefined.",
                "classification": "direct",
                "id": "STC-22-6"
            },
            {
                "fact": "FILL_ORDER_REFERENCE must be redefined.",
                "classification": "direct",
                "id": "STC-22-7"
            },
            {
                "fact": "FILL_PRICE_AMOUNT must be redefined.",
                "classification": "direct",
                "id": "STC-22-8"
            },
            {
                "fact": "READ_CODES_FROM_HEADER_TEXT must be redefined.",
                "classification": "direct",
                "id": "STC-22-9"
            }
        ]
    }
]