class CL_EDOC_MAP_AIF definition
  public
  inheriting from CL_EDOC_MAP
  create public .

public section.

  types:
    BEGIN OF ty_interface,
        ns        TYPE c LENGTH 6,
        ifname    TYPE c LENGTH 10,
        ifversion TYPE c LENGTH 5,
      END OF ty_interface .

  class-methods MAP_INTERFACE
    importing
      !IV_EDOC_GUID type EDOC_GUID
      !IV_NS type STRING
      !IV_IFNAME type STRING
      !IV_IFVERSION type STRING
      !IS_SOURCE type ANY
      !IV_SOURCE_STRCUTURE type CHAR30 optional
    exporting
      !ES_TARGET type ANY
      !EO_EDOCUMENT type ref to CL_EDOCUMENT
      !ED_ADDITIONAL_INFO type ref to DATA
    raising
      CX_EDOCUMENT .
  methods CONSTRUCTOR
    importing
      !IV_NS type STRING .
  class-methods PACK_INTERFACE_ID
    importing
      !IV_NS type STRING
      !IV_IFNAME type STRING
      !IV_IFVERSION type STRING
    returning
      value(RV_INTERFACE_ID) type EDOC_INTERFACE_ID .
  class-methods UNPACK_INTERFACE_ID
    importing
      !IV_INTERFACE_ID type EDOC_INTERFACE_ID
      !IV_INT_VERSION type EDOC_INT_VERSION optional
    exporting
      !EV_NS type STRING
      !EV_IFNAME type STRING
      !EV_IFVERSION type STRING .
  class-methods DETERMINE_MAPPING_METHOD
    importing
      !IV_IFNAME type STRING
      !IV_IFVERSION type STRING
    returning
      value(RV_MAPPING_METHOD) type STRING .
  class-methods FORMAT_AMOUNT
    changing
      !CV_AMOUNT type STRING .
  class-methods CONVERT_ERROR_MESSAGE
    returning
      value(RS_ERROR_MESSAGE) type BAPIRET2 .
  class-methods FORMAT_NEGATIVE_AMOUNT
    importing
      !IV_DECIMAL type NUMC1 default 2
    changing
      !CV_AMOUNT type STRING .
protected section.

  class-data GS_INTERFACE type TY_INTERFACE .
  data MV_WAERS type WAERS .
  data MV_NS type EDOC_AIF_NS .
  data MT_ERROR_MESSAGES_AIF type BAPIRET2_T .

  methods ADD_ERROR_MESSAGE .
  methods RAISE_EXCEPTION
    raising
      CX_EDOCUMENT .
  class-methods DETERMINE_METHOD_PARAM_VALUE
    importing
      !IV_CLASS_NAME type EDOC_CLASS_NAME
      !IV_METHOD_NAME type SEOCPDNAME
      !IV_PARAM_NAME type SEOSCONAME
    exporting
      !ED_PARAM_VALUE type ref to DATA
    raising
      CX_EDOCUMENT .

  methods GET_FIX_VALUE
    redefinition .
  methods GET_VALUE_MAPPING
    redefinition .
  methods INIT_FIX_VALUES
    redefinition .
  methods INIT_MAPPING
    redefinition .
  methods INIT_VALUE_MAPPING
    redefinition .
  methods GET_MULTIPLE_VALUE_MAPPING
    redefinition .
private section.
ENDCLASS.



CLASS CL_EDOC_MAP_AIF IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->ADD_ERROR_MESSAGE
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD add_error_message.
*    Add error messages to global table for AIF
    DATA ls_err_msg_aif TYPE bapiret2.

    ls_err_msg_aif-type       = sy-msgty.
    ls_err_msg_aif-id         = sy-msgid.
    ls_err_msg_aif-number     = sy-msgno.
    ls_err_msg_aif-message_v1 = sy-msgv1.
    ls_err_msg_aif-message_v2 = sy-msgv2.
    ls_err_msg_aif-message_v3 = sy-msgv3.
    ls_err_msg_aif-message_v4 = sy-msgv4.

    APPEND ls_err_msg_aif TO mt_error_messages_aif.
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOC_MAP_AIF->CONSTRUCTOR
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_NS                          TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD constructor.

    super->constructor( ).

*   Set AIF namespace
    mv_ns = iv_ns.

    init_fix_values( ).                                                "2092483
    init_value_mapping( ).                                             "2092483
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>CONVERT_ERROR_MESSAGE
* +-------------------------------------------------------------------------------------------------+
* | [<-()] RS_ERROR_MESSAGE               TYPE        BAPIRET2
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method CONVERT_ERROR_MESSAGE.

    rs_error_message = convert_error_message1( ).

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>DETERMINE_MAPPING_METHOD
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_IFNAME                      TYPE        STRING
* | [--->] IV_IFVERSION                   TYPE        STRING
* | [<-()] RV_MAPPING_METHOD              TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD determine_mapping_method.
* Determine the mapping method from Interface Name & Version

    DATA: lv_prefix TYPE c LENGTH 4.
    DATA ls_interface TYPE ty_interface.                              "2186689

    CLEAR: ls_interface, rv_mapping_method.                           "2186689

    lv_prefix = 'MAP_'.
    ls_interface-ifname = iv_ifname.                                  "2186689
    ls_interface-ifversion = iv_ifversion.                            "2186689

*   Build interface ID
    CONCATENATE lv_prefix ls_interface-ifname ls_interface-ifversion  "2186689
           INTO rv_mapping_method.                                    "2186689
    CONDENSE rv_mapping_method NO-GAPS.

  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Protected Method CL_EDOC_MAP_AIF=>DETERMINE_METHOD_PARAM_VALUE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_CLASS_NAME                  TYPE        EDOC_CLASS_NAME
* | [--->] IV_METHOD_NAME                 TYPE        SEOCPDNAME
* | [--->] IV_PARAM_NAME                  TYPE        SEOSCONAME
* | [<---] ED_PARAM_VALUE                 TYPE REF TO DATA
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD DETERMINE_METHOD_PARAM_VALUE.         "new with  2777017
    DATA: lo_oo_class         TYPE REF TO cl_oo_class,
          lo_oo_object        TYPE REF TO cl_oo_object,
          lv_class_name       TYPE seoclsname,
          lv_structure        TYPE rs38l_typ,
          ls_signature        TYPE seocmpsign,
          ls_signature_params TYPE LINE OF seocmpsign-params.

    CLEAR ed_param_value.

*   Get the signature of a method
*   Determine the value of a given parameter

    lv_class_name  = iv_class_name.

    DO.
      TRY.
          lo_oo_object = cl_oo_class=>get_instance(
            clsname = lv_class_name ).
        CATCH cx_class_not_existent.
          MESSAGE e074(edocument) WITH lv_class_name 'EDOMAPCLASSDET'
            INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
      ENDTRY.
      IF lo_oo_object IS BOUND.
        lo_oo_class ?= lo_oo_object.
      ENDIF.
      IF lo_oo_class IS NOT BOUND.
        MESSAGE e067(edocument) WITH 'CL_OO_OBJECT' INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

      TRY.
          lo_oo_class->get_component_signature(
            EXPORTING
              cpdname = iv_method_name
            RECEIVING
              result = ls_signature ).
*         Exit from do-enddo when signature found
          EXIT.

        CATCH cx_component_not_existing.
*         for redefined methods, get the superclass
          lv_class_name = lo_oo_class->get_superclass( ).
          IF lv_class_name = 'OBJECT'.
            MESSAGE e074(edocument) WITH lv_class_name 'EDOMAPCLASSDET'
              INTO cl_edocument=>gv_error_txt.
            cl_edocument=>raise_edoc_exception( ).
          ENDIF.
      ENDTRY.
    ENDDO.


    READ TABLE ls_signature-params WITH KEY sconame = iv_param_name
      INTO ls_signature_params.
    IF sy-subrc = 0.
      lv_structure = ls_signature_params-type.
      CREATE DATA ed_param_value TYPE (lv_structure).
      IF sy-subrc <> 0.
        MESSAGE e065(edocument) WITH lv_structure INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>FORMAT_AMOUNT
* +-------------------------------------------------------------------------------------------------+
* | [<-->] CV_AMOUNT                      TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method FORMAT_AMOUNT.

***   Format an amount or quantity in a string variable ***

*   Remove the extra spaces from the string
    CONDENSE cv_amount NO-GAPS.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>FORMAT_NEGATIVE_AMOUNT
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_DECIMAL                     TYPE        NUMC1 (default =2)
* | [<-->] CV_AMOUNT                      TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD format_negative_amount.
*** Format an amount or quantity in a string variable, round it to the input decimal length
*** and if the amount is negative put the - sign to the beginning
    DATA: lr_amount TYPE REF TO data.

    FIELD-SYMBOLS: <fs_amount> TYPE any.

    CREATE DATA lr_amount TYPE p DECIMALS iv_decimal.
    ASSIGN lr_amount->* TO <fs_amount>.

    <fs_amount> = cv_amount.
    cv_amount = <fs_amount>.

    IF cv_amount IS INITIAL.
      cv_amount = '0.00'.
    ELSEIF cv_amount CS '-'.
      cv_amount = abs( <fs_amount> ).
      CONCATENATE '-' cv_amount INTO cv_amount.
    ENDIF.

*   Remove the extra spaces from the string
    CONDENSE cv_amount NO-GAPS.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->GET_FIX_VALUE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_NAME                        TYPE        EDOC_FIX_VALUE_NAME
* | [--->] IV_ERR_MSG_IND                 TYPE        BOOLEAN(optional)
* | [<-()] RV_VALUE                       TYPE        EDOC_FIELD_VALUE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD get_fix_value.
    DATA ls_fix_value TYPE ty_fix_value.
    DATA lv_err_msg   TYPE string."#EC NEEDED

    READ TABLE mt_fix_value INTO ls_fix_value
      WITH KEY fixvaluename = iv_name.
    IF sy-subrc = 0.
      rv_value = ls_fix_value-fieldvalue.
    ELSEIF iv_err_msg_ind IS NOT INITIAL.
      CLEAR rv_value.
      MESSAGE e705(edocument) WITH iv_name INTO lv_err_msg.
      add_error_message( ).
    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->GET_MULTIPLE_VALUE_MAPPING
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_VMAPNAME                    TYPE        CHAR20
* | [--->] IV_INT_VALUE                   TYPE        ANY
* | [--->] IV_ERR_MSG_IND                 TYPE        BOOLEAN(optional)
* | [<---] ET_MULTIPLE_EXT_VALUE          TYPE        TY_MULTIPLE_VALUE_MAPPING_TAB
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD get_multiple_value_mapping.                        "New with 3035087

    DATA: lv_err_msg TYPE string.

    FIELD-SYMBOLS: <ls_multiple_value_mapping> TYPE ty_multiple_value_mapping.

    CLEAR et_multiple_ext_value.

    LOOP AT mt_multiple_value_mapping ASSIGNING <ls_multiple_value_mapping>
      WHERE vmapname = iv_vmapname AND int_value = iv_int_value.
      APPEND <ls_multiple_value_mapping> TO et_multiple_ext_value.
    ENDLOOP.

    IF sy-subrc <> 0 AND iv_err_msg_ind IS NOT INITIAL.
      MESSAGE e704(edocument) WITH iv_vmapname iv_int_value
        INTO lv_err_msg.
      add_error_message( ).
    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->GET_VALUE_MAPPING
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_VMAPNAME                    TYPE        CHAR20
* | [--->] IV_INT_VALUE                   TYPE        ANY
* | [--->] IV_ERR_MSG_IND                 TYPE        BOOLEAN(optional)
* | [<-()] RV_EXT_VALUE                   TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD get_value_mapping.
  "This method retrieves an external value for a given AIF Value Mapping Name and Internal Value
  "Value Mappings can be maintained in transaction /AIF/VMAP. In case of UBL Invoices, the namespace is "/EDUBL"
  "To extract helpful insights, try to find out the actual value mapping name that will be included in IV_VMAPNAME
  "by intention, there is no further implementation provided here
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->INIT_FIX_VALUES
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method INIT_FIX_VALUES.
  "this method initializes AIF Fixed Values
  "AIF Fixed Values can be maintained in transaction /AIF/CUST. In case of UBL Invoices, the namespace is "/EDUBL"
  "by intention, there is no further implementation provided here
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->INIT_MAPPING
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_BUKRS                       TYPE        BUKRS(optional)
* | [--->] IV_KUNNR                       TYPE        KUNNR(optional)
* | [--->] IV_ADRNR                       TYPE        ADRNR(optional)
* | [--->] IV_LIFNR                       TYPE        LIFNR(optional)
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD init_mapping.
    TRY.
        super->init_mapping(
          EXPORTING
            iv_bukrs     = iv_bukrs
            iv_kunnr     = iv_kunnr
            iv_lifnr     = iv_lifnr     "2333175
            iv_adrnr     = iv_adrnr ).

      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->INIT_VALUE_MAPPING
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method INIT_VALUE_MAPPING.

  "this method initializes AIF Fixed Values
  "AIF Value Mappings can be maintained in transaction /AIF/VMAP. In case of UBL Invoices, the namespace is "/EDUBL"

  "by intention, there is no further implementation provided here

  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>MAP_INTERFACE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_EDOC_GUID                   TYPE        EDOC_GUID
* | [--->] IV_NS                          TYPE        STRING
* | [--->] IV_IFNAME                      TYPE        STRING
* | [--->] IV_IFVERSION                   TYPE        STRING
* | [--->] IS_SOURCE                      TYPE        ANY
* | [--->] IV_SOURCE_STRCUTURE            TYPE        CHAR30(optional)
* | [<---] ES_TARGET                      TYPE        ANY
* | [<---] EO_EDOCUMENT                   TYPE REF TO CL_EDOCUMENT
* | [<---] ED_ADDITIONAL_INFO             TYPE REF TO DATA
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method MAP_INTERFACE.

    DATA: lv_map_class_name TYPE edoc_class_name,
          lo_map_class      TYPE REF TO object,
          lv_map_method     TYPE string,
          lv_method_name    TYPE seocpdname,               "2777017
          lv_interface_id   TYPE edoc_interface_id.
    FIELD-SYMBOLS: <ls_additional_info> TYPE any,          "2777017
                   <ls_src_header>      TYPE edoc_src_header,     "3403461
                   <lv_map_class>       TYPE edoc_class_name.     "3403461

    CLEAR: eo_edocument, es_target, ed_additional_info.    "2777017

*   Check if eDocument GUID is empty
    IF iv_edoc_guid = cl_edocument=>gc_edoc_dummy_guid.     "Begin of 3403461
     ASSIGN COMPONENT 'SOURCE_HEADER' OF STRUCTURE is_source TO <ls_src_header>.
       IF sy-subrc <> 0.
         MESSAGE e706(edocument) WITH
           'EDOC_AIF_INIT_REQUEST_MAPPING'
            iv_source_strcuture 'SOURCE_HEADER' INTO cl_edocument=>gv_error_txt.
         cl_edocument=>raise_edoc_exception( ).
       ENDIF.
       IF <ls_src_header>-source_type = 'EXT_DOC'.
           ASSIGN COMPONENT 'MAP_CLASS' OF STRUCTURE is_source TO <lv_map_class>.
            IF sy-subrc <> 0.
               MESSAGE e706(edocument) WITH
                 'EDOC_AIF_INIT_REQUEST_MAPPING'
                  iv_source_strcuture 'MAP_CLASS' INTO cl_edocument=>gv_error_txt.
               cl_edocument=>raise_edoc_exception( ).
            ENDIF.
           lv_map_class_name = <lv_map_class>.

      ENDIF.
    ENDIF.
    IF lv_map_class_name IS INITIAL.                        "End of 3403461
*     Get eDocument
      cl_edocument=>retrieve_by_edoc_guid(
      EXPORTING
        iv_edoc_guid = iv_edoc_guid
        iv_skip_interface_det = abap_true
        iv_skip_source_instance = abap_true                 "3403461
      RECEIVING
        ro_edocument = eo_edocument ).

*     Build interface ID
    cl_edoc_map_aif=>pack_interface_id(
      EXPORTING
        iv_ns           = iv_ns
        iv_ifname       = iv_ifname
        iv_ifversion    = iv_ifversion
      RECEIVING
        rv_interface_id = lv_interface_id ).

*     Get mapping class
    eo_edocument->determine_mapping_class(
      EXPORTING
        iv_interface_id  = lv_interface_id
      RECEIVING
        rv_mapping_class = lv_map_class_name ).
    ENDIF.
    IF NOT lv_map_class_name IS INITIAL.

*     Get mapping method name
      cl_edoc_map_aif=>determine_mapping_method(
        EXPORTING
          iv_ifname         = iv_ifname
          iv_ifversion      = iv_ifversion
        RECEIVING
          rv_mapping_method = lv_map_method ).

      CREATE OBJECT lo_map_class TYPE (lv_map_class_name)
        EXPORTING
          iv_ns     = iv_ns.

*     Add edoc guid, map class, method to AIF Function group
      CALL FUNCTION 'EDOC_AIF_SET_MAP_CLASS'
        EXPORTING
          iv_edoc_guid      = iv_edoc_guid
          iv_mapping_class  = lv_map_class_name
          iv_mapping_method = lv_map_method
          io_mapping_instance = lo_map_class.                          "2882778

                                                      "Start 2777017
* Additional information for method SET_OUTPUT_DATA of BAdI EDOC_ADAPTOR
* If it exists, it will be kept in the global data of function group EDOC_AIF
* and passed to the BAdI call in function module EDOC_AIF_GENERIC_CHECK
      lv_method_name = lv_map_method.
      determine_method_param_value(
        EXPORTING
          iv_class_name  = lv_map_class_name
          iv_method_name = lv_method_name
          iv_param_name  = 'ES_ADDITIONAL_INFO'
        IMPORTING
          ed_param_value = ed_additional_info ).

      IF ed_additional_info IS BOUND.
        ASSIGN ed_additional_info->* TO <ls_additional_info>.
        CALL METHOD lo_map_class->(lv_map_method)
          EXPORTING
            is_source = is_source
          IMPORTING
            es_target = es_target
            es_additional_info = <ls_additional_info>.
      ELSE.                                           "End 2777017
        CALL METHOD lo_map_class->(lv_map_method)
          EXPORTING
            is_source         = is_source
          IMPORTING
            es_target         = es_target.
      ENDIF.                                          "2777017
    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>PACK_INTERFACE_ID
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_NS                          TYPE        STRING
* | [--->] IV_IFNAME                      TYPE        STRING
* | [--->] IV_IFVERSION                   TYPE        STRING
* | [<-()] RV_INTERFACE_ID                TYPE        EDOC_INTERFACE_ID
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD pack_interface_id.
* Pack Namespace, Interface Name & Version into Interf.ID

    DATA ls_edointaif TYPE edointaif.                                         "2186689
    DATA ls_interface TYPE ty_interface.                                      "2186689

    CLEAR: ls_interface, rv_interface_id.

    ls_interface-ns = iv_ns.                                                  "2186689
    ls_interface-ifname = iv_ifname.                                          "2186689
    ls_interface-ifversion = iv_ifversion.                                    "2186689

    SELECT SINGLE * FROM edointaif INTO ls_edointaif "#EC CI_GENBUFF          "2186689
      WHERE aif_ns        = ls_interface-ns                                   "2186689
      AND   aif_interface = ls_interface-ifname                               "2186689
      AND   aif_version   = ls_interface-ifversion.                           "2186689

    IF sy-subrc = 0.                                                          "2186689
      rv_interface_id = ls_edointaif-interface_id.                            "2186689
    ELSE.                                                                     "2186689
*     Build interface ID
      CONCATENATE ls_interface-ns ls_interface-ifname ls_interface-ifversion  "2186689
             INTO rv_interface_id.                                            "2186689
      CONDENSE rv_interface_id NO-GAPS.
    ENDIF.                                                                    "2186689

  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOC_MAP_AIF->RAISE_EXCEPTION
* +-------------------------------------------------------------------------------------------------+
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD raise_exception.

    IF mt_error_messages_aif IS NOT INITIAL.
      SORT mt_error_messages_aif.
      DELETE ADJACENT DUPLICATES FROM mt_error_messages_aif.
      RAISE EXCEPTION TYPE cx_edocument
        EXPORTING
          mt_message = mt_error_messages_aif.
    ENDIF.
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method CL_EDOC_MAP_AIF=>UNPACK_INTERFACE_ID
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_INTERFACE_ID                TYPE        EDOC_INTERFACE_ID
* | [--->] IV_INT_VERSION                 TYPE        EDOC_INT_VERSION(optional)
* | [<---] EV_NS                          TYPE        STRING
* | [<---] EV_IFNAME                      TYPE        STRING
* | [<---] EV_IFVERSION                   TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD UNPACK_INTERFACE_ID.
* Unpack Namespace, Interface Name & Version into Interf.ID

    DATA lv_ifname    TYPE c LENGTH 11.
    DATA ls_edointaif TYPE edointaif.
    DATA ls_interface TYPE ty_interface.                  "2186689

    CLEAR: ls_interface, ev_ns, ev_ifname, ev_ifversion.  "2186689

    SELECT SINGLE * FROM edointaif INTO ls_edointaif
      WHERE interface_id = iv_interface_id
      AND   int_version  = iv_int_version.

    IF sy-subrc = 0.
      ls_interface-ns = ls_edointaif-aif_ns.              "2186689
      ls_interface-ifname = ls_edointaif-aif_interface.   "2186689
      ls_interface-ifversion = ls_edointaif-aif_version.  "2186689
    ELSE.
      ls_interface-ns = iv_interface_id+0(6).             "2186689
    lv_ifname = iv_interface_id+6.
    SHIFT lv_ifname RIGHT DELETING TRAILING space.
      ls_interface-ifname = lv_ifname+0(10).              "2186689
      CONDENSE ls_interface-ifname NO-GAPS.               "2186689
      ls_interface-ifversion = lv_ifname+10(1).           "2186689
      CONDENSE ls_interface-ifname NO-GAPS.               "2186689
    ENDIF.

    ev_ns = ls_interface-ns.                              "2186689
    ev_ifname = ls_interface-ifname.                      "2186689
    ev_ifversion = ls_interface-ifversion.                "2186689

  endmethod.
ENDCLASS.

class CL_EDOC_MAP_UBL_SD definition
  public
  inheriting from CL_EDOC_MAP_UBL
  create public .

public section.

  methods GET_UBL_MAPPING_SOURCE
    redefinition .
protected section.

  types:                                                  "3030901
    BEGIN OF ty_order_line_ref,
          vbeln   TYPE vbeln,
          posnr   TYPE posnr,
          bstkd   TYPE bstkd,
         END OF   ty_order_line_ref .
  types:                                                  "3030901
    BEGIN OF ty_delivery_line_ref,
          vbeln TYPE vbeln,
          posnr TYPE posnr,
          kunnr TYPE kunnr,
          adrnr TYPE adrnr,                "3013311
         END OF ty_delivery_line_ref .
  types:                                                  "3030901
    BEGIN OF ty_customer_address_line_ref,
          kunnr TYPE kunnr,
          adrnr TYPE adrnr,
          stceg TYPE stceg,                               "3042934
         END OF ty_customer_address_line_ref .
  types:
    tt_order_line_ref TYPE TABLE OF ty_order_line_ref .
  types:
    tt_delivery_line_ref TYPE TABLE OF ty_delivery_line_ref .
  types:
    tt_customer_address_line_ref TYPE TABLE OF ty_customer_address_line_ref .
  types:
    ty_unit_price TYPE p LENGTH 11 DECIMALS 5 .
  types:                                                  "3030901
    BEGIN OF ty_unit_prices,                              "3030901
           unit_quan  TYPE bstmg,                         "3030901
           unit_price TYPE ty_unit_price,                 "3030901
         END OF ty_unit_prices .                          "3030901
  types:                                                  "3030901
    tt_unit_prices TYPE TABLE OF ty_unit_prices .

  constants MC_PRICE type STRING value 'PRICE' ##NO_TEXT.
  constants MC_ALLOW_CHARGE type STRING value 'ALLOWANCE_CHARGE' ##NO_TEXT.
  constants MC_VAT_CONDITIONS type STRING value 'VAT_CONDITIONS' ##NO_TEXT.
  constants MC_HEADER_ALLOWANCE_ACTIVE type STRING value 'HEADER_ALLOWANCE_ACT' ##NO_TEXT.
  constants MC_HEADER_TEXT_ID type EDOC_FIX_VALUE_NAME value 'HEADER_TEXT_ID' ##NO_TEXT.
  data MV_BILL_CAT type FKTYP .
  data MV_MULTIPLE_ORDERS type BOOLE_D .
  data MT_ORDER_LINE_REF type TT_ORDER_LINE_REF .
  data MV_MULTIPLE_DELIVERY type BOOLE_D .
  data MT_DELIVERY_LINE_REF type TT_DELIVERY_LINE_REF .
  data MT_CUSTOMER_ADDRESS_LINE_REF type TT_CUSTOMER_ADDRESS_LINE_REF .
  data MT_DOCFLOW type TDT_DOCFLOW .

  methods DETERMINE_VAT_PARTICIPANT_TYPE
    importing
      !IV_COUNTRY type LAND1
    returning
      value(RV_PARTY_CODE_TYPE) type EDOC_PARTY_CODE_TYPE .
  methods GET_DOCUMENT_FLOW .
  methods READ_NOTE_TEXT
    importing
      !IV_SPRAS type STXH-TDSPRAS
    returning
      value(RT_TEXT_LINES) type TLINE_TAB .
  methods READ_DOC_FROM_FLOW
    importing
      !IV_VBTYP type TDS_DOCFLOW-VBTYP_N
    returning
      value(RV_DOCNUM) type VBELN .
  methods FILL_CONTRACT_REFERENCE
    returning
      value(RV_CONTRACT) type EDO_UBL_CONTRACT_DOCUMENT_REFE .
  methods FILL_PROJECT_REFERENCE
    returning
      value(RV_PROJECT) type EDO_UBL_PROJECT_REFERENCE .
  methods FILL_TENDER
    returning
      value(RV_TENDER) type EDO_UBL_ORIGINATOR_DOCUMENT_RE .
  methods GET_UNIT_PRICE_AND_AMOUNT
    importing
      !IV_CUST_QUAN type STRING optional
      !IV_PRICE_AMOUNT type KBETR optional
      !IT_UNIT_PRICES type TT_UNIT_PRICES
      !IV_UNIT_PRICE type TY_UNIT_PRICE optional
    exporting
      !EV_UNIT_QUAN type STRING
      !EV_PRICE_AMOUNT type STRING .
  methods GET_ALLOWANCE_CHARGE_FROM_COND
    importing
      !IS_KOMV type KOMV
      !IS_TAX_CATEGORY type EDO_UBL_TAX_CATEGORY optional
    exporting
      !EV_ALLOWANCE_CHARGE type EDO_UBL_ALLOWANCE_CHARGE_TAB .
  methods GET_TAX_TOTAL_LINE
    importing
      !IS_VBRP type VBRP
    exporting
      !EV_TAX_AMOUNT type STRING
      !EV_CURRENCY type STRING .
  methods FILL_PRICE_AMOUNT
    importing
      !IS_VBRP type VBRP
      !IV_QUANTITY type STRING optional
    exporting
      !EV_PRICE_AMOUNT type STRING
      !EV_CURRENCY type STRING
      !EV_UNIT_QUAN type STRING .
  methods FILL_ALLOWANCE_CHARGE_LINE
    importing
      !IV_POSNR type POSNR
    exporting
      !EV_ALLOWANCE_CHARGE type EDO_UBL_ALLOWANCE_CHARGE_TAB .
  methods FILL_ALLOWANCE_TOTAL
    importing
      !IV_EXCLUDE_ROUNDING_AMOUNT type ABAP_BOOL optional
    returning
      value(RS_ALLOWANCE_TOTAL_AMOUNT) type EDO_UBL_ALLOWANCE_TOTAL_AMOUN1 .
  methods FILL_CHARGE_TOTAL
    importing
      !IV_EXCLUDE_ROUNDING_AMOUNT type ABAP_BOOL optional
    returning
      value(RS_CHARGE_TOTAL_AMOUNT) type EDO_UBL_CHARGE_TOTAL_AMOUNT .
  methods GET_PRICE_FROM_CONDITION
    importing
      !IS_KOMV type KOMV
      !IV_QUANTITY type STRING
      !IS_VBRP type VBRP
    exporting
      !EV_PRICE_AMOUNT type STRING
      !EV_CURRENCY type STRING
      !EV_UNIT_QUAN type STRING
      !EV_UNIT_PRICE type TY_UNIT_PRICE
      !EV_CR_PRICE_AMOUNT type KBETR
      !ES_UNIT_PRICES type TY_UNIT_PRICES .
  methods GET_ALLOWANCE_CHARGE_COND_TYPE
    importing
      !IV_POSNR type POSNR optional
      !IV_HEADER_ALLOWANCE type BOOLE_D optional
    exporting
      !ET_KOMV type KOMV_TAB .
  methods GET_ITEM_DESCRIPTION
    importing
      !IV_TEXT_NAME type TDOBNAME
      !IV_OBJECT type TDOBJECT
    exporting
      !ET_LINES type TLINE_TAB .
  methods GET_ALLOWANCE_CHARGE_ITEM
    importing
      !IV_POSNR type POSNR
    exporting
      !ET_KOMV type KOMV_TAB .
  methods GET_ROUNDING_OFF_AMOUNT
    importing
      !IV_POSNR type POSNR optional
    returning
      value(RV_COND_VALUE) type KWERT .
  methods CALCULATE_TAX_BASIS_AMOUNT
    importing
      !IV_MWSKZ type MWSKZ
      !IT_GROUP type TT_GROUP
    returning
      value(RV_AMOUNT) type TY_V_SUBTOTAL .

  methods FILL_ALLOWANCE_CHARGE
    redefinition .
  methods FILL_BILLING_REFERENCE
    redefinition .
  methods FILL_BUYER_REFERENCE
    redefinition .
  methods FILL_CREDIT_NOTE
    redefinition .
  methods FILL_CREDIT_NOTE_DELIVERY
    redefinition .
  methods FILL_CREDIT_NOTE_LINE
    redefinition .
  methods FILL_DELIVERY
    redefinition .
  methods FILL_DUE_DATE
    redefinition .
  methods FILL_INVOICE
    redefinition .
  methods FILL_INVOICE_LINE
    redefinition .
  methods FILL_LINE_EXTENSION_AMOUNT
    redefinition .
  methods FILL_MONETARY_TOTAL
    redefinition .
  methods FILL_NOTE
    redefinition .
  methods FILL_ORDER_LINE_REF
    redefinition .
  methods FILL_ORDER_REFERENCE
    redefinition .
  methods FILL_PARTY_IDENTIFICATION
    redefinition .
  methods FILL_PAYABLE_ROUNDING_AMOUNT
    redefinition .
  methods FILL_PAYMENT_MEANS
    redefinition .
  methods FILL_PAYMENT_TERMS
    redefinition .
  methods FILL_TAX_EXCLUSIVE_AMOUNT
    redefinition .
  methods FILL_TAX_TOTAL
    redefinition .
  methods GET_DELIVERY_DATE_FOR_CR_NOTE
    redefinition .
  methods GET_PARTNER_ID_AND_TYPE
    redefinition .
  methods GET_SEPA_MANDATE
    redefinition .
  methods INIT_MAPPING
    redefinition .
private section.
ENDCLASS.



CLASS CL_EDOC_MAP_UBL_SD IMPLEMENTATION.


  METHOD calculate_tax_basis_amount.
    "begin of note 3289969
    "When the basis amount was calculated line by line, rounding differences may become bigger and bigger.
    "This could eventually lead to differences in field BasisAmount of a CII (urn:un:unece:uncefact:data:standard:CrossIndustryInvoice:100)
    "Deviations there could raise a schematron error BR-S-08. The calculation in this method helps to prevent such issues.
    DATA lt_group TYPE tt_group.
    FIELD-SYMBOLS <ls_group> TYPE ty_s_group.
    lt_group = it_group.
    DATA lv_precise_amount TYPE ty_v_subtotal.
    TYPES: BEGIN OF ty_s_subtotal_by_kbetr,
             kbetr    TYPE kbetr,
             krech    TYPE krech,
             subtotal TYPE ty_v_subtotal,
           END OF ty_s_subtotal_by_kbetr.
    TYPES: ty_t_subtotal_by_kbetr TYPE SORTED TABLE OF ty_s_subtotal_by_kbetr WITH UNIQUE KEY kbetr.
    DATA lt_subtotals TYPE ty_t_subtotal_by_kbetr.
    FIELD-SYMBOLS <ls_subtotal> TYPE ty_s_subtotal_by_kbetr.
    DATA ls_sum TYPE ty_s_subtotal_by_kbetr.

    LOOP AT lt_group ASSIGNING <ls_group> WHERE mwsk1 = iv_mwskz.
      READ TABLE lt_subtotals ASSIGNING <ls_subtotal> WITH KEY kbetr = <ls_group>-kbetr.
      IF sy-subrc NE 0.
        ls_sum-kbetr = <ls_group>-kbetr.
        INSERT ls_sum INTO TABLE lt_subtotals ASSIGNING <ls_subtotal>.
      ENDIF.

      <ls_subtotal>-subtotal = <ls_subtotal>-subtotal + <ls_group>-kawrt.
      <ls_subtotal>-krech = <ls_group>-krech.
    ENDLOOP.
    LOOP AT lt_subtotals ASSIGNING <ls_subtotal>.
      IF <ls_subtotal>-krech = 'H'.
        lv_precise_amount = lv_precise_amount + <ls_subtotal>-subtotal / ( 1 + ( <ls_subtotal>-kbetr / 10 ) / 100 ).
      ELSE.
        lv_precise_amount = lv_precise_amount + <ls_subtotal>-subtotal.
      ENDIF.
    ENDLOOP.
    rv_amount = lv_precise_amount.
    "end of note 3289969
  ENDMETHOD.


  METHOD determine_vat_participant_type.
    "Start of Change 3289969
    DATA lo_edoc_eu_db TYPE REF TO if_edocument_eu_db.
    DATA ls_edoeuparty TYPE edoeuparty.
    DATA lv_country_iso TYPE intca.
    CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
      EXPORTING
        sap_code  = iv_country
      IMPORTING
        iso_code  = lv_country_iso                 " ISO code for the country
      EXCEPTIONS
        not_found = 1                " No entry found for SAP code
        OTHERS    = 2.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.
    lo_edoc_eu_db = create_edocument_eu_db( ).
    DATA lv_party_id_type TYPE edoc_party_id_type.
    CONCATENATE lv_country_iso ':VAT' INTO lv_party_id_type.
    lo_edoc_eu_db->select_edoeuparty(
      EXPORTING
        iv_party_id_type = lv_party_id_type                 " EU Party Identification Type
      RECEIVING
        rs_edoeuparty    = ls_edoeuparty                 " eDocument - EU Party Identification Type
    ).
    rv_party_code_type = ls_edoeuparty-party_code_type.
    "End of Change 3289969
  ENDMETHOD.


  METHOD fill_allowance_charge.                             "Added with SAP Note 2905102

    DATA: ls_komv         TYPE komv,
          ls_source_komv  TYPE komv,                        "2968006
          ls_tax_subtotal TYPE edo_ubl_tax_subtotal,
          ls_tax_total    TYPE edo_ubl_tax_total,
          lt_komv         TYPE STANDARD TABLE OF komv,
          lv_kbetr        TYPE kbetr,                       "2968006
          lv_percent      TYPE string,                      "2968006
          lv_intca        TYPE intca,
          lv_vmapname     TYPE char20,
          lv_tax_category TYPE char2,
          lv_tax_country  TYPE land1.                       "3085941

    FIELD-SYMBOLS: <fs_tax_country_tab> TYPE table,         "3085941
                   <fs_tax_country>     TYPE any.           "3085941

    get_allowance_charge_cond_type( IMPORTING et_komv = lt_komv ).

* Begin of change 3085941
    ASSIGN COMPONENT 'TAX_COUNTRY' OF STRUCTURE ms_source-source_header TO <fs_tax_country_tab>.
    IF <fs_tax_country_tab> IS ASSIGNED.
      READ TABLE <fs_tax_country_tab> INDEX 1 ASSIGNING <fs_tax_country>.
    ENDIF.
    IF <fs_tax_country> IS ASSIGNED.
      lv_tax_country = <fs_tax_country>.
    ELSE.
      lv_tax_country = ms_source-source_header-land.
    ENDIF.
* End of 3085941
    CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
      EXPORTING
        sap_code  = lv_tax_country                                     "3085941
      IMPORTING
        iso_code  = lv_intca
      EXCEPTIONS
        not_found = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
      MESSAGE e072(edocument_eu)
          WITH lv_tax_country                                          "3085941
          INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.

    READ TABLE rs_tax_total INTO ls_tax_total INDEX 1.
    LOOP AT lt_komv INTO ls_komv.
      CONCATENATE lv_intca '_TAX_CATEGORY' INTO lv_vmapname.
      lv_tax_category = get_value_mapping( iv_vmapname    = lv_vmapname
                                           iv_int_value   = ls_komv-mwsk1
                                           iv_err_msg_ind = abap_false ).
      IF lv_tax_category IS INITIAL.
        lv_tax_category = get_value_mapping( iv_vmapname    = 'TAX_CATEGORY'
                                             iv_int_value   = ls_komv-mwsk1
                                             iv_err_msg_ind = abap_false )."2968006 no checks in check_inv
      ENDIF.
* Start of change 2968006
      CLEAR ls_source_komv.
      LOOP AT ms_source-komv INTO ls_source_komv WHERE kposn = ls_komv-kposn AND mwsk1 = ls_komv-mwsk1 AND koaid = 'D'.
        CLEAR : ls_tax_subtotal, lv_kbetr, lv_percent.
        lv_percent = lv_kbetr = ls_source_komv-kbetr / 10.
        format_negative_amount( CHANGING cv_amount = lv_percent ).
        READ TABLE ls_tax_total-tax_subtotal INTO ls_tax_subtotal
                                             WITH KEY tax_category-id-base-base-content      = lv_tax_category
                                                      tax_category-percent-base-base-content = lv_percent.
        IF sy-subrc = 0.
          EXIT.
        ENDIF.
      ENDLOOP.
      IF ls_tax_subtotal IS NOT INITIAL.
* End of Change 2968006
        get_allowance_charge_from_cond( EXPORTING is_komv = ls_komv
                                                  is_tax_category = ls_tax_subtotal-tax_category
                                        IMPORTING ev_allowance_charge = rt_allowance_charge ).
      ENDIF.
    ENDLOOP.

  ENDMETHOD.


  METHOD fill_allowance_charge_line. "added with SAP Note 2871404

    DATA: lt_komv TYPE STANDARD TABLE OF komv,              "2905102
          ls_komv TYPE komv.                                "Del - 2905102

* Begin of 2905102
                                                            "Del - 2905102
    get_allowance_charge_item( EXPORTING iv_posnr = iv_posnr
                               IMPORTING et_komv = lt_komv ).

    LOOP AT lt_komv INTO ls_komv.
* End of 2905102
      get_allowance_charge_from_cond(
          EXPORTING
            is_komv = ls_komv
          IMPORTING
           ev_allowance_charge = ev_allowance_charge ).
    ENDLOOP.
                                                            "Del - 2905102
  ENDMETHOD.


  METHOD fill_allowance_total.                              "added with SAP Note 2905102

    DATA : lv_kwert TYPE kwert,
           ls_komv  TYPE komv,
           lt_komv  TYPE STANDARD TABLE OF komv.

    get_allowance_charge_cond_type( IMPORTING et_komv = lt_komv ).

    IF lt_komv IS NOT INITIAL.
      LOOP AT lt_komv INTO ls_komv WHERE kwert < 0.
        lv_kwert = lv_kwert + ls_komv-kwert.
      ENDLOOP.

      IF lv_kwert IS NOT INITIAL.
        rs_allowance_total_amount-base-currency_id = ms_source-vbrk-waerk.
        rs_allowance_total_amount-base-content = abs( lv_kwert ).
        format_negative_amount( CHANGING cv_amount = rs_allowance_total_amount-base-content ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD fill_billing_reference.

    DATA: ls_billing_reference TYPE edo_ubl_billing_reference,
          lv_vbelv             TYPE vbelv,
          lv_xblnr             TYPE xblnr_v1,
          ls_source_vbrp       TYPE vbrp,
          lv_vbtyp_v           TYPE vbtyp_v,
          lv_fkdat             TYPE fkdat.

* First check if the document is a reversal document 3013311
    IF ms_source-vbrk-sfakn IS NOT INITIAL.                 "3013311
      TEST-SEAM fill_billing_ref_04.                        "3013311
        SELECT SINGLE fkdat FROM vbrk                       "3013311
          INTO lv_fkdat                                     "3013311
          WHERE vbeln = ms_source-vbrk-sfakn.               "3013311
      END-TEST-SEAM.                                        "3013311
      lv_xblnr = ms_source-vbrk-sfakn.                      "3013311
    ELSE.                                                   "3013311
*   Get reference invoice or credit note number:
*   If document is part of a document flow, get the number from there
*   If it is a stand-alone document, get the number from the 'Assignment' field

      TEST-SEAM fill_billing_ref_01.                        "2854416
*   Get invoice from document flow
        SELECT SINGLE vbelv vbtyp_v FROM vbfa           "#EC CI_NOFIELD
          INTO (lv_vbelv, lv_vbtyp_v)
          WHERE vbeln = ms_source-vbrk-vbeln
          AND ( vbtyp_v = 'M' OR vbtyp_v = 'O' ). "Invoice or Credit Note
      END-TEST-SEAM.                                        "2854416

      IF sy-subrc IS NOT INITIAL.
        READ TABLE ms_source-vbrp INTO ls_source_vbrp INDEX 1.

        TEST-SEAM fill_billing_ref_02.                      "2854416
          SELECT SINGLE vbelv vbtyp_v FROM vbfa         "#EC CI_NOFIELD
            INTO (lv_vbelv, lv_vbtyp_v)
            WHERE vbeln = ls_source_vbrp-vgbel
            AND ( vbtyp_v = 'M' OR vbtyp_v = 'O' ). "Invoice or Credit Note
        END-TEST-SEAM.                                      "2854416
        IF sy-subrc IS NOT INITIAL.
          lv_vbelv = ms_source-vbrk-zuonr. "Get invoice from 'Assignment' field
        ENDIF.
        IF lv_vbelv CO '0'.                                 "2905102
          CLEAR lv_vbelv.                                   "2905102
        ENDIF.                                              "2905102
      ENDIF.

      IF lv_vbelv IS NOT INITIAL.
        TEST-SEAM fill_billing_ref_03.                      "2854416
*   Get external invoice number
          SELECT SINGLE xblnr fkdat FROM vbrk
            INTO (lv_xblnr, lv_fkdat)
            WHERE vbeln = lv_vbelv.
        END-TEST-SEAM.                                      "2854416
        IF lv_xblnr CO '0'.                                 "2905102
          CLEAR lv_xblnr.                                   "2905102
        ENDIF.                                              "2905102
      ENDIF.
    ENDIF.                                                  "del 3013311

    IF lv_xblnr IS NOT INITIAL.                             "3013311
      ls_billing_reference-invoice_document_reference-id-base-base-content = lv_xblnr. "3013311
      ls_billing_reference-invoice_document_reference-issue_date-base-content = lv_fkdat. "3013311
      APPEND ls_billing_reference TO rt_billing_reference.  "3013311
    ENDIF.                                                  "3013311

  ENDMETHOD.


  METHOD fill_buyer_reference.

    DATA: ls_vbrp TYPE vbrp.

    READ TABLE ms_source-vbrp INTO ls_vbrp INDEX 1.

    IF ls_vbrp-aubel IS NOT INITIAL.
      TEST-SEAM fill_buyer_reference01.                       "2854416
      SELECT SINGLE ihrez FROM vbkd
        INTO rv_buyer_reference-base-base-content
        WHERE vbeln = ls_vbrp-aubel
        AND   posnr = space.
      END-TEST-SEAM.                                          "2854416
    ENDIF.

  ENDMETHOD.


  METHOD fill_charge_total.                                 "added with SAP Note 2905102

    DATA : lv_kwert TYPE kwert,
           ls_komv  TYPE komv,
           lt_komv  TYPE STANDARD TABLE OF komv.

    get_allowance_charge_cond_type( IMPORTING et_komv = lt_komv ).

    IF lt_komv IS NOT INITIAL.
      LOOP AT lt_komv INTO ls_komv WHERE kwert > 0.
        lv_kwert = lv_kwert + ls_komv-kwert.
      ENDLOOP.

      IF lv_kwert IS NOT INITIAL.
        rs_charge_total_amount-base-currency_id = ms_source-vbrk-waerk.
        rs_charge_total_amount-base-content = lv_kwert.
        format_negative_amount( CHANGING cv_amount = rs_charge_total_amount-base-content ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD fill_contract_reference.                           "3085941

    DATA lv_contract TYPE vbrk-vbeln.
    CONSTANTS lc_contract TYPE tds_docflow-vbtyp_n VALUE 'G'.

    lv_contract = read_doc_from_flow( iv_vbtyp  = lc_contract ).

    rv_contract-id-base-base-content = lv_contract.

  ENDMETHOD.


  METHOD fill_credit_note.

* UBL Version
    rs_target-ublversion_id-base-base-content = mv_type_version_id.

* Customization ID
    rs_target-customization_id-base-base-content = mv_customization_id.

* Profile ID                                                "2805188
    rs_target-profile_id-base-base-content = mv_process_id. "2805188

* ID
    rs_target-id-base-base-content = ms_source-vbrk-vbeln.

* Issue Date
    rs_target-issue_date-base-content = ms_source-vbrk-fkdat.

* Type Code
    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_true. "3259089
      rs_target-credit_note_type_code-base-base-content = get_value_mapping( iv_vmapname    = 'INVOICE_TYPE_CODE_SD'
                                                                             iv_int_value   = ms_source-vbrk-fkart
                                                                             iv_err_msg_ind = abap_false )."2968006
    ENDIF.
* Note
    rs_target-note = fill_note( ).

* Document Currency Code
    rs_target-document_currency_code-base-base-content = ms_source-vbrk-waerk.
* Not needed for BIS3 2805246
    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
      rs_target-document_currency_code-base-base-list_id = mv_currency_code_id. "2805246
    ENDIF.                                                  "2805246

* Tax Currency Code                                                   "2871404
    IF ms_t001-waers <> ms_source-vbrk-waerk.                         "2871404
      rs_target-tax_currency_code-base-base-content = ms_t001-waers.  "2871404
    ENDIF.                                                            "2871404

* Buyer Reference
    TRY.
        rs_target-buyer_reference = fill_buyer_reference( ).
      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

* Order Reference
    rs_target-order_reference = fill_order_reference( ).
                                                                      "@Del - 2871404
* Billing Reference
    rs_target-billing_reference = fill_billing_reference( ).

* Accounting Supplier Party
    rs_target-accounting_supplier_party = fill_supplier_party( ).

* Accounting Customer Party
    rs_target-accounting_customer_party = fill_customer_party( ).

* Fill Delivery
    rs_target-delivery = fill_delivery( ).                             "2871404 "2938424

* Payment Means 2854416
    rs_target-payment_means = fill_payment_means( ).

* Payment Terms
    rs_target-payment_terms = fill_payment_terms( ).

* Tax Total
    rs_target-tax_total = fill_tax_total( ).

* Allowance Charge
  fill_allowance_charge(  EXPORTING rs_tax_total = rs_target-tax_total "2905102
                          RECEIVING rt_allowance_charge = rs_target-allowance_charge ). "2905102

* Legal Monetary Total
    rs_target-legal_monetary_total = fill_monetary_total( ).

* Invoice Line
    rs_target-credit_note_line = fill_credit_note_line( ).

* Begin of change 2992171
* Adjust Parties' TaxScheme if the Tax Exempt Code 'O' used  "2992171
  IF mv_tax_exempt_code = mc_tax_exempt_code_o.
    remove_vat_tax_ids(
      CHANGING
        cs_accounting_supplier_party = rs_target-accounting_supplier_party
        cs_accounting_customer_party = rs_target-accounting_customer_party
        cs_tax_representative_party  = rs_target-tax_representative_party ).

  ENDIF.
* End of change 2992171

  ENDMETHOD.


  METHOD fill_credit_note_delivery. "Added with SAP Note 2871404
* Obsolete with SAP Note 2938424
  ENDMETHOD.


  METHOD fill_credit_note_line.

* Begin of 2938424
    TYPES: BEGIN OF ty_eipo,
             exnum TYPE exnum,
             expos TYPE expos,
             stawn TYPE stawn,
             herkl TYPE herkl,
           END OF ty_eipo.
* End of 2938424
    DATA: ls_credit_note_line TYPE edo_ubl_credit_note_line,
          ls_vbrp             TYPE vbrp,
          lv_isocode          TYPE isocd_unit,
          lv_autte            TYPE autte,
          lv_vmapname         TYPE char20,                  "2871404
          ls_vbap             TYPE vbap,                    "2905102
          lv_netwr            TYPE netwr_fp,                "2905102
          lv_intca            TYPE intca,                   "2905102
          ls_fplt             TYPE fplt,
          ls_komv             TYPE komv,
          lv_text_name        TYPE thead-tdname,
          lv_tax_cond_found   TYPE abap_bool,               "3013311
          lt_komv             TYPE STANDARD TABLE OF komv,  "2905102
          lt_komv_source      TYPE STANDARD TABLE OF komv,  "3042934
          lt_text_lines       TYPE TABLE OF tline,
          lt_eipo             TYPE TABLE OF ty_eipo,        "2938424
          ls_eipo             TYPE ty_eipo,                 "2938424
          lv_unit_quan        TYPE string,                  "2938424
          ls_commodity        TYPE edo_ubl_commodity_classificat3, "2938424
          lv_round_amount     TYPE kwert,                   "2938424
          ls_text_lines       TYPE tline,                   "2968006
          lv_tax_country      TYPE land1,                   "3085941
          lv_quan_dec         TYPE numc1 VALUE '3'.         "3170418

    FIELD-SYMBOLS: <fs_tax_country_tab> TYPE table,         "3085941
                   <fs_tax_country>     TYPE any.           "3085941

* Begin of change 3085941
    ASSIGN COMPONENT 'TAX_COUNTRY' OF STRUCTURE ms_source-source_header TO <fs_tax_country_tab>.
    IF <fs_tax_country_tab> IS ASSIGNED.
      READ TABLE <fs_tax_country_tab> INDEX 1 ASSIGNING <fs_tax_country>.
    ENDIF.
    IF <fs_tax_country> IS ASSIGNED.
      lv_tax_country = <fs_tax_country>.
    ELSE.
      lv_tax_country = ms_source-source_header-land.
    ENDIF.
* End of change 3085941
* Begin of 2905102
    CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
      EXPORTING
        sap_code  = lv_tax_country                                     "3085941
      IMPORTING
        iso_code  = lv_intca
      EXCEPTIONS
        not_found = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
      MESSAGE e072(edocument_eu)
          WITH lv_tax_country                               "3085941
          INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.
* End of 2905102
* Begin of 2938424
    TEST-SEAM fill_credit_note_line_05.
      IF ms_source-vbrk-exnum IS NOT INITIAL
        AND ms_source-vbrp IS NOT INITIAL.                  " 3042934
        SELECT exnum
               expos
               stawn
               herkl FROM eipo INTO TABLE lt_eipo
               FOR ALL ENTRIES IN ms_source-vbrp
               WHERE exnum = ms_source-vbrk-exnum
               AND expos = ms_source-vbrp-posnr
               ORDER BY PRIMARY KEY.
      ENDIF.
    END-TEST-SEAM.
    "@Del-3042934
* End of 2938424
    " Start of Change 3042934
    SORT ms_source-komv BY kposn koaid kinak kstat.
    lt_komv_source = ms_source-komv.
    SORT lt_komv_source BY kposn koaid kstat.
    " End of Change 3042934
    CLEAR: ls_vbrp.

    LOOP AT ms_source-vbrp INTO ls_vbrp.
*   ID
      ls_credit_note_line-id-base-base-content = ls_vbrp-posnr.

*   Credited Quantity
      ls_credit_note_line-credited_quantity-base-base-content = ls_vbrp-fkimg. "3042934
      DESCRIBE FIELD ls_vbrp-fkimg DECIMALS lv_quan_dec.    "3170418
      format_negative_amount( EXPORTING iv_decimal = lv_quan_dec "3170418
                              CHANGING  cv_amount  = ls_credit_note_line-credited_quantity-base-base-content ). "3170418

      IF ls_vbrp-vrkme IS NOT INITIAL.

        lv_isocode = get_mapping_val( iv_vmapname  = 'UNIT_OF_MEASURE_CODE' "3013311
                                      iv_int_value = ls_vbrp-vrkme ). "3013311

        IF lv_isocode IS INITIAL.                           "3013311

          CALL FUNCTION 'UNIT_OF_MEASURE_SAP_TO_ISO'
            EXPORTING
              sap_code    = ls_vbrp-vrkme
            IMPORTING
              iso_code    = lv_isocode
            EXCEPTIONS
              not_found   = 1
              no_iso_code = 2
              OTHERS      = 3.

          IF sy-subrc IS NOT INITIAL.
            add_error_message( ).
          ENDIF.

        ENDIF.                                              "3013311

      ENDIF.

      ls_credit_note_line-credited_quantity-base-base-unit_code = lv_isocode.
* Not needed for BIS3 2805246
      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
        ls_credit_note_line-credited_quantity-base-base-unit_code_list_id = "2805246
                                                  get_fix_value( iv_name        = 'UNIT_CODE_LIST_ID' "2805246
                                                                 iv_err_msg_ind = abap_false ). "2805246 2908006
      ENDIF.                                                "2805246

*   Line Extension Amount
*   Begin of 2905102
*   Allowance subtracted from line extension amount
      lv_netwr = ls_vbrp-netwr.
      CLEAR lt_komv.
      get_allowance_charge_cond_type( EXPORTING iv_posnr = ls_vbrp-posnr
                                      IMPORTING et_komv = lt_komv ).
      CLEAR ls_komv.
      LOOP AT lt_komv INTO ls_komv.
        lv_netwr = lv_netwr - ls_komv-kwert.
      ENDLOOP.
      ls_credit_note_line-line_extension_amount-base-content = lv_netwr.
*   End of 2905102
      IF mv_rounding_active EQ abap_true.                                            "Begin of 2938424
        lv_round_amount = get_rounding_off_amount( iv_posnr = ls_vbrp-posnr ).
        ls_credit_note_line-line_extension_amount-base-content = ls_credit_note_line-line_extension_amount-base-content - lv_round_amount.
      ENDIF.                                                                         "End of 2938424
      format_negative_amount( CHANGING cv_amount = ls_credit_note_line-line_extension_amount-base-content ).
      ls_credit_note_line-line_extension_amount-base-currency_id = ms_source-vbrk-waerk.
      IF ls_credit_note_line-line_extension_amount-base-content CS '-'. "Start 2905102
        ls_credit_note_line-credited_quantity-base-base-content = ls_credit_note_line-credited_quantity-base-base-content * -1.
        format_negative_amount( EXPORTING iv_decimal = lv_quan_dec "3170418
                                CHANGING  cv_amount  = ls_credit_note_line-credited_quantity-base-base-content ). "3170418
      ENDIF.                                                            "End 2905102

*   Invoice Period
      TEST-SEAM fill_credit_note_line01.                    "2854416
        SELECT SINGLE autte FROM fpla INTO lv_autte     "Billing Plan header data
          WHERE fplnr = ls_vbrp-fplnr.
      END-TEST-SEAM.                                        "2854416

      IF sy-subrc = 0.
        TEST-SEAM fill_credit_note_line02.                  "2854416
          SELECT SINGLE fkdat nfdat FROM fplt INTO CORRESPONDING FIELDS OF ls_fplt    "Reference period
            WHERE fplnr = ls_vbrp-fplnr
            AND   fpltr = ls_vbrp-fpltr.
        END-TEST-SEAM.                                      "2854416

        IF sy-subrc = 0.

          IF lv_autte = abap_true.         "Billing creation in advance
            ls_credit_note_line-invoice_period-start_date-base-content = ls_fplt-fkdat.
            ls_credit_note_line-invoice_period-end_date-base-content   = ls_fplt-nfdat.
          ELSE.                            "No billing creation in advance
            ls_credit_note_line-invoice_period-start_date-base-content = ls_fplt-nfdat.
            ls_credit_note_line-invoice_period-end_date-base-content   = ls_fplt-fkdat.
          ENDIF.
        ENDIF.
      ENDIF.

* Begin of 2905102
      TEST-SEAM fill_credit_note_line_03.
        CLEAR ls_vbap.
        SELECT SINGLE * FROM vbap INTO ls_vbap "#EC CI_ALL_FIELDS_NEEDED
              WHERE vbeln = ls_vbrp-aubel AND               "2938424
                    posnr = ls_vbrp-aupos.                  "2938424
      END-TEST-SEAM.
      IF sy-subrc = 0.
        ls_credit_note_line-order_line_reference-line_id-base-base-content = ls_vbap-posex.
      ENDIF.
* End of 2905102
      "@Del-3042934

*   Allowance/Charge
      fill_allowance_charge_line(                           "2871404
        EXPORTING iv_posnr = ls_vbrp-posnr                  "2871404
        IMPORTING ev_allowance_charge = ls_credit_note_line-allowance_charge ). "2871404

      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
*   Tax Total
        get_tax_total_line(                                 "2871404
          EXPORTING is_vbrp = ls_vbrp                       "2871404
          IMPORTING ev_tax_amount = ls_credit_note_line-tax_total-tax_amount-base-content "2871404
                    ev_currency   = ls_credit_note_line-tax_total-tax_amount-base-currency_id ). "2871404
      ENDIF.

*Start of Change 2938424
*   Item Description From Invoice
      CLEAR: lv_text_name, lt_text_lines.
      CONCATENATE ls_vbrp-vbeln ls_vbrp-posnr INTO lv_text_name.
      get_item_description( EXPORTING iv_text_name = lv_text_name
                                      iv_object    = 'VBBP'
                            IMPORTING et_lines     = lt_text_lines ).
      IF lt_text_lines IS INITIAL.

        CLEAR lv_text_name.
        CONCATENATE ls_vbrp-aubel ls_vbrp-aupos INTO lv_text_name.
        get_item_description( EXPORTING iv_text_name = lv_text_name
                                        iv_object    = 'VBBP'
                              IMPORTING et_lines     = lt_text_lines ).
        IF lt_text_lines IS INITIAL.
*  Item Description From Material
          CLEAR lv_text_name.
          CONCATENATE ls_vbrp-matnr ms_source-vbrk-vkorg ms_source-vbrk-vtweg
                 INTO lv_text_name RESPECTING BLANKS.
          get_item_description( EXPORTING iv_text_name = lv_text_name
                                          iv_object    = 'MVKE'
                                IMPORTING et_lines     = lt_text_lines ).
        ENDIF.
      ENDIF.

      IF lt_text_lines IS INITIAL.
*End of Change 2938424
        ls_credit_note_line-item-description-base-base-content = ls_vbrp-arktx.
      ELSE.
        LOOP AT lt_text_lines INTO ls_text_lines.                             "Begin of 2968006
          IF sy-tabix EQ 1.
            ls_credit_note_line-item-description-base-base-content = ls_text_lines-tdline.
          ELSE.
            CONCATENATE ls_credit_note_line-item-description-base-base-content ls_text_lines-tdline
                   INTO ls_credit_note_line-item-description-base-base-content SEPARATED BY space.
          ENDIF.
        ENDLOOP.                                                              "End of 2968006
      ENDIF.

*   Item Name
      IF ls_vbrp-arktx IS NOT INITIAL.
        ls_credit_note_line-item-name-base-base-content = ls_vbrp-arktx.
        " Del-3042934
      ENDIF.

* Classified Tax Category
      CLEAR: ls_komv,
             lv_tax_cond_found.                             "3013311
      READ TABLE ms_source-komv INTO ls_komv
           WITH KEY kposn = ls_vbrp-posnr
                    koaid = 'D'
                    kinak = ''
                    kstat = ''
                    BINARY SEARCH.                          "3042934

      IF sy-subrc EQ 0.                                     "2854416
*Begin of 2938424
        lv_tax_cond_found = abap_true.                      "3013311
      ELSE.
        READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fixvaluename = gc_fixed_value_list_ubl-item_categories
                                                                     fieldvalue = ls_vbrp-pstyv.
        IF sy-subrc = 0.
          READ TABLE lt_komv_source INTO ls_komv            "3042934
               WITH KEY kposn = ls_vbrp-posnr
                        koaid = 'D'
                        kstat = ''
                        BINARY SEARCH.                      "3042934
          IF sy-subrc EQ 0.
            lv_tax_cond_found = abap_true.                  "3013311
          ENDIF.
        ENDIF.
      ENDIF.
      IF lv_tax_cond_found = abap_true.                     "3013311
*End of 2938424

* Begin of Change 2871404.
        CONCATENATE lv_intca '_TAX_CATEGORY' INTO lv_vmapname. "2905102
        ls_credit_note_line-item-classified_tax_category-id-base-base-content    = get_value_mapping(
                                                              iv_vmapname    = lv_vmapname            " Value Mapping
                                                              iv_int_value   = ls_komv-mwsk1          " Internal Value
                                                              iv_err_msg_ind = abap_false ).

        IF ls_credit_note_line-item-classified_tax_category-id-base-base-content IS INITIAL.
* End of Change 2871404.
          ls_credit_note_line-item-classified_tax_category-id-base-base-content = get_value_mapping(
                                                                  iv_vmapname    = 'TAX_CATEGORY'    " Value Mapping
                                                                  iv_int_value   = ls_komv-mwsk1     " Internal Value
                                                                  iv_err_msg_ind = abap_false ). " 2968006
        ENDIF.                                              "2871404
        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
          ls_credit_note_line-item-classified_tax_category-id-base-base-scheme_id = get_fix_value(
                                                                  iv_name        = 'TAX_CAT_SCHEME_ID'
                                                                  iv_err_msg_ind = abap_false ).    " 2968006 no checks in check_cre

          ls_credit_note_line-item-classified_tax_category-id-base-base-scheme_agency_id =
                                                        get_fix_value( iv_name = 'TAX_SCHEME_ID_AGENCY' ).

          ls_credit_note_line-item-classified_tax_category-tax_scheme-id-base-base-scheme_id =
                                                          get_fix_value( iv_name = 'TAX_SCHEME_ID_SCHEME' ).

          ls_credit_note_line-item-classified_tax_category-tax_scheme-id-base-base-scheme_agency_id =
                                                          get_fix_value( iv_name = 'TAX_SCHEME_ID_AGENCY' ).
        ENDIF.                                              "2905102

        ls_credit_note_line-item-classified_tax_category-tax_scheme-id-base-base-content = get_fix_value(
                                                                     iv_name        = 'TAX_SCHEME_ID'
                                                                     iv_err_msg_ind = abap_false ). " 2908006
        ls_credit_note_line-item-classified_tax_category-percent-base-base-content = ls_komv-kbetr / 10.
        format_negative_amount(                             "2905102
          CHANGING cv_amount = ls_credit_note_line-item-classified_tax_category-percent-base-base-content ). "2905102
* Begin of Change 2871404.
*Tax Exemption Reason Code

        IF ls_credit_note_line-item-classified_tax_category-percent-base-base-content = 0
          " Del@3071425
          "Deleted from 3030901
* Begin of Change 2992171
          AND ls_credit_note_line-item-classified_tax_category-id-base-base-content = mc_tax_exempt_code_o. "3030901   3071425
          "For the tax exempt code O we have specific rules, such as BR-O-01 to BR-O-14
          mv_tax_exempt_code = mc_tax_exempt_code_o.
          " Del@3071425
* End of Change 2992171
          " Del@3071425

          "not allowed to be filled in case Tax Category = 'O'
          CLEAR: ls_credit_note_line-item-classified_tax_category-percent-base-base-content. "3259089
        ENDIF.
* End of Change 2871404.
      ENDIF.                                                "Del 2871404

*   Sellers Item Identification
      ls_credit_note_line-item-sellers_item_identification-id-base-base-content = ls_vbrp-matnr. "2839436
*   Begin of 2938424
      READ TABLE lt_eipo INTO ls_eipo WITH KEY exnum = ms_source-vbrk-exnum
                                               expos = ls_vbrp-posnr
                                               BINARY SEARCH. "3042934
      IF sy-subrc = 0.
*   Origin Country
        ls_credit_note_line-item-origin_country-identification_code-base-base-content = ls_eipo-herkl.
* Start of 2992171
        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
          ls_credit_note_line-item-origin_country-identification_code-base-base-list_id = get_fix_value(
                                                                         iv_name        = gc_fixed_value_list_ubl-country_code_list_id
                                                                         iv_err_msg_ind = abap_true ).
        ENDIF.
* End of 2992171
*   Commodity code
        IF ls_eipo-stawn IS NOT INITIAL.                    "2938424
          ls_commodity-item_classification_code-base-base-content = ls_eipo-stawn. "2968006
          ls_commodity-item_classification_code-base-base-list_id = get_fix_value( "2968006
                        iv_name        = gc_fixed_value_list_ubl-commodity_list_id "2968006
                        iv_err_msg_ind = abap_true ).       "2968006
          APPEND ls_commodity TO ls_credit_note_line-item-commodity_classification.
        ENDIF.                                              "2938424
      ENDIF.
*   End of 2938424
*   Price Amount
      fill_price_amount(
        EXPORTING is_vbrp = ls_vbrp                         "2871404
                  iv_quantity = ls_credit_note_line-credited_quantity-base-base-content "2871404
        IMPORTING ev_price_amount = ls_credit_note_line-price-price_amount-base-content "2839436
                  ev_currency = ls_credit_note_line-price-price_amount-base-currency_id "2839436
                  ev_unit_quan = lv_unit_quan ).            "2938424

*Begin of 2938424
      IF lv_unit_quan IS NOT INITIAL.
        ls_credit_note_line-price-base_quantity-base-base-content = lv_unit_quan.
        ls_credit_note_line-price-base_quantity-base-base-unit_code = ls_credit_note_line-credited_quantity-base-base-unit_code. "3042934

      ENDIF.

      IF lv_tax_cond_found = abap_true AND ls_credit_note_line-price-price_amount-base-content IS INITIAL. "3013311
        ls_credit_note_line-price-price_amount-base-content = '0.00'.
      ENDIF.
*End of 2938424

      IF ls_credit_note_line-price-price_amount-base-content IS NOT INITIAL "2905102
        AND ls_credit_note_line-item-classified_tax_category-id-base-base-content IS NOT INITIAL. "2905102
        APPEND ls_credit_note_line TO rt_credit_note_line.
      ENDIF.                                                "2905102

      CLEAR ls_credit_note_line.                            "2839436
    ENDLOOP.
  ENDMETHOD.


  METHOD fill_delivery.                                     "Added with SAP Note 2871404

    DATA: lo_edoc_db                   TYPE REF TO cl_edocument_eu_db, "2885554
          lv_part1                     TYPE string,         "2885554
          lv_part2                     TYPE string,         "2885554
          lv_vbtyp_v                   TYPE vbtyp_v,
          lv_tax_code                  TYPE string,
          lv_tax_ics                   TYPE string,
          lv_vmapname                  TYPE char20,
          lv_intca                     TYPE intca,          "2885554
          lv_lfdat                     TYPE lfdat,
          ls_edocument                 TYPE edocument,      "2885554
          ls_bset                      TYPE bset,           "2885554
          ls_vbrp                      TYPE vbrp,
          ls_kna1                      TYPE kna1,
          ls_adrc                      TYPE adrc,           "2938424
          lt_delivery_line_ref         TYPE tt_delivery_line_ref, "2938424
          ls_delivery_line_ref         TYPE ty_delivery_line_ref, "2938424
          lt_customer_address_line_ref TYPE tt_customer_address_line_ref, "2938424
          ls_customer_address_line_ref TYPE ty_customer_address_line_ref, "2938424
          lt_vbrp                      TYPE edoc_vbrpvb_tab. "3030901
    "Del 2905102
* Begin of 2885554
    lt_vbrp[] = ms_source-vbrp[].                           "3030901
    SORT lt_vbrp BY fbuda DESCENDING.                       "3030901
    READ TABLE lt_vbrp INTO ls_vbrp INDEX 1.                "3030901
    IF sy-subrc = 0.
* Credit Note Logic for the Older version                   "Start 2885554
      IF ms_source-reference-edoc_guid IS NOT INITIAL.
        CREATE OBJECT lo_edoc_db.
        ls_edocument = lo_edoc_db->if_edocument_db~select_edocument( iv_edoc_guid = ms_source-reference-edoc_guid ).
        SPLIT ls_edocument-edoc_type AT '_' INTO lv_part1 lv_part2.
        IF lv_part2 = 'CRE'.
          get_delivery_date_for_cr_note(
            EXPORTING
              is_vbrp  = ls_vbrp
            IMPORTING
              ev_lfdat = rs_edo_ubl_delivery-actual_delivery_date-base-content ).
          "End 2885554      Del-2938424
        ENDIF.                                          "Start 2885554
      ENDIF.
    ENDIF.
* Actual Delivery Date
    IF rs_edo_ubl_delivery-actual_delivery_date-base-content IS INITIAL.
      rs_edo_ubl_delivery-actual_delivery_date-base-content = ls_vbrp-fbuda. "2938424
    ENDIF.                                              "End 2885554

    TEST-SEAM fill_delivery_01.
      SELECT vbeln posnr kunnr
             adrnr                                          "3013311
        FROM vbpa INTO TABLE mt_delivery_line_ref           "2938424
        WHERE vbeln = ms_source-vbrk-vbeln
          AND parvw IN ('SH', 'WE').  "Partner Function SH or WE
    END-TEST-SEAM.
    IF sy-subrc = 0.
* Begin of 293842
      lt_delivery_line_ref = mt_delivery_line_ref.
* Begin of 3030901
      IF lt_delivery_line_ref IS NOT INITIAL.
        SORT lt_delivery_line_ref BY vbeln posnr.           "3042934
        READ TABLE lt_delivery_line_ref WITH KEY vbeln = ls_vbrp-vbeln
                                                 posnr = ls_vbrp-posnr
                                                 INTO ls_delivery_line_ref
                                                 BINARY SEARCH. "3042934
        IF sy-subrc = 0.
          IF ls_delivery_line_ref-adrnr IS NOT INITIAL.
            MOVE-CORRESPONDING ls_delivery_line_ref TO ls_customer_address_line_ref.
            APPEND ls_customer_address_line_ref TO mt_customer_address_line_ref.
          ELSE.
            TEST-SEAM fill_delivery_04.
              SELECT kunnr adrnr stceg FROM kna1            "3042934
                INTO TABLE mt_customer_address_line_ref
                WHERE kunnr = ls_delivery_line_ref-kunnr.
            END-TEST-SEAM.
          ENDIF.
        ELSE.
*          Start of change 3013311
*          When the address defined specifically in the Ship-to party, we get it from there
*          by default it will be populated from the master data of the Customer.
          LOOP AT lt_delivery_line_ref INTO ls_delivery_line_ref
              WHERE adrnr IS NOT INITIAL.
            MOVE-CORRESPONDING ls_delivery_line_ref TO ls_customer_address_line_ref.
            APPEND ls_customer_address_line_ref TO mt_customer_address_line_ref.
            EXIT."One is always enough
          ENDLOOP.                                          "3013311
        ENDIF.

        IF mt_customer_address_line_ref IS INITIAL."If we still don't have the address, read it from KNA1
          SORT lt_delivery_line_ref BY kunnr.
          DELETE ADJACENT DUPLICATES FROM lt_delivery_line_ref COMPARING kunnr.
*        End of change 3013311
          IF lt_delivery_line_ref IS NOT INITIAL.           "3042934
            TEST-SEAM fill_delivery_02.
              SELECT kunnr adrnr stceg FROM kna1            "3042934
                INTO TABLE mt_customer_address_line_ref FOR ALL ENTRIES IN lt_delivery_line_ref
                WHERE kunnr = lt_delivery_line_ref-kunnr.   "2938424
            END-TEST-SEAM.
          ENDIF.                                            "3042934
        ENDIF.
        "@Del-3042934

        IF ls_delivery_line_ref IS INITIAL.
          READ TABLE mt_customer_address_line_ref INTO ls_customer_address_line_ref INDEX 1.
        ELSE.
          SORT mt_customer_address_line_ref BY kunnr.       "3042934
          READ TABLE mt_customer_address_line_ref INTO ls_customer_address_line_ref
                                                  WITH KEY kunnr = ls_delivery_line_ref-kunnr
                                                  BINARY SEARCH. "3042934
        ENDIF.

*End of 3030901
*End of 2938424
        IF sy-subrc EQ 0.
          "Start of Change 3042934
          IF ls_customer_address_line_ref-stceg IS NOT INITIAL.
            rs_edo_ubl_delivery-delivery_location-id-base-base-content = ls_customer_address_line_ref-stceg.
          ELSE.
            TEST-SEAM fill_delivery_05.
              SELECT SINGLE stceg FROM kna1 INTO rs_edo_ubl_delivery-delivery_location-id-base-base-content
                WHERE kunnr = ls_customer_address_line_ref-kunnr.
            END-TEST-SEAM.
          ENDIF.
          "End of Change 3042934
          TEST-SEAM fill_delivery_03.
            SELECT SINGLE * FROM adrc INTO ls_adrc "#EC CI_ALL_FIELDS_NEEDED
                   WHERE addrnumber EQ ls_customer_address_line_ref-adrnr.
          END-TEST-SEAM.
          IF sy-subrc = 0.                                                  "Del-2938424
*Delivery Address
            rs_edo_ubl_delivery-delivery_location-address = fill_address( ls_adrc ). "2938424
*Party Name
            CONCATENATE ls_adrc-name1
                        ls_adrc-name2
                        ls_adrc-name3
                        ls_adrc-name4
                        INTO rs_edo_ubl_delivery-delivery_party-party_name-name-base-base-content "2938424
                        SEPARATED BY space.                 "3030901
          ENDIF.

          "Start of Change 3289969
          IF rs_edo_ubl_delivery-delivery_location-id-base-base-content IS NOT INITIAL
            AND ls_adrc-country IS NOT INITIAL
            AND go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) = abap_false.
            rs_edo_ubl_delivery-delivery_location-id-base-base-scheme_id = determine_vat_participant_type( ls_adrc-country ).
          ENDIF.
          "End of Change 3289969
        ENDIF.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD fill_due_date.

* Start of 2938424
    DATA: ls_top_text TYPE vtopis,
          lt_top_text TYPE TABLE OF vtopis,
          lv_baseline_date TYPE vbrk-fkdat,                          "3210223
          lv_lines    TYPE i.

    IF ms_source-vbrk-zterm IS NOT INITIAL.
*Begin of 3210223
      lv_baseline_date = ms_source-vbrk-fkdat + ms_source-vbrk-valtg.
      IF ms_source-vbrk-valdt NE 0.
        lv_baseline_date = ms_source-vbrk-valdt.
      ENDIF.
*End of 3210223
      "@Del
      TEST-SEAM duedate_01.
        CALL FUNCTION 'SD_PRINT_TERMS_OF_PAYMENT'
          EXPORTING
            bldat                        = lv_baseline_date          "3210223
            budat                        = lv_baseline_date          "3210223
            cpudt                        = lv_baseline_date          "3210223
            language                     = ms_kna1-spras              "2968006
            terms_of_payment             = ms_source-vbrk-zterm
          TABLES
            top_text                     = lt_top_text
          EXCEPTIONS
            terms_of_payment_not_in_t052 = 1
            OTHERS                       = 2.
      END-TEST-SEAM.
      IF sy-subrc = 0.
        DESCRIBE TABLE lt_top_text LINES lv_lines.
        IF lv_lines > 0.
          READ TABLE lt_top_text INTO ls_top_text INDEX lv_lines.
          IF sy-subrc = 0.
            rv_due_date = ls_top_text-hdatum.
          ENDIF.
        ENDIF.
      ENDIF.
* End of 2938424
    ENDIF.

  ENDMETHOD.


METHOD fill_invoice.

* UBL Version
  rs_target-ublversion_id-base-base-content = mv_type_version_id.

* Customization ID
  rs_target-customization_id-base-base-content = mv_customization_id.

* Profile ID                                                "2805188
  rs_target-profile_id-base-base-content = mv_process_id.   "2805188

* ID
  rs_target-id-base-base-content = ms_source-vbrk-vbeln.

* Issue Date
  rs_target-issue_date-base-content = ms_source-vbrk-fkdat.

* Due Date - only for BIS3
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_true. "3259089
    rs_target-due_date-base-content = fill_due_date( ).
  ENDIF.

* Invoice Type Code
  rs_target-invoice_type_code-base-base-content = get_value_mapping( iv_vmapname    = 'INVOICE_TYPE_CODE_SD'
                                                                     iv_int_value   = ms_source-vbrk-fkart
                                                                     iv_err_msg_ind = abap_false )."2968006

* Not needed for BIS3 2805246
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
    rs_target-invoice_type_code-base-base-list_id = get_fix_value( iv_name = 'INVOICE_TYPE_CODE_ID' "2805246
                                                               iv_err_msg_ind = abap_false ). "2805246 2968006
  ENDIF.                                                    "2805246

* Note
  rs_target-note = fill_note( ).

* Document Currency Code
  rs_target-document_currency_code-base-base-content = ms_source-vbrk-waerk.
* Not needed for BIS3 2805246
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
    rs_target-document_currency_code-base-base-list_id = mv_currency_code_id. "2805246
  ENDIF.                                                    "2805246

* Tax Currency Code                                                 "2871404
  IF ms_t001-waers <> ms_source-vbrk-waerk.                 "2871404
    rs_target-tax_currency_code-base-base-content = ms_t001-waers. "2871404
  ENDIF.                                                    "2871404

* Buyer Reference
  TRY.
      rs_target-buyer_reference = fill_buyer_reference( ).
    CATCH cx_edocument.
      add_error_message( ).
  ENDTRY.

* Order Reference
  rs_target-order_reference = fill_order_reference( ).
  "@Del - 2871404

* Begin of 3085941
* Get SD Complete Document Flow
  get_document_flow( ).

* Contract Document Reference
  rs_target-contract_document_reference = fill_contract_reference( ).

* Tender (Originator Document Reference, Quotation)
  rs_target-originator_document_reference = fill_tender( ).

* Project Reference
  rs_target-project_reference = fill_project_reference( ).
* End of 3085941

* Accounting Supplier Party
  rs_target-accounting_supplier_party = fill_supplier_party( ).

* Accounting Customer Party
  rs_target-accounting_customer_party = fill_customer_party( ).

*Start of Change 2968006
* Payee Party
  TRY.
    rs_target-payee_party = fill_payee_party( ).
  CATCH cx_edocument.
      add_error_message( ).
  ENDTRY.

*End of Change 2968006

* Delivery                                                 "2871404
  rs_target-delivery = fill_delivery( ).                    "2871404

* Payment Means - not for BIS3
  IF is_payment_means_required( ) = abap_true.              "2805246
    rs_target-payment_means = fill_payment_means( ).
  ENDIF.

* Payment Terms
  rs_target-payment_terms = fill_payment_terms( ).

* Tax Total
  rs_target-tax_total = fill_tax_total( ).

* Allowance Charge
  fill_allowance_charge(  EXPORTING rs_tax_total = rs_target-tax_total "2905102
                          RECEIVING rt_allowance_charge = rs_target-allowance_charge ). "2905102

* Legal Monetary Total
  rs_target-legal_monetary_total = fill_monetary_total( ).

* Invoice Line
  rs_target-invoice_line = fill_invoice_line( ).

* Begin of change 2992171
* Adjust Parties' TaxScheme if the Tax Exempt Code 'O' used  "2992171
  IF mv_tax_exempt_code = mc_tax_exempt_code_o.
    remove_vat_tax_ids(
      CHANGING
        cs_accounting_supplier_party = rs_target-accounting_supplier_party
        cs_accounting_customer_party = rs_target-accounting_customer_party
        cs_tax_representative_party  = rs_target-tax_representative_party ).

  ENDIF.
* End of change 2992171
ENDMETHOD.


METHOD fill_invoice_line.

* Begin of 2938424
  TYPES: BEGIN OF ty_eipo,
           exnum TYPE exnum,
           expos TYPE expos,
           stawn TYPE stawn,
           herkl TYPE herkl,
         END OF ty_eipo.
* End of 2938424
  DATA: ls_invoice_line   TYPE edo_ubl_invoice_line,
        ls_vbrp           TYPE vbrp,
        lv_isocode        TYPE isocd_unit,
        lv_autte          TYPE autte,
        ls_fplt           TYPE fplt,
        ls_komv           TYPE komv,
        ls_vbap           TYPE vbap,                        "2905102
        lv_netwr          TYPE netwr_fp,                    "2905102
        lv_intca          TYPE intca,                       "2905102
        lv_vmapname       TYPE char20,                      "2871404
        lv_text_name      TYPE thead-tdname,
        lv_tax_cond_found TYPE abap_bool,                   "3013311
        lt_komv           TYPE STANDARD TABLE OF komv,      "2905102
        lt_komv_source    TYPE STANDARD TABLE OF komv,      "3042934
        lt_text_lines     TYPE TABLE OF tline,
        lt_eipo           TYPE TABLE OF ty_eipo,            "2938424
        ls_eipo           TYPE ty_eipo,                     "2938424
        ls_commodity      TYPE edo_ubl_commodity_classificat1, "2938424
        lv_unit_quan      TYPE string,                      "2938424
        lv_round_amount   TYPE kwert,                       "2938424
        ls_text_lines     TYPE tline,                       "2968006
        lv_tax_country    TYPE land1,                       "3085941
        lv_quan_dec       TYPE numc1 VALUE '3'.             "3170418

  FIELD-SYMBOLS: <fs_tax_country_tab> TYPE table,           "3085941
                 <fs_tax_country>     TYPE any.             "3085941

* Begin of change 3085941
  ASSIGN COMPONENT 'TAX_COUNTRY' OF STRUCTURE ms_source-source_header TO <fs_tax_country_tab>.
  IF <fs_tax_country_tab> IS ASSIGNED.
    READ TABLE <fs_tax_country_tab> INDEX 1 ASSIGNING <fs_tax_country>.
  ENDIF.
  IF <fs_tax_country> IS ASSIGNED.
    lv_tax_country = <fs_tax_country>.
  ELSE.
    lv_tax_country = ms_source-source_header-land.
  ENDIF.
* End of 3085941
* Begin of 2905102
  CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
    EXPORTING
      sap_code  = lv_tax_country                                     "3085941
    IMPORTING
      iso_code  = lv_intca
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
    MESSAGE e072(edocument_eu)
        WITH lv_tax_country                                 "3085941
        INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.
* End of 2905102
* Begin of 2938424
  TEST-SEAM fill_invoice_line_05.
    IF ms_source-vbrk-exnum IS NOT INITIAL
      AND ms_source-vbrp IS NOT INITIAL.                    " 3042934
      SELECT exnum
             expos
             stawn
             herkl FROM eipo INTO TABLE lt_eipo
             FOR ALL ENTRIES IN ms_source-vbrp
             WHERE exnum = ms_source-vbrk-exnum
             AND expos = ms_source-vbrp-posnr
             ORDER BY PRIMARY KEY.
    ENDIF.
  END-TEST-SEAM.
  "@Del-3042934
* End of 2938424
  " Start of Change 3042934
  SORT ms_source-komv BY kposn koaid kinak kstat.
  lt_komv_source = ms_source-komv.
  SORT lt_komv_source BY kposn koaid kstat.
  " End of Change 3042934
  CLEAR: ls_vbrp.

  LOOP AT ms_source-vbrp INTO ls_vbrp.
*   ID
    ls_invoice_line-id-base-base-content = ls_vbrp-posnr.

*   Invoiced Quantity
    ls_invoice_line-invoiced_quantity-base-base-content = ls_vbrp-fkimg. "3042934
    DESCRIBE FIELD ls_vbrp-fkimg DECIMALS lv_quan_dec.      "3170418
    format_negative_amount( EXPORTING iv_decimal = lv_quan_dec "3170418
                            CHANGING  cv_amount  = ls_invoice_line-invoiced_quantity-base-base-content ). "3170418

    IF ls_vbrp-vrkme IS NOT INITIAL.

      lv_isocode = get_mapping_val( iv_vmapname  = 'UNIT_OF_MEASURE_CODE' "3013311
                                    iv_int_value = ls_vbrp-vrkme ). "3013311

      IF lv_isocode IS INITIAL.                             "3013311

        CALL FUNCTION 'UNIT_OF_MEASURE_SAP_TO_ISO'
          EXPORTING
            sap_code    = ls_vbrp-vrkme
          IMPORTING
            iso_code    = lv_isocode
          EXCEPTIONS
            not_found   = 1
            no_iso_code = 2
            OTHERS      = 3.

        IF sy-subrc IS NOT INITIAL.
          add_error_message( ).
        ENDIF.

      ENDIF.                                                "3013311

    ENDIF.

    ls_invoice_line-invoiced_quantity-base-base-unit_code = lv_isocode.

* Not needed for BIS3 2805246
    IF mv_customization_id NS mc_customization_id_bis3.     "2805246
      ls_invoice_line-invoiced_quantity-base-base-unit_code_list_id = "2805246
                                                    get_fix_value( iv_name        = 'UNIT_CODE_LIST_ID' "2805246
                                                                   iv_err_msg_ind = abap_false ). "2805246 "2968006
    ENDIF.                                                  "2805246

* Line Extension Amount
* Begin of 2905102
* Allowance subtracted from line extension amount
    lv_netwr = ls_vbrp-netwr.
    CLEAR lt_komv.
    get_allowance_charge_cond_type( EXPORTING iv_posnr = ls_vbrp-posnr
                                    IMPORTING et_komv = lt_komv ).
    CLEAR ls_komv.
    LOOP AT lt_komv INTO ls_komv.
      lv_netwr = lv_netwr - ls_komv-kwert.
    ENDLOOP.
    ls_invoice_line-line_extension_amount-base-content = lv_netwr.
* End of 2905102

    IF mv_rounding_active EQ abap_true.                                            "Begin of 2938424
      lv_round_amount = get_rounding_off_amount( iv_posnr = ls_vbrp-posnr ).
      ls_invoice_line-line_extension_amount-base-content = ls_invoice_line-line_extension_amount-base-content - lv_round_amount.
    ENDIF.                                                                         "End of 2938424

    format_negative_amount( CHANGING cv_amount = ls_invoice_line-line_extension_amount-base-content ).
    ls_invoice_line-line_extension_amount-base-currency_id = ms_source-vbrk-waerk.

    TEST-SEAM fill_invoice_line_01.                         "2390901
*   Invoice Period
      SELECT SINGLE autte FROM fpla INTO lv_autte     "Billing Plan header data
        WHERE fplnr = ls_vbrp-fplnr.
    END-TEST-SEAM.                                          "2390901
    IF sy-subrc = 0.
      TEST-SEAM fill_invoice_line_02.                       "2390901
        SELECT SINGLE fkdat nfdat FROM fplt INTO CORRESPONDING FIELDS OF ls_fplt    "Reference period
          WHERE fplnr = ls_vbrp-fplnr
          AND   fpltr = ls_vbrp-fpltr.
      END-TEST-SEAM.                                        "2390901

      IF sy-subrc = 0.

        IF lv_autte = abap_true.         "Billing creation in advance
          ls_invoice_line-invoice_period-start_date-base-content = ls_fplt-fkdat.
          ls_invoice_line-invoice_period-end_date-base-content   = ls_fplt-nfdat.
        ELSE.                            "No billing creation in advance
          ls_invoice_line-invoice_period-start_date-base-content = ls_fplt-nfdat.
          ls_invoice_line-invoice_period-end_date-base-content   = ls_fplt-fkdat.
        ENDIF.
      ENDIF.
    ENDIF.

* Begin of 2905102
    TEST-SEAM fill_invoice_line_03.
      CLEAR ls_vbap.
      SELECT SINGLE * FROM vbap INTO ls_vbap  "#EC CI_ALL_FIELDS_NEEDED
      WHERE vbeln = ls_vbrp-aubel AND                       "2938424
            posnr = ls_vbrp-aupos.                          "2938424
    END-TEST-SEAM.
    IF sy-subrc = 0.
      ls_invoice_line-order_line_reference-line_id-base-base-content = ls_vbap-posex.
    ENDIF.
* End of 2905102

    "Del-3042934

*   Allowance/Charge
    fill_allowance_charge_line(                             "2871404
      EXPORTING iv_posnr = ls_vbrp-posnr                    "2871404
      IMPORTING ev_allowance_charge = ls_invoice_line-allowance_charge ). "2871404

    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
*   Tax Total
      get_tax_total_line(
        EXPORTING is_vbrp = ls_vbrp                         "2871404
        IMPORTING ev_tax_amount = ls_invoice_line-tax_total-tax_amount-base-content "2871404
                  ev_currency   = ls_invoice_line-tax_total-tax_amount-base-currency_id ). "2871404
    ENDIF.

*Start of Change 2938424
*   Item Description From Invoice
    CLEAR: lv_text_name, lt_text_lines.
    CONCATENATE ls_vbrp-vbeln ls_vbrp-posnr INTO lv_text_name.
    get_item_description( EXPORTING iv_text_name = lv_text_name
                                    iv_object    = 'VBBP'
                          IMPORTING et_lines     = lt_text_lines ).
    IF lt_text_lines IS INITIAL.
*  Item Description From Order
      CLEAR lv_text_name.
      CONCATENATE ls_vbrp-aubel ls_vbrp-aupos INTO lv_text_name.
      get_item_description( EXPORTING iv_text_name = lv_text_name
                                      iv_object    = 'VBBP'
                            IMPORTING et_lines     = lt_text_lines ).
      IF lt_text_lines IS INITIAL.
*  Item Description From Material
        CLEAR lv_text_name.
        CONCATENATE ls_vbrp-matnr ms_source-vbrk-vkorg ms_source-vbrk-vtweg
               INTO lv_text_name RESPECTING BLANKS.
        get_item_description( EXPORTING iv_text_name = lv_text_name
                                        iv_object    = 'MVKE'
                              IMPORTING et_lines     = lt_text_lines ).
      ENDIF.
    ENDIF.

    IF lt_text_lines IS INITIAL.
*End of Change 2938424
      ls_invoice_line-item-description-base-base-content = ls_vbrp-arktx.
    ELSE.
      LOOP AT lt_text_lines INTO ls_text_lines.                             "Begin of 2968006
        IF sy-tabix EQ 1.
          ls_invoice_line-item-description-base-base-content = ls_text_lines-tdline.
        ELSE.
          CONCATENATE ls_invoice_line-item-description-base-base-content ls_text_lines-tdline
                 INTO ls_invoice_line-item-description-base-base-content SEPARATED BY space.
        ENDIF.
      ENDLOOP.                                                              "End of 2968006
    ENDIF.


*   Item Name
    IF ls_vbrp-arktx IS NOT INITIAL.
      ls_invoice_line-item-name-base-base-content = ls_vbrp-arktx.
      " Del-3042934
    ENDIF.

* Classified Tax Category
    CLEAR: ls_komv,
           lv_tax_cond_found.                               "3013311
    READ TABLE ms_source-komv INTO ls_komv
         WITH KEY kposn = ls_vbrp-posnr
                  koaid = 'D'
                  kstat = ''
                  kinak = ''
                  BINARY SEARCH.                            "3042934
    IF sy-subrc EQ 0.
*Begin of 2938424
      lv_tax_cond_found = abap_true.                        "3013311
    ELSE.
      READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fixvaluename = gc_fixed_value_list_ubl-item_categories
                                                                   fieldvalue = ls_vbrp-pstyv.
      IF sy-subrc = 0.
        READ TABLE lt_komv_source INTO ls_komv              "3042934
             WITH KEY kposn = ls_vbrp-posnr
                      koaid = 'D'
                      kstat = ''
                      BINARY SEARCH.                        "3042934
        IF sy-subrc EQ 0.
          lv_tax_cond_found = abap_true.                    "3013311
        ENDIF.
      ENDIF.
    ENDIF.
    IF lv_tax_cond_found = abap_true.                       "3013311
*End of 2938424

* Begin of Change 2871404.
      CONCATENATE lv_intca '_TAX_CATEGORY' INTO lv_vmapname. "2905102
      ls_invoice_line-item-classified_tax_category-id-base-base-content    = get_value_mapping(
                                                            iv_vmapname    = lv_vmapname           " Value Mapping
                                                            iv_int_value   = ls_komv-mwsk1         " Internal Value
                                                            iv_err_msg_ind = abap_false ).

      IF ls_invoice_line-item-classified_tax_category-id-base-base-content IS INITIAL.
* End of Change 2871404.
        ls_invoice_line-item-classified_tax_category-id-base-base-content = get_value_mapping(
                                                                iv_vmapname    = 'TAX_CATEGORY'    " Value Mapping
                                                                iv_int_value   = ls_komv-mwsk1     " Internal Value
                                                                iv_err_msg_ind = abap_false ).     "2968006 No checks in check_inv
      ENDIF.                                                "2871404
      ls_invoice_line-item-classified_tax_category-tax_scheme-id-base-base-content = get_fix_value(
                                                                   iv_name        = 'TAX_SCHEME_ID'
                                                                   iv_err_msg_ind = abap_false ).  "2968006 No checks in check_inv

      ls_invoice_line-item-classified_tax_category-percent-base-base-content = ls_komv-kbetr / 10.
      format_negative_amount(                               "2905102
        CHANGING cv_amount = ls_invoice_line-item-classified_tax_category-percent-base-base-content ). "2905102
* Begin of Change 2871404.
*Tax Exemption Reason Code
      " Del@3071425
*     "Deleted from 3030901
      IF ls_invoice_line-item-classified_tax_category-percent-base-base-content = 0 "3071425
* Begin of Change 2992171
        AND ls_invoice_line-item-classified_tax_category-id-base-base-content = mc_tax_exempt_code_o. "3030901  "3071425
        "For the tax exempt code O we have specific rules, such as BR-O-01 to BR-O-14
*          For such cases we have the header part dependent on line item. Thus after we process the O code here
*          we are to adjust already populated values on an upper level.
        mv_tax_exempt_code = mc_tax_exempt_code_o.
        " Del@3071425
* End of Change 2992171
        " Del@3071425

        "not allowed to be filled in case Tax Category = 'O'
        CLEAR: ls_invoice_line-item-classified_tax_category-percent-base-base-content. "3259089
      ENDIF.
    ENDIF.                                                  "Del 2871404

*   Sellers Item Identification
    ls_invoice_line-item-sellers_item_identification-id-base-base-content = ls_vbrp-matnr. "2839436

*   Begin of 2938424
    " Delete 3365100
      ls_invoice_line-item-origin_country-identification_code-base-base-content = ls_vbrp-spe_herkl. "3030901
      ls_commodity-item_classification_code-base-base-content = ls_vbrp-itm_comco. "3030901
    " Delete 3365100
*   Start of 2992171
    IF ls_invoice_line-item-origin_country-identification_code-base-base-content IS NOT INITIAL. "3030901
      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
        ls_invoice_line-item-origin_country-identification_code-base-base-list_id = get_fix_value(
                                                                   iv_name        = gc_fixed_value_list_ubl-country_code_list_id
                                                                   iv_err_msg_ind = abap_true ).
      ENDIF.
    ENDIF.                                                  "3030901
*   End of 2992171
    IF ls_commodity-item_classification_code-base-base-content IS NOT INITIAL.
      ls_commodity-item_classification_code-base-base-list_id = get_fix_value( "2968006
                        iv_name        = gc_fixed_value_list_ubl-commodity_list_id "2968006
                        iv_err_msg_ind = abap_true ).       "2968006
      APPEND ls_commodity TO ls_invoice_line-item-commodity_classification.
    ENDIF.
*   End of 2938424

*   Price Amount
    fill_price_amount(
      EXPORTING is_vbrp = ls_vbrp                           "2839436
                iv_quantity = ls_invoice_line-invoiced_quantity-base-base-content "2871404
      IMPORTING ev_price_amount = ls_invoice_line-price-price_amount-base-content "2839436
                ev_currency = ls_invoice_line-price-price_amount-base-currency_id "2839436
                ev_unit_quan = lv_unit_quan ).              "2938424

    format_negative_amount( EXPORTING iv_decimal = lv_quan_dec "3210223
                            CHANGING  cv_amount  = lv_unit_quan ). "3210223

    format_negative_amount( CHANGING  cv_amount  = ls_invoice_line-price-price_amount-base-content ). "3210223

*Begin of 2938424
    IF lv_unit_quan IS NOT INITIAL.
      ls_invoice_line-price-base_quantity-base-base-content = lv_unit_quan.
      ls_invoice_line-price-base_quantity-base-base-unit_code = ls_invoice_line-invoiced_quantity-base-base-unit_code. "2968006
    ENDIF.
    IF lv_tax_cond_found = abap_true AND ls_invoice_line-price-price_amount-base-content IS INITIAL. "3013311
      ls_invoice_line-price-price_amount-base-content = '0.00'.
    ENDIF.
*End of 2938424

    IF mv_multiple_orders EQ abap_true.                     "2938424
      ls_invoice_line-order_line_reference = fill_order_line_ref( ls_vbrp-posnr ). "2938424
      " Start of Change 3042934
      IF ls_vbap-posex IS NOT INITIAL.
        CONCATENATE ls_invoice_line-order_line_reference-line_id-base-base-content
                    '/' ls_vbap-posex
               INTO ls_invoice_line-order_line_reference-line_id-base-base-content.
      ENDIF.
      " End of Change 3042934
    ENDIF.                                                  "2938424

    IF ls_invoice_line-price-price_amount-base-content IS NOT INITIAL "2905102
      AND ls_invoice_line-item-classified_tax_category-id-base-base-content IS NOT INITIAL. "2905102
      APPEND ls_invoice_line TO rt_invoice_line.
    ENDIF.                                                  "2905102

    CLEAR ls_invoice_line.                                  "2839436
  ENDLOOP.

ENDMETHOD.


  METHOD fill_line_extension_amount.                        " 2854416

* Start of 2905102
    DATA: ls_komv           TYPE komv,
          lt_komv           TYPE STANDARD TABLE OF komv,
          lv_netwr          TYPE netwr_fp,
          lv_round_amount   TYPE kwert.                    "2938424

* Line Extension Amount
    lv_netwr = ms_source-vbrk-netwr.
    get_allowance_charge_cond_type( IMPORTING et_komv = lt_komv ).
    LOOP AT lt_komv INTO ls_komv.
      lv_netwr = lv_netwr - ls_komv-kwert.
    ENDLOOP.
    rs_line_extension_amount-base-content = lv_netwr.
* End of 2905102

    rs_line_extension_amount-base-currency_id = ms_source-vbrk-waerk.
    IF mv_rounding_active EQ abap_true.                                            "Begin of 2938424
      lv_round_amount = get_rounding_off_amount( ).
      rs_line_extension_amount-base-content = rs_line_extension_amount-base-content - lv_round_amount.
    ENDIF.                                                                         "End of 2938424

    format_negative_amount( CHANGING cv_amount = rs_line_extension_amount-base-content ).

  ENDMETHOD.


METHOD fill_monetary_total.

  DATA: lv_prepaid TYPE netwr_fp,                           "2805246
        ls_vbrp    TYPE vbrp.                               "2805246
  CLEAR: lv_prepaid.                                        "2938424
* Line Extension Amount
  rs_monetary_total-line_extension_amount = fill_line_extension_amount( ). " 2854416

* Tax Exclusive Amount
  rs_monetary_total-tax_exclusive_amount = fill_tax_exclusive_amount( ). " 2854416

* Tax Inclusive Amount
  rs_monetary_total-tax_inclusive_amount-base-content =
    rs_monetary_total-tax_exclusive_amount-base-content + ms_source-vbrk-mwsbk. " 2905102
  format_negative_amount( CHANGING cv_amount = rs_monetary_total-tax_inclusive_amount-base-content ).
  rs_monetary_total-tax_inclusive_amount-base-currency_id = ms_source-vbrk-waerk.

* Payable Rounding Amount
  IF mv_rounding_active EQ abap_true.                                             "2938424
    rs_monetary_total-payable_rounding_amount = fill_payable_rounding_amount( ). " 2854416
  ENDIF.                                                                          "2938424
* Allowance Total Amount
  rs_monetary_total-allowance_total_amount = fill_allowance_total( ).     " 2905102

* Charge Total Amount
  rs_monetary_total-charge_total_amount = fill_charge_total( ).           " 2905102

* Begin of 2805246
* Prepaid Amount calculation for Down payment scenario
* If the Billing Category is not Down payment request
  IF ms_source-vbrk-fktyp NE 'P'.
* Add the net and tax values if Rule in billing plan/invoice plan is
*4  Down payment in milestone billing on percentage basis
*5  Down payment in milestone billing on a value basis
    LOOP AT ms_source-vbrp INTO ls_vbrp WHERE fareg = 4 OR fareg = 5.
      lv_prepaid = lv_prepaid + ls_vbrp-netwr + ls_vbrp-mwsbp.
    ENDLOOP.
    IF NOT lv_prepaid IS INITIAL.
      rs_monetary_total-prepaid_amount-base-content = lv_prepaid.
      format_negative_amount( CHANGING cv_amount = rs_monetary_total-prepaid_amount-base-content ).
      rs_monetary_total-prepaid_amount-base-currency_id = ms_source-vbrk-waerk.
    ENDIF.
  ENDIF.
* End of 2805246

* Payable Amount
  rs_monetary_total-payable_amount-base-content = ms_source-vbrk-netwr + ms_source-vbrk-mwsbk - lv_prepaid."2938424
  format_negative_amount( CHANGING cv_amount = rs_monetary_total-payable_amount-base-content ).
  rs_monetary_total-payable_amount-base-currency_id = ms_source-vbrk-waerk.

ENDMETHOD.


  METHOD fill_note.

    DATA: lt_text_lines TYPE TABLE OF tline,
          lv_text_lines TYPE tline.

    " Begin of SAP Note 3210223
    DATA lt_langu TYPE TABLE OF stxh-tdspras.
    FIELD-SYMBOLS <ls_langu> TYPE stxh-tdspras.

    " We need to search for the Note in different languages.
    " First we check it in Customer's Communication language, then in
    " Company Code's language, and then in English

    APPEND INITIAL LINE TO lt_langu ASSIGNING <ls_langu>.
    <ls_langu> = ms_adrc_cust-langu.
    APPEND INITIAL LINE TO lt_langu ASSIGNING <ls_langu>.
    <ls_langu> = ms_t001-spras.
    APPEND INITIAL LINE TO lt_langu ASSIGNING <ls_langu>.
    <ls_langu> = 'E'.

    SORT lt_langu.
    DELETE ADJACENT DUPLICATES FROM lt_langu.

    LOOP AT lt_langu ASSIGNING <ls_langu>.
      lt_text_lines = read_note_text( <ls_langu> ).

      IF lt_text_lines IS NOT INITIAL.
        EXIT.
      ENDIF.
    ENDLOOP.
    " End of SAP Note 3210223

    LOOP AT lt_text_lines INTO lv_text_lines.               "Begin of 2992171
      IF sy-tabix EQ 1.
        rs_note-base-base-content = lv_text_lines-tdline.
      ELSE.
        CONCATENATE rs_note-base-base-content lv_text_lines-tdline
          INTO rs_note-base-base-content SEPARATED BY space.
      ENDIF.
    ENDLOOP.                                                 "END of 2992171

  ENDMETHOD.


  METHOD fill_order_line_ref.  "New with 2938424
    DATA: ls_vbrp           TYPE vbrp,
          ls_order_line_ref TYPE ty_order_line_ref,
          lv_posnr          TYPE posnr_va.                  "2968006

    SORT mt_order_line_ref BY vbeln posnr.                  "3042934

    LOOP AT ms_source-vbrp INTO ls_vbrp WHERE posnr EQ iv_posnr.
      READ TABLE mt_order_line_ref INTO ls_order_line_ref WITH KEY vbeln = ls_vbrp-aubel
                                                                   posnr = ls_vbrp-aupos
                                                                   BINARY SEARCH.                   "3042934
      IF sy-subrc NE 0.
        READ TABLE mt_order_line_ref INTO ls_order_line_ref WITH KEY vbeln = ls_vbrp-aubel "2968006
                                                                     posnr = lv_posnr  "Empty value "2968006
                                                                     BINARY SEARCH.                 "3042934
      ENDIF.
      rs_order_line_reference-line_id-base-base-content = ls_order_line_ref-bstkd.
    ENDLOOP.

  ENDMETHOD.


  METHOD fill_order_reference.
    DATA: ls_vbrp TYPE vbrp,
          lt_vbrp TYPE TABLE OF vbrp,
          lt_order_line_ref TYPE tt_order_line_ref,         "2938424
          ls_order_line_ref TYPE ty_order_line_ref,         "2938424
          ls_vbrp_temp TYPE vbrp,                           "2968006
          lt_vbrp_temp TYPE TABLE OF vbrp.                  "2968006


    FIELD-SYMBOLS: <ls_vbrp> TYPE vbrp.

* Read Purchase Order data on Invoice Item level.           "Begin of 2938424
    lt_vbrp = ms_source-vbrp.
    lt_vbrp_temp = ms_source-vbrp.                                  "2968006
    SORT lt_vbrp_temp BY aubel.                                     "2968006
    DELETE ADJACENT DUPLICATES FROM lt_vbrp_temp COMPARING aubel.   "2968006
    LOOP AT lt_vbrp_temp INTO ls_vbrp_temp.
      APPEND INITIAL LINE TO lt_vbrp ASSIGNING <ls_vbrp>.
      IF <ls_vbrp> IS ASSIGNED.
        <ls_vbrp>-aubel = ls_vbrp_temp-aubel.                       "2968006
      ENDIF.
    ENDLOOP.
    IF lt_vbrp IS NOT INITIAL.                                      "3042934
      TEST-SEAM order_line_ref.
        SELECT vbeln posnr bstkd INTO TABLE mt_order_line_ref
                                 FROM vbkd
                                 FOR ALL ENTRIES IN lt_vbrp
                                 WHERE vbeln EQ lt_vbrp-aubel
                                   AND posnr EQ lt_vbrp-aupos.
      END-TEST-SEAM.
      SORT mt_order_line_ref BY vbeln posnr ASCENDING.                "2992171
      READ TABLE mt_order_line_ref INTO ls_order_line_ref index 1.
      IF sy-subrc EQ 0.
        rs_order_reference-id-base-base-content = ls_order_line_ref-bstkd.
        rs_order_reference-sales_order_id-base-base-content = ls_order_line_ref-vbeln.
      ENDIF.
      lt_order_line_ref = mt_order_line_ref.
      SORT lt_order_line_ref BY vbeln bstkd.
      DELETE ADJACENT DUPLICATES FROM lt_order_line_ref COMPARING vbeln bstkd.
      IF lines( lt_order_line_ref ) GT 1.
        mv_multiple_orders = abap_true.
      ENDIF.                                              "End of 2938424
    ENDIF.                                                "3042934

  ENDMETHOD.


  METHOD fill_party_identification.                         "2992909

    rt_party_identification = super->fill_party_identification( is_sepa_mandate ).
*    Deleted with 3042934
  ENDMETHOD.


  METHOD fill_payable_rounding_amount.    "Redefined with 2938424
    DATA: lv_kwert TYPE kwert.

    IF mv_rounding_active EQ abap_true.
      lv_kwert = get_rounding_off_amount( ).
      IF lv_kwert IS NOT INITIAL.
        rs_payable_rounding_amount-base-content = lv_kwert.
        format_negative_amount( CHANGING cv_amount = rs_payable_rounding_amount-base-content ).
        rs_payable_rounding_amount-base-currency_id = ms_source-vbrk-waerk.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD fill_payment_means.
* If the iBan number is empty, then the payment means node will not be transfer to parner system.
* One invoice could have mutiple house banks for domestic clients
    DATA: ls_payment_means        TYPE edo_ubl_payment_means,
          lv_payment_code         TYPE string,
          lv_payment_code_list_id TYPE string,              "2854416
          lv_pay_means            TYPE edoc_eu_paym_means,
          lv_due_date             TYPE xsddate_d.           "2968006

    DATA: lt_payee_account   TYPE tt_payee_account,
          ls_payee_account   TYPE ty_payee_account,
          lt_pay_means       TYPE tt_pay_means,
          ls_pay_means       TYPE ty_pay_means,
          lv_due_date_filled TYPE abap_bool.                "2992171

*Get PaymentMeans code,due date.
*   Allow mapping of a default value (when ms_source-vbrk-zlsch is empty)
    lv_payment_code = get_payment_means_code( iv_zlsch = ms_source-vbrk-zlsch ). "2938424
    lv_due_date     = fill_due_date( ).                     "2968006
*   Only if the payment means code is filled, payment means segment must be filled.
    IF lv_payment_code IS NOT INITIAL.                      "2905102
* Not needed for BIS3 2805246
      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
        lv_payment_code_list_id = get_fix_value( iv_name        = 'PAYMENT_MEANS_ID' "2805246 "2854416
                                                 iv_err_msg_ind = abap_true ). "2805246
      ENDIF.                                                "2805246

      CASE lv_payment_code.                                 "Start 2871404
        WHEN mc_payment_code-sepa_direct_debit.
          ls_payment_means-payment_means_code-base-base-content = lv_payment_code.
          ls_payment_means-payment_id-base-base-content = ms_source-vbrk-kidno.
          IF lv_payment_code_list_id IS NOT INITIAL.
            ls_payment_means-payment_means_code-base-base-list_id = lv_payment_code_list_id.
          ENDIF.
          IF mv_doc_categ <> 'INV'.                         "2992171
            ls_payment_means-payment_due_date-base-content = lv_due_date. "2968006
          ENDIF.                                            "2992171
          ls_payment_means-payment_mandate =
            fill_payment_mandate(
              is_sepa_mandate = ms_sepa_mandate ).
          APPEND ls_payment_means TO rt_payment_means.
        WHEN mc_payment_code-direct_debit.                  "2938424
          rt_payment_means = get_customer_bank_det(         "2938424
                               iv_payment_list_id  = lv_payment_code_list_id "2938424
                               iv_payment_code     = lv_payment_code "2938424
                               iv_kidno            = ms_source-vbrk-kidno "2938424
                             ).                             "2938424
        WHEN OTHERS.                                        "End 2871404
          TEST-SEAM fill_payment_means_01.                  "2390901
*     Get Iban number and it's corresponding bank branch name, bank name, currency
            CASE lv_payment_code.                                            "Start 2871404
              WHEN mc_payment_code-bankgiro.
                lv_pay_means = mc_paym_means-bankgiro.      "2905102
              WHEN mc_payment_code-postgiro.
                lv_pay_means = mc_paym_means-postgiro.      "2905102
              WHEN OTHERS.
                lv_pay_means = mc_paym_means-credit_transfer. "2905102
            ENDCASE.

            get_bank_info( EXPORTING iv_bukrs         = mv_bukrs
                                     iv_pay_means     = lv_pay_means
                                     iv_payment_code  = lv_payment_code     "2968006  Used for modifying payment means in sub class
                           IMPORTING et_payee_account = lt_payee_account ). "End 2871404
          END-TEST-SEAM.                                    "2390901
          CLEAR lv_due_date_filled.                         "2992171
          LOOP AT lt_payee_account INTO ls_payee_account.
            ls_payment_means-payment_means_code-base-base-content = lv_payment_code.
            ls_payment_means-payment_id-base-base-content = ms_source-vbrk-kidno. "2871404
            IF lv_payment_code_list_id IS NOT INITIAL.      "2854416
              ls_payment_means-payment_means_code-base-base-list_id = lv_payment_code_list_id. "2854416
            ENDIF.                                          "2854416
            IF mv_doc_categ <> 'INV' AND lv_due_date_filled = abap_false. "2992171
              ls_payment_means-payment_due_date-base-content = lv_due_date. "2968006
              lv_due_date_filled = abap_true.               "2992171
            ENDIF.                                          "2992171
*     Not needed for BIS3 2805246
            IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
              ls_payment_means-payee_financial_account-id-base-base-scheme_id = get_fix_value( iv_name  = 'FIN_ACC_SCHEME_ID'
                                                                                               iv_err_msg_ind = abap_true ).
            ENDIF.
            IF ls_payee_account-iban IS NOT INITIAL.        "2968006
              ls_payment_means-payee_financial_account-id-base-base-content = ls_payee_account-iban.
*   Non IBAN Customers
            ELSEIF ls_payee_account-bankn IS NOT INITIAL.   "2968006
              ls_payment_means-payee_financial_account-id-base-base-content = ls_payee_account-bankn. "2968006
            ENDIF.                                          "2968006
            IF ls_payee_account-swift IS NOT INITIAL.       "2968006
              ls_payment_means-payee_financial_account-financial_institution_branch-id-base-base-content = ls_payee_account-swift. "2905102
            ELSEIF ls_payee_account-brnch IS NOT INITIAL.
              ls_payment_means-payee_financial_account-financial_institution_branch-id-base-base-content = ls_payee_account-brnch.
            ENDIF.
*     Not needed for BIS3 2805246
            IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
              ls_payment_means-payee_financial_account-financial_institution_branch-financial_institution-id-base-base-content = ls_payee_account-swift. "2854416
              ls_payment_means-payee_financial_account-financial_institution_branch-financial_institution-id-base-base-scheme_id =
                                                                  get_fix_value( iv_name  = 'FIN_INST_SCHEME_ID'
                                                                                 iv_err_msg_ind = abap_true ).
              ls_payment_means-payee_financial_account-financial_institution_branch-financial_institution-name-base-base-content = ls_payee_account-banka. "3365100
            ENDIF.

            APPEND ls_payment_means TO rt_payment_means.
            CLEAR ls_payment_means.
          ENDLOOP.
          IF lt_payee_account IS INITIAL AND lv_payment_code IS NOT INITIAL. "2854416
            MESSAGE e059(edocument_eu) WITH lv_payment_code INTO cl_edocument=>gv_error_txt. "2854416
            add_error_message( ).                           "2854416
          ENDIF.                                            "2854416
      ENDCASE.                                              "2871404
    ENDIF.                                                  "2854416

  ENDMETHOD.


METHOD fill_payment_terms.

  DATA:
    ls_payment_terms TYPE edo_ubl_payment_terms,
* Start of 2968006
    ls_top_text      TYPE vtopis,
    lv_baseline_date TYPE vbrk-fkdat,                       "3210223
    lt_top_text      TYPE TABLE OF vtopis.

* @Del
  IF ms_source-vbrk-zterm IS NOT INITIAL.
*Begin of 3210223
    lv_baseline_date = ms_source-vbrk-fkdat + ms_source-vbrk-valtg.
    IF ms_source-vbrk-valdt NE 0.
      lv_baseline_date = ms_source-vbrk-valdt.
    ENDIF.
*End of 3210223
    TEST-SEAM fill_payment_terms01.
      CALL FUNCTION 'SD_PRINT_TERMS_OF_PAYMENT'
        EXPORTING
          bldat                        = lv_baseline_date          "3210223
          budat                        = lv_baseline_date          "3210223
          cpudt                        = lv_baseline_date          "3210223
          language                     = ms_kna1-spras
          terms_of_payment             = ms_source-vbrk-zterm
        TABLES
          top_text                     = lt_top_text
        EXCEPTIONS
          terms_of_payment_not_in_t052 = 1
          OTHERS                       = 2.
    END-TEST-SEAM.
    CHECK lt_top_text IS NOT INITIAL.                       "3013311
    LOOP AT lt_top_text INTO ls_top_text.                   "3013311
      CONCATENATE ls_top_text-line ls_payment_terms-note-base-base-content INTO ls_payment_terms-note-base-base-content SEPARATED BY '. '. "3013311
    ENDLOOP.                                                "3013311
    IF ls_payment_terms-note-base-base-content IS NOT INITIAL. "2854416
      APPEND ls_payment_terms TO rt_payment_terms.
    ENDIF.
  ENDIF.
ENDMETHOD.


  METHOD fill_price_amount. "Added with SAP Note 2839436 "Changed with SAP Note 2871404
    DATA: ls_komv           TYPE komv,
          ls_fix_value_list TYPE ty_fix_value,              "2871404
          lv_flag           TYPE abap_bool,                 "2938424
          lt_unit_prices    TYPE TABLE OF ty_unit_prices WITH KEY unit_quan, "3030901
          ls_unit_prices    TYPE ty_unit_prices.            "3030901

    clear: ev_currency, ev_price_amount, ev_unit_quan.      "3013311
*  first check if fix value list exists for PRICE and take the value from the customized price conditions "2871404
    LOOP AT mt_fix_value_list INTO ls_fix_value_list        "2871404
      WHERE fixvaluename = mc_price.                        "2871404
      CLEAR: ls_komv,                                       "2871404
             lv_flag.                                       "2938424
      READ TABLE ms_source-komv INTO ls_komv                "2871404
        WITH KEY kschl = ls_fix_value_list-fieldvalue       "2871404
                 kposn = is_vbrp-posnr                      "2871404
                 kinak = ''.
      IF sy-subrc = 0.                                      "2871404
*Begin of 2938424
        lv_flag = abap_true.
      ELSE.
        READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fixvaluename = gc_fixed_value_list_ubl-item_categories
                                                                     fieldvalue = is_vbrp-pstyv.
        IF sy-subrc = 0.
          READ TABLE ms_source-komv INTO ls_komv
               WITH KEY kposn = is_vbrp-posnr
                        kschl = ls_fix_value_list-fieldvalue.

          IF sy-subrc EQ 0.
            lv_flag = abap_true.
          ENDIF.
        ENDIF.
      ENDIF.
      IF lv_flag = abap_true.
*End of 2938424
        get_price_from_condition(                           "2871404
          EXPORTING                                         "2871404
            is_komv     = ls_komv                           "2871404
            is_vbrp     = is_vbrp                           "3030901
            iv_quantity = iv_quantity                       "2871404
          IMPORTING                                         "2871404
            ev_currency        = ev_currency                "2871404
            es_unit_prices     = ls_unit_prices ).          "3030901
        COLLECT ls_unit_prices INTO lt_unit_prices.         "3030901
        CLEAR ls_unit_prices.                               "3030901
      ENDIF.                                                "2871404

    ENDLOOP.                                                "2871404
*  if no fix value list is found, take the price from the standard price condition "2871404
    IF sy-subrc <> 0.                                       "2871404
      CLEAR lv_flag.                                        "2938424
      READ TABLE ms_source-komv INTO ls_komv
           WITH KEY kposn = is_vbrp-posnr
                    koaid = 'B'
                    kinak = ''
                    kstat = ''.
      IF sy-subrc = 0.
*Begin of 2938424
        lv_flag = abap_true.
      ELSE.
        READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fixvaluename = gc_fixed_value_list_ubl-item_categories
                                                                     fieldvalue = is_vbrp-pstyv.
        IF sy-subrc = 0.
          READ TABLE ms_source-komv INTO ls_komv
               WITH KEY kposn = is_vbrp-posnr
                        koaid = 'B'
                        kstat = ''.

          IF sy-subrc EQ 0.
            lv_flag = abap_true.
          ENDIF.
        ENDIF.
      ENDIF.
      IF lv_flag = abap_true.
*End of 2938424
        get_price_from_condition(                           "2871404
           EXPORTING                                        "2871404
             is_komv     = ls_komv                          "2871404
             is_vbrp     = is_vbrp                          "3030901
             iv_quantity = iv_quantity                      "2871404
           IMPORTING                                        "2871404
             ev_currency        = ev_currency               "2871404
             es_unit_prices     = ls_unit_prices ).         "3030901
        COLLECT ls_unit_prices INTO lt_unit_prices.         "3030901
        CLEAR ls_unit_prices.                               "3030901
      ENDIF.
    ENDIF.

*   Begin of 3013311
      IF lt_unit_prices IS NOT INITIAL.               "3030901
        SORT lt_unit_prices BY unit_quan DESCENDING.  "3030901
        get_unit_price_and_amount(
          EXPORTING
            it_unit_prices  = lt_unit_prices          "3030901
          IMPORTING
            ev_unit_quan    = ev_unit_quan
            ev_price_amount = ev_price_amount ).
      ENDIF.
*   End of 3013311

    "Price 0 is allowed                                     "2871404
    IF  ev_price_amount = '0.00'                            "2871404
       OR ev_price_amount = '0.000'                         "3210223
       OR ev_price_amount IS INITIAL.                       "2938424
      ev_currency = ms_source-vbrk-waerk.                   "2871404
    ENDIF.                                                  "2871404

  ENDMETHOD.


  METHOD fill_project_reference.                            "3085941

    DATA lv_order TYPE vbak-vbeln.
    DATA lv_ps_psp_pnr TYPE vbak-ps_psp_pnr.
    CONSTANTS lc_order TYPE tds_docflow-vbtyp_n VALUE 'C'. "Sales Order


    lv_order = read_doc_from_flow( iv_vbtyp  = lc_order ).

    IF lv_order IS NOT INITIAL.
      TEST-SEAM proj_ref.
        SELECT SINGLE ps_psp_pnr
          FROM vbak
          INTO lv_ps_psp_pnr
         WHERE vbeln = lv_order.
      END-TEST-SEAM.

      IF lv_ps_psp_pnr IS NOT INITIAL.
        rv_project-id-base-base-content = lv_ps_psp_pnr.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD fill_tax_exclusive_amount.                         " 2854416

    DATA: ls_komv           TYPE komv,
          lv_round_amount   TYPE kwert.                     "2938424

* Tax Exclusive Amount
    rs_tax_exclusive_amount-base-content = ms_source-vbrk-netwr.
    rs_tax_exclusive_amount-base-currency_id = ms_source-vbrk-waerk.
    IF mv_rounding_active EQ abap_true.                                            "Begin of 2938424
      lv_round_amount = get_rounding_off_amount( ).
      rs_tax_exclusive_amount-base-content = rs_tax_exclusive_amount-base-content - lv_round_amount.
    ENDIF.                                                                         "End of 2938424

    format_negative_amount( CHANGING cv_amount = rs_tax_exclusive_amount-base-content ).

  ENDMETHOD.


METHOD fill_tax_total.

  DATA:
    BEGIN OF ls_group,
      mwsk1 TYPE mwskz,
      kschl TYPE kscha,
      krech TYPE krech,
      kawrt TYPE kawrt,
      kbetr TYPE kbetr,
      kwert TYPE kwert,
    END OF ls_group.

  DATA:
    ls_tax_subtotal TYPE edo_ubl_tax_subtotal,
    lt_konv         TYPE TABLE OF komv,
    ls_konv         TYPE komv,
    lt_group        TYPE tt_group,                          "updated with note 3289969
    ls_fix_value    TYPE ty_fix_value,
    lv_index        TYPE sy-tabix,
    lv_local_amount TYPE mwsbp,
    lv_vmapname     TYPE char20,                            "2871404
    lv_flag         TYPE abap_bool,                         "2938424
    ls_vbrp         TYPE vbrp,                              "2938424
    lv_intca        TYPE intca,                             "2905102
    ls_tax_total    TYPE edo_ubl_tax_total,
    lv_tax_country  TYPE land1.                             "3085941

  FIELD-SYMBOLS: <tax_subtotal>       TYPE edo_ubl_tax_subtotal, "3030901
                 <fs_tax_country_tab> TYPE table,           "3085941
                 <fs_tax_country>     TYPE any.             "3085941

* Begin of change 3085941
  ASSIGN COMPONENT 'TAX_COUNTRY' OF STRUCTURE ms_source-source_header TO <fs_tax_country_tab>.
  IF <fs_tax_country_tab> IS ASSIGNED.
    READ TABLE <fs_tax_country_tab> INDEX 1 ASSIGNING <fs_tax_country>.
  ENDIF.
  IF <fs_tax_country> IS ASSIGNED.
    lv_tax_country = <fs_tax_country>.
  ELSE.
    lv_tax_country = ms_source-source_header-land.
  ENDIF.
* End of Change 3085941
* Begin of Change 2905102
  CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
    EXPORTING
      sap_code  = lv_tax_country                                     "3085941
    IMPORTING
      iso_code  = lv_intca
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
    MESSAGE e072(edocument_eu)
        WITH lv_tax_country                                 "3085941
        INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.
* End of Change 2905102

  CLEAR: lt_konv.
  LOOP AT ms_source-komv INTO ls_konv.                              "Begin of 2938424
    CLEAR lv_flag.
    IF ls_konv-kinak = ''.
      lv_flag = abap_true.
    ELSE.
      READ TABLE ms_source-vbrp INTO ls_vbrp WITH KEY posnr = ls_konv-kposn.
      IF sy-subrc = 0.
        READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY
                                     fixvaluename = gc_fixed_value_list_ubl-item_categories
                                     fieldvalue = ls_vbrp-pstyv.
        IF sy-subrc = 0.
          lv_flag = abap_true.
        ENDIF.
      ENDIF.
    ENDIF.
    IF lv_flag EQ abap_true.
      APPEND ls_konv TO lt_konv.
    ENDIF.
  ENDLOOP.                                                          "End of 2938424

  LOOP AT mt_fix_value_list INTO ls_fix_value
    WHERE fixvaluename = 'VAT_CONDITIONS'.

    LOOP AT lt_konv INTO ls_konv
      WHERE kschl = ls_fix_value-fieldvalue        "Del-2938424
        AND kstat = ''.
      MOVE-CORRESPONDING ls_konv TO ls_group.
      APPEND ls_group TO lt_group.
    ENDLOOP.
  ENDLOOP.

  IF lt_group IS INITIAL.
    DELETE lt_konv WHERE kposn = '000000'
                      OR koaid <> 'D'              "Del-2938424
                      OR kstat <> ''.

    CLEAR: ls_group, ls_konv.
    LOOP AT lt_konv INTO ls_konv.
      MOVE-CORRESPONDING ls_konv TO ls_group.
      APPEND ls_group TO lt_group.
    ENDLOOP.
  ENDIF.
  SORT lt_group BY mwsk1.

  LOOP AT lt_group INTO ls_group.
    lv_index = sy-tabix.
    ls_tax_subtotal-tax_category-id-base-base-content = ls_group-mwsk1.

*   Percent
    ls_group-kbetr = ls_group-kbetr / 10.
    ls_tax_subtotal-tax_category-percent-base-base-content = ls_group-kbetr.
    format_negative_amount( CHANGING cv_amount = ls_tax_subtotal-tax_category-percent-base-base-content ).

*   Tax Scheme ID
    ls_tax_subtotal-tax_category-tax_scheme-id-base-base-content = get_fix_value(
                                                                     iv_name        = 'TAX_SCHEME_ID'
                                                                     iv_err_msg_ind = abap_false ). "2968006

*    IF ls_group-krech = 'H'.                                             "removed with note 3289969
*      ls_group-kawrt = ls_group-kawrt / ( 1 + ls_group-kbetr / 100 ).    "removed with note 3289969
*      MODIFY lt_group FROM ls_group INDEX lv_index TRANSPORTING kawrt.   "removed with note 3289969
*    ENDIF.                                                               "removed with note 3289969

    AT END OF mwsk1.
      SUM.

*     Taxable Amount
      ls_tax_subtotal-taxable_amount-base-content = calculate_tax_basis_amount(   "updated with note 3289969
                                                      iv_mwskz = ls_group-mwsk1   "updated with note 3289969
                                                      it_group = lt_group ).      "updated with note 3289969
      format_negative_amount( CHANGING cv_amount = ls_tax_subtotal-taxable_amount-base-content ).
      ls_tax_subtotal-taxable_amount-base-currency_id = ms_source-vbrk-waerk.

*     Tax Amount
      ls_tax_subtotal-tax_amount-base-content = ls_group-kwert.
      format_negative_amount( CHANGING cv_amount = ls_tax_subtotal-tax_amount-base-content ).
      ls_tax_subtotal-tax_amount-base-currency_id = ms_source-vbrk-waerk.

*     Tax Category ID
* Begin of Change 2871404
      IF lv_intca IS NOT INITIAL.                           "2905102
        CONCATENATE lv_intca '_TAX_CATEGORY' INTO lv_vmapname.
        ls_tax_subtotal-tax_category-id-base-base-content = get_value_mapping(
                                                              iv_vmapname    = lv_vmapname                                          " Value Mapping
                                                              iv_int_value   = ls_group-mwsk1                                       " Internal Value
                                                              iv_err_msg_ind = abap_false ).
      ENDIF.                                                "2905102
      IF ls_tax_subtotal-tax_category-id-base-base-content IS INITIAL.
* End of Change 2871404
        ls_tax_subtotal-tax_category-id-base-base-content = get_value_mapping(
                                                              iv_vmapname    = 'TAX_CATEGORY'                                     " Value Mapping
                                                              iv_int_value   = ls_group-mwsk1                                     " Internal Value      "2871404
                                                              iv_err_msg_ind = abap_false ). " 2968006
      ENDIF.                                                "2871404

      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false. "3259089
        ls_tax_subtotal-tax_category-id-base-base-scheme_id = get_fix_value(
                                                                iv_name        = 'TAX_CAT_SCHEME_ID'
                                                                iv_err_msg_ind = abap_false ). " 2968006
      ENDIF.                                                "3259089

*     Tax Exemption Reason
      IF ls_group-kwert = 0
        AND ls_tax_subtotal-tax_category-id-base-base-content NOT IN mt_no_exc_reason_tax_cat. "2885554
        TEST-SEAM fill_tax_total_01.                        "2390901
          SELECT SINGLE text1
            FROM t007s
            INTO ls_tax_subtotal-tax_category-tax_exemption_reason-base-base-content
           WHERE spras = ms_t001-spras
            AND  kalsm = ms_source-vbrk-kalsm
            AND  mwskz = ls_group-mwsk1.                    "2871404
          IF sy-subrc NE 0 AND lv_intca IS NOT INITIAL."start of 3289969
            DATA lv_kalsm TYPE kalsm.
            CONCATENATE 'TAX' lv_intca INTO lv_kalsm.
            SELECT SINGLE text1
              FROM t007s
              INTO ls_tax_subtotal-tax_category-tax_exemption_reason-base-base-content
             WHERE spras = ms_t001-spras
              AND  kalsm = lv_kalsm
              AND  mwskz = ls_group-mwsk1.
          ENDIF."end of 3289969
        END-TEST-SEAM.                                      "2390901

*Tax Exemption Reason Code
        IF lv_intca IS NOT INITIAL.                         "2905102
          CLEAR lv_vmapname.
          CONCATENATE lv_intca '_TAX_EXEMPT_CODE' INTO lv_vmapname.
          ls_tax_subtotal-tax_category-tax_exemption_reason_code-base-base-content = get_value_mapping(
                                                                                       iv_vmapname    = lv_vmapname        " Value Mapping
                                                                                       iv_int_value   = ls_group-mwsk1     " Internal Value
                                                                                       iv_err_msg_ind = abap_false ).
        ENDIF.                                              "2905102
        IF ls_tax_subtotal-tax_category-tax_exemption_reason_code-base-base-content IS INITIAL.
          ls_tax_subtotal-tax_category-tax_exemption_reason_code-base-base-content = get_value_mapping(
                                                                                      iv_vmapname    = 'TAX_EXEMPT_CODE'  " Value Mapping
                                                                                      iv_int_value   = ls_group-mwsk1     " Internal Value
                                                                                      iv_err_msg_ind = abap_false ).      " 2968006 no check in check_inv
        ENDIF.
        "Deleted from 3030901
* End of Change 2871404.
      ENDIF.
* Start of change 3030901
      UNASSIGN <tax_subtotal>.
      READ TABLE ls_tax_total-tax_subtotal ASSIGNING <tax_subtotal> WITH KEY
        tax_category-id-base-base-content = ls_tax_subtotal-tax_category-id-base-base-content
        tax_category-percent-base-base-content = ls_tax_subtotal-tax_category-percent-base-base-content
        tax_category-tax_exemption_reason_code-base-base-content = ls_tax_subtotal-tax_category-tax_exemption_reason_code-base-base-content.
      IF sy-subrc = 0.
        <tax_subtotal>-taxable_amount-base-content = <tax_subtotal>-taxable_amount-base-content + ls_tax_subtotal-taxable_amount-base-content.
        format_negative_amount( CHANGING cv_amount = <tax_subtotal>-taxable_amount-base-content ).
        <tax_subtotal>-tax_amount-base-content = <tax_subtotal>-tax_amount-base-content + ls_tax_subtotal-tax_amount-base-content.
        format_negative_amount( CHANGING cv_amount = <tax_subtotal>-tax_amount-base-content ).
      ELSE.
* End of Change 3030901
        APPEND ls_tax_subtotal TO ls_tax_total-tax_subtotal.
      ENDIF.                                                "3030901
      CLEAR ls_tax_subtotal.                                "2905102
    ENDAT.
  ENDLOOP.

* Tax Amount
  ls_tax_total-tax_amount-base-content = ms_source-vbrk-mwsbk.
  format_negative_amount( CHANGING cv_amount = ls_tax_total-tax_amount-base-content ).
  ls_tax_total-tax_amount-base-currency_id = ms_source-vbrk-waerk.

  APPEND ls_tax_total TO rs_tax_total.
* Begin of 2871404
* If Tax Currency Code (company code currency) is different from Document Currency Code
* then add a new line in the TaxTotal with the local currency
  IF ms_t001-waers <> ms_source-vbrk-waerk.
    CLEAR ls_tax_total.
    CALL FUNCTION 'CONVERT_TO_LOCAL_CURRENCY'
      EXPORTING
        date             = ms_source-vbrk-fkdat
        foreign_amount   = ms_source-vbrk-mwsbk
        foreign_currency = ms_source-vbrk-waerk
        local_currency   = ms_t001-waers
      IMPORTING
        local_amount     = lv_local_amount
      EXCEPTIONS
        no_rate_found    = 1
        overflow         = 2
        no_factors_found = 3
        no_spread_found  = 4
        derived_2_times  = 5
        OTHERS           = 6.
    IF sy-subrc = 0.
      ls_tax_total-tax_amount-base-content = lv_local_amount.
      format_negative_amount( CHANGING cv_amount = ls_tax_total-tax_amount-base-content ).
      ls_tax_total-tax_amount-base-currency_id = ms_t001-waers.
      APPEND ls_tax_total TO rs_tax_total.
    ELSE.
      MESSAGE e068(edocument_eu) WITH ms_source-bkpf-waers ms_t001-waers INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.
  ENDIF.
* End of 2871404

ENDMETHOD.


  METHOD fill_tender.                                       "3085941

    DATA lv_tender TYPE vbrk-vbeln.
    CONSTANTS lc_tender TYPE tds_docflow-vbtyp_n VALUE 'B'. "Quotation

    lv_tender = read_doc_from_flow( iv_vbtyp  = lc_tender ).

    rv_tender-id-base-base-content = lv_tender.

  ENDMETHOD.


  METHOD get_allowance_charge_cond_type.                    "Added with SAP Note 2905102

    DATA: ls_komv           TYPE komv,
          ls_vbrp           TYPE vbrp,                      "2938424
          lt_fix_value_list TYPE STANDARD TABLE OF ty_fix_value,
          lv_flag           TYPE abap_bool,                 "2938424
          lv_do_add         TYPE abap_bool.

    FIELD-SYMBOLS: <ls_komv>  TYPE komv.

    CLEAR et_komv.

    lt_fix_value_list = mt_fix_value_list.
    DELETE lt_fix_value_list WHERE fixvaluename NE mc_allow_charge.

    READ TABLE mt_fix_value TRANSPORTING NO FIELDS
                            WITH KEY fixvaluename = mc_header_allowance_active
                                     fieldvalue = abap_true.
    IF sy-subrc = 0.
      LOOP AT  ms_source-komv INTO ls_komv
                              WHERE knumv = ms_source-vbrk-knumv
                                AND koaid EQ 'A'   "Discounts                 "Del-2938424
                                AND ( kherk EQ 'D' OR kherk EQ 'G').

*Begin of 2938424
        CLEAR lv_flag.
        IF ls_komv-kinak = ''.
          lv_flag = abap_true.
        ELSE.
          CLEAR ls_vbrp.
          READ TABLE ms_source-vbrp INTO ls_vbrp WITH KEY posnr = ls_komv-kposn.
          IF sy-subrc = 0.
            READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY
                                            fixvaluename = gc_fixed_value_list_ubl-item_categories
                                            fieldvalue = ls_vbrp-pstyv.
            IF sy-subrc = 0.
              lv_flag = abap_true.
            ENDIF.
          ENDIF.
        ENDIF.
        IF lv_flag = abap_true.
*End of 2938424

          CLEAR lv_do_add.

*   Itemised Header Allowances
          IF iv_posnr IS SUPPLIED AND ls_komv-kposn NE iv_posnr.
            CONTINUE.
          ENDIF.

          IF lt_fix_value_list IS INITIAL.
            IF ls_komv-kstat EQ ''.                  "Not used for Statistics
              lv_do_add = abap_true.
            ENDIF.
          ELSE.
            READ TABLE lt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fieldvalue = ls_komv-kschl.
            IF sy-subrc = 0.
              lv_do_add = abap_true.
            ENDIF.
          ENDIF.

          IF lv_do_add IS NOT INITIAL." Append Item Discounts
            READ TABLE et_komv ASSIGNING <ls_komv> WITH KEY kschl = ls_komv-kschl
                                                            kbetr = ls_komv-kbetr
                                                            mwsk1 = ls_komv-mwsk1.
            IF sy-subrc EQ 0.
              <ls_komv>-kawrt = <ls_komv>-kawrt + ls_komv-kawrt.
              <ls_komv>-kwert = <ls_komv>-kwert + ls_komv-kwert.
            ELSE.
              APPEND ls_komv TO et_komv.
            ENDIF.
          ENDIF.
        ENDIF.                                              "2938424
      ENDLOOP.

    ENDIF.

  ENDMETHOD.


  METHOD get_allowance_charge_from_cond. " added with SAP Note 2871404

    DATA: ls_allowance_charge TYPE edo_ubl_allowance_charge.

    IF is_komv-kwert <> 0.
      IF is_komv-kwert > 0.
        ls_allowance_charge-charge_indicator-base-content = abap_true.
      ELSEIF is_komv-kwert < 0.
        ls_allowance_charge-charge_indicator-base-content = abap_false.
      ENDIF.

      TEST-SEAM get_allowance_charge_cond_01.
        SELECT SINGLE vtext FROM t685t INTO
          ls_allowance_charge-allowance_charge_reason-base-base-content
          WHERE spras = ms_kna1-spras           " 2968006
          AND   kvewe = 'A'                     " Pricing                     2905102
          AND   kappl = is_komv-kappl           " Sales and Distribution      2905102
          AND   kschl = is_komv-kschl.
        "Start of 3289969
        "Allowance charge reason is mandatory
        "If condition text is not maintained in customer's language
        "We look for it in company code´s language
        IF ls_allowance_charge-allowance_charge_reason-base-base-content IS INITIAL
          AND ms_kna1-spras NE ms_t001-spras.
          SELECT SINGLE vtext FROM t685t INTO
            ls_allowance_charge-allowance_charge_reason-base-base-content
            WHERE spras = ms_t001-spras
            AND   kvewe = 'A'                     " Pricing
            AND   kappl = is_komv-kappl           " Sales and Distribution
            AND   kschl = is_komv-kschl.
        ENDIF.
        "If text is still missing, we look for it one last time in english
        IF ls_allowance_charge-allowance_charge_reason-base-base-content IS INITIAL
          AND ms_kna1-spras NE 'E' AND ms_t001-spras NE 'E'.
          SELECT SINGLE vtext FROM t685t INTO
            ls_allowance_charge-allowance_charge_reason-base-base-content
            WHERE spras = 'E'
            AND   kvewe = 'A'                     " Pricing
            AND   kappl = is_komv-kappl           " Sales and Distribution
            AND   kschl = is_komv-kschl.
        ENDIF.
        "End of 3289969
      END-TEST-SEAM.

      ls_allowance_charge-amount-base-content = abs( is_komv-kwert ).
      format_negative_amount( CHANGING cv_amount = ls_allowance_charge-amount-base-content ).
      ls_allowance_charge-amount-base-currency_id = ms_source-vbrk-waerk.
      ls_allowance_charge-tax_category = is_tax_category.   "2905102
      APPEND ls_allowance_charge TO ev_allowance_charge.
    ENDIF.
  ENDMETHOD.


  METHOD get_allowance_charge_item."Added with SAP Note 2905102

    DATA: ls_komv           TYPE komv,
          lt_fix_value_list TYPE STANDARD TABLE OF ty_fix_value,
          lv_found          TYPE abap_bool,
          lv_flag           TYPE abap_bool,                 "2938424
          ls_vbrp           TYPE vbrp.                      "2938424

    CLEAR et_komv.

    lt_fix_value_list = mt_fix_value_list.
    DELETE lt_fix_value_list WHERE fixvaluename NE mc_allow_charge.

    READ TABLE mt_fix_value TRANSPORTING NO FIELDS
                            WITH KEY fixvaluename = mc_header_allowance_active
                                     fieldvalue = abap_true.

    IF sy-subrc IS INITIAL.
      lv_found = abap_true.
    ENDIF.

    LOOP AT  ms_source-komv INTO ls_komv
                            WHERE knumv EQ ms_source-vbrk-knumv
                              AND kposn EQ iv_posnr
                              AND koaid EQ 'A'.      "Discounts                   "Del-2938424
*Begin of 2938424
      CLEAR lv_flag.
      IF ls_komv-kinak = ''.
        lv_flag = abap_true.
      ELSE.
        CLEAR ls_vbrp.
        READ TABLE ms_source-vbrp INTO ls_vbrp WITH KEY posnr = ls_komv-kposn.
        IF sy-subrc = 0.
          READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY
                                          fixvaluename = gc_fixed_value_list_ubl-item_categories
                                          fieldvalue = ls_vbrp-pstyv.
          IF sy-subrc = 0.
            lv_flag = abap_true.
          ENDIF.
        ENDIF.
      ENDIF.
      IF lv_flag = abap_true.
*End of 2938424

        IF lv_found = abap_true AND ( ls_komv-kherk EQ 'D' OR ls_komv-kherk EQ 'G' ).
*   Do not include conditions originated from Header when Header Discount activated
          CONTINUE.
        ENDIF.

        IF lt_fix_value_list IS INITIAL.
          IF ls_komv-kstat EQ ''.                    " Not used for Statistics
            APPEND ls_komv TO et_komv.
          ENDIF.
        ELSE.
          READ TABLE lt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fieldvalue = ls_komv-kschl.
          IF sy-subrc = 0.
            APPEND ls_komv TO et_komv.
          ENDIF.
        ENDIF.
      ENDIF.                                                "2938424
    ENDLOOP.

  ENDMETHOD.


  METHOD get_delivery_date_for_cr_note. "New with 2885554

    DATA: lv_lfdat TYPE lfdat,
          ls_vbap  TYPE vbap,
          ls_vbfa  TYPE vbfa.

    TEST-SEAM get_delivery_date_cr_note_01.
      SELECT SINGLE * FROM vbap                             "#EC CI_ALL_FIELDS_NEEDED
        INTO ls_vbap
        WHERE vbeln = is_vbrp-vgbel AND
              posnr = is_vbrp-vgpos.
    END-TEST-SEAM.
    IF sy-subrc = 0.
      TEST-SEAM get_delivery_date_cr_note_02.
        SELECT * UP TO 1 ROWS FROM vbfa                     "#EC CI_ALL_FIELDS_NEEDED
          INTO ls_vbfa
          WHERE vbelv = ls_vbap-vgbel AND
                posnv = ls_vbap-vgpos AND
                vbtyp_n = 'J' AND
                vbtyp_v = 'C'.
        ENDSELECT.
      END-TEST-SEAM.
      IF sy-subrc = 0.
        CLEAR lv_lfdat.
        TEST-SEAM get_delivery_date_cr_note_03.
          SELECT SINGLE lfdat FROM likp
            INTO lv_lfdat
            WHERE vbeln = ls_vbfa-vbeln.
        END-TEST-SEAM.
        IF sy-subrc = 0.
* Delivery Date
          ev_lfdat = lv_lfdat.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_document_flow.                                 "3085941

    CALL FUNCTION 'SD_DOCUMENT_FLOW_GET'
      EXPORTING
        iv_docnum  = ms_source-vbrk-vbeln
      IMPORTING
        et_docflow = mt_docflow.

  ENDMETHOD.


  METHOD get_item_description.                    "Added with SAP Note 2938424

    TEST-SEAM get_item_description_01.
      CALL FUNCTION 'READ_TEXT'
        EXPORTING
          id                      = '0001'
          language                = ms_t001-spras
          name                    = iv_text_name
          object                  = iv_object
        TABLES
          lines                   = et_lines
        EXCEPTIONS
          id                      = 1
          language                = 2
          name                    = 3
          not_found               = 4
          object                  = 5
          reference_check         = 6
          wrong_access_to_archive = 7
          OTHERS                  = 8.
    END-TEST-SEAM.

    IF sy-subrc <> 0.
      TEST-SEAM get_item_description_02.
        CALL FUNCTION 'READ_TEXT'
          EXPORTING
            id                      = '0001'
            language                = 'E'
            name                    = iv_text_name
            object                  = iv_object
          TABLES
            lines                   = et_lines
          EXCEPTIONS
            id                      = 1
            language                = 2
            name                    = 3
            not_found               = 4
            object                  = 5
            reference_check         = 6
            wrong_access_to_archive = 7
            OTHERS                  = 8.
      END-TEST-SEAM.
    ENDIF.

  ENDMETHOD.


  METHOD get_partner_id_and_type." Implementation added with SAP Note 2968006

    CASE ms_source-source_header-source_type.
      WHEN cl_edoc_source_sd_invoice=>gc_src_sd_invoice.
        ev_partner_id = ms_kna1-kunnr.
        ev_partner_type = cl_edoc_dpp=>gc_customer.
      WHEN OTHERS.
        RETURN.
    ENDCASE.

  ENDMETHOD.


  METHOD get_price_from_condition. " added with SAP Note 2871404
    " 3013311 version reverted back to 2968006 version with 3030901
    " The unit price is calculated based on net price for Schematron validation
    " Unit quantity is adjusted for decimal shifts in the unit price
    " The calculated unit quantity may differ from the actual unit quantity
    " In case unit quantity is zero it should be handled with custom code
    " In the case where net price amount decimals are truncated the unit price may not match, use SET_OUTPUT_DATA from BAdI EDOC_ADAPTOR
    DATA: lv_unit_price TYPE p DECIMALS 5,
          lv_up_abs     TYPE p DECIMALS 5,                  "3030901
          lv_dec        TYPE i,
          lv_dec_val    TYPE c LENGTH 7,
          lv_unit_quan  TYPE c LENGTH 4 VALUE '1000',
          lv_price      TYPE kwert,
          lv_inuom      TYPE meins,                         "3030901
          lv_outuom     TYPE meins,                         "3030901
          lv_inquan     TYPE bstmg,                         "3030901
          lv_outquan    TYPE bstmg.                         "3030901
    CLEAR: ev_price_amount, ev_currency, ev_unit_quan,      "3030901
           ev_unit_price, ev_cr_price_amount, es_unit_prices. "3030901

    IF iv_quantity IS NOT INITIAL                   "Begin of 2968006
    AND iv_quantity NE '0' AND iv_quantity NE '0.00' AND iv_quantity NE '0.000'. "3210223
      lv_unit_price = is_komv-kwert / iv_quantity.
    ELSE.
      es_unit_prices-unit_price = is_komv-kbetr.            "3030901
    ENDIF.

    ev_currency = ms_source-vbrk-waerk.                     "2992909

**** Deleted from Note 2968006
    " Start of Change 3030901
    IF is_komv-kpein GT 1 OR is_vbrp-vrkme NE is_komv-kmein.
      IF is_vbrp-vrkme EQ is_komv-kmein.
        lv_outquan = is_komv-kpein.
        lv_unit_price = lv_unit_price * lv_outquan.
      ELSE.
        lv_outuom = is_vbrp-vrkme.
        lv_inuom  = is_komv-kmein.
        lv_inquan = is_komv-kpein.

        CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
          EXPORTING
            i_matnr              = is_vbrp-matnr
            i_in_me              = lv_inuom
            i_out_me             = lv_outuom
            i_menge              = lv_inquan
          IMPORTING
            e_menge              = lv_outquan
          EXCEPTIONS
            error_in_application = 1
            error                = 2
            OTHERS               = 3.
        IF sy-subrc = 0.
          lv_unit_price = lv_unit_price * lv_outquan.
        ENDIF.
      ENDIF.
    ELSE.
      lv_outquan = is_komv-kpein.
    ENDIF.
    " End of Change 3030901

    IF lv_unit_price IS NOT INITIAL.                "Begin of 2938424
      lv_up_abs = abs( lv_unit_price ).                     "3030901
      lv_dec_val = frac( lv_up_abs ).                       "3030901
      CONDENSE lv_dec_val.
      SHIFT lv_dec_val LEFT BY 2 PLACES.
      lv_dec = strlen( lv_dec_val ).
      IF lv_dec GT 2.
        lv_dec = lv_dec - 1.
        es_unit_prices-unit_quan = lv_unit_quan+0(lv_dec).  "3030901
        lv_unit_price = lv_unit_price * es_unit_prices-unit_quan. "3030901
        IF lv_outquan IS NOT INITIAL.                       "3030901
          es_unit_prices-unit_quan =                        "3030901
                         es_unit_prices-unit_quan * lv_outquan. "3030901
        ENDIF.                                              "3030901
        es_unit_prices-unit_price = lv_unit_price.          "3030901
      ELSE.
        es_unit_prices-unit_quan = 1.                       "3289969
        IF lv_outquan IS NOT INITIAL.                       "3030901
          es_unit_prices-unit_quan = lv_outquan.            "3030901
        ENDIF.                                              "3030901
        es_unit_prices-unit_price = lv_unit_price.          "3030901
      ENDIF.
    ELSEIF lv_outquan IS NOT INITIAL.                       "3030901
      es_unit_prices-unit_quan = lv_outquan.                "3030901
    ENDIF.                                          "End of 2938424

  ENDMETHOD.


  METHOD get_rounding_off_amount.           "New with 2938424
    DATA: lt_komv      TYPE edoc_komv_tab,
          ls_komv      TYPE komv,
          ls_fix_value TYPE ty_fix_value,
          lt_fix_value TYPE TABLE OF ty_fix_value.
    CLEAR: rv_cond_value.
    lt_fix_value = mt_fix_value_list.
    DELETE lt_fix_value WHERE fixvaluename NE gc_fixed_value_list_ubl-round_off_cond_types.
    lt_komv = ms_source-komv.
    IF iv_posnr IS NOT INITIAL.
      DELETE lt_komv WHERE knumv NE ms_source-vbrk-knumv
                        OR kposn NE iv_posnr.
    ENDIF.
    IF lt_fix_value IS NOT INITIAL.
      LOOP AT lt_komv INTO ls_komv.
        READ TABLE lt_fix_value INTO  ls_fix_value
                           WITH KEY fieldvalue = ls_komv-kschl.
        IF sy-subrc EQ 0.
          rv_cond_value = rv_cond_value + ls_komv-kwert.
        ENDIF.
        CLEAR: ls_komv.
      ENDLOOP.
    ELSE.
      LOOP AT lt_komv INTO  ls_komv
                      WHERE kschl = 'DIFF'.
        rv_cond_value = rv_cond_value + ls_komv-kwert.
      ENDLOOP.
    ENDIF.
  ENDMETHOD.


  METHOD get_sepa_mandate. "New with 2871404
    DATA:
      lt_sepa_mandate TYPE sepa_tab_data_mandate_data.

    IF ms_source-vbrk-mndid IS INITIAL.
      RETURN.
    ENDIF.

    TEST-SEAM get_sepa_mandate_01.
    CALL FUNCTION 'DETERMINE_SEPA_MANDATE'
      EXPORTING
        pi_kunnr   = iv_kunnr
        pi_bukrs   = iv_bukrs
      TABLES
        pt_mandate = lt_sepa_mandate.
    END-TEST-SEAM.

    READ TABLE lt_sepa_mandate
      INTO ms_sepa_mandate
      WITH KEY mndid = ms_source-vbrk-mndid.

    IF sy-subrc <> 0.
      CLEAR ms_sepa_mandate.
    ENDIF.
  ENDMETHOD.


  METHOD get_tax_total_line. " added with SAP Note 2871404
    DATA: ls_fix_value TYPE ty_fix_value,
          ls_komv      TYPE komv,
          lv_flag      TYPE abap_bool.

    CLEAR: ev_tax_amount,
           ev_currency.

*   First check if there are customized conditions for TAX
    LOOP AT mt_fix_value_list INTO ls_fix_value
      WHERE fixvaluename = mc_vat_conditions.

      READ TABLE ms_source-komv INTO ls_komv
       WITH KEY  kschl = ls_fix_value-fieldvalue
                 kposn = is_vbrp-posnr
                 kinak = ''.

*Begin of 2938424
      CLEAR lv_flag.
      IF sy-subrc EQ 0.
        lv_flag = abap_true.
      ELSE.
        READ TABLE mt_fix_value_list TRANSPORTING NO FIELDS WITH KEY fixvaluename = gc_fixed_value_list_ubl-item_categories
                                                                     fieldvalue = is_vbrp-pstyv.
        IF sy-subrc = 0.
          READ TABLE ms_source-komv INTO ls_komv
               WITH KEY kposn = is_vbrp-posnr
                        kschl = ls_fix_value-fieldvalue.

          IF sy-subrc EQ 0.
            lv_flag = abap_true.
          ENDIF.
        ENDIF.
      ENDIF.
      IF lv_flag = abap_true.
*End of 2938424
        ev_tax_amount = ev_tax_amount + ls_komv-kbetr / 10.
      ENDIF.                                                "2938424
    ENDLOOP.
    IF sy-subrc <> 0.
      ev_tax_amount = is_vbrp-mwsbp.
    ENDIF.

    format_negative_amount( CHANGING cv_amount = ev_tax_amount ).
    ev_currency = ms_source-vbrk-waerk.

  ENDMETHOD.


  METHOD get_ubl_mapping_source.
*   Added with SAP Note 2968006

    DATA:
      lo_source     TYPE REF TO cl_edoc_source,
      ls_src_header TYPE edoc_src_header,
      ls_sd_invoice TYPE edoc_src_data_sd_invoice,
      ls_source     TYPE edoc_ubl_mapping_source.

    super->get_ubl_mapping_source( EXPORTING io_edocument = io_edocument     "Added with 3134550
                                             io_source  = io_source
                                   RECEIVING rs_ubl_mapping_source = ls_source ).

    lo_source = io_source.
    io_source->get_data( IMPORTING es_data = ls_sd_invoice ).
    ls_src_header = io_source->get_header( ).

*   Map from eDocument source into interface source
    ls_source-source_header        = ls_src_header.
    ls_source-reference-edoc_guid = io_edocument->ms_edocument-edoc_guid.
    ls_source-bkpf               = ls_sd_invoice-bkpf.
    ls_source-bseg              = ls_sd_invoice-bseg.
    ls_source-bset             = ls_sd_invoice-bset.
    ls_source-vbrk          = ls_sd_invoice-document_header.
    ls_source-vbrp         = ls_sd_invoice-document_item.
    ls_source-komv        = ls_sd_invoice-conditions_record.
    ls_source-vbpa       = ls_sd_invoice-partner_data.

    rs_ubl_mapping_source = ls_source.

  ENDMETHOD.


  METHOD get_unit_price_and_amount. "added with SAP Note 3013311
    "Implementation changed with 3030901

    DATA: lv_unit_quan    TYPE bstmg,
          lv_unit_price   TYPE p DECIMALS 5,
          lv_price        TYPE kwert.

    FIELD-SYMBOLS: <fs_unit_prices>  TYPE ty_unit_prices.

    CLEAR: ev_unit_quan, ev_price_amount.

    IF lines( it_unit_prices ) GT 1.
      LOOP AT it_unit_prices ASSIGNING <fs_unit_prices>.
        AT FIRST.
          lv_unit_quan = <fs_unit_prices>-unit_quan.
          lv_unit_price = <fs_unit_prices>-unit_price.
          CONTINUE.
        ENDAT.
        IF <fs_unit_prices>-unit_quan NE lv_unit_quan AND <fs_unit_prices>-unit_quan IS NOT INITIAL.
          lv_unit_price = lv_unit_price + ( <fs_unit_prices>-unit_price * lv_unit_quan / <fs_unit_prices>-unit_quan ).
        ELSE.
          lv_unit_price = lv_unit_price + <fs_unit_prices>-unit_price.
        ENDIF.
      ENDLOOP.
    ELSE.
      READ TABLE it_unit_prices INDEX 1 ASSIGNING <fs_unit_prices>.
      IF sy-subrc = 0.
        lv_unit_price = <fs_unit_prices>-unit_price.
        lv_unit_quan = <fs_unit_prices>-unit_quan.
      ENDIF.
    ENDIF.

    IF lv_unit_quan IS NOT INITIAL.
      ev_unit_quan = lv_unit_quan.
    ENDIF.

    lv_price = lv_unit_price.
    ev_price_amount = abs( lv_price ).

  ENDMETHOD.


METHOD init_mapping.
  CONSTANTS: lc_null TYPE c VALUE ''.
  DATA:
    ls_vbpa                TYPE vbpavb,
    lv_isocd               TYPE tcurc-isocd,
    lv_msg                 TYPE string,
    lv_reinh               TYPE reinh,                      "2938424
    lv_parvw               TYPE parvw,                      "2968006
    ls_sales_org_part_func TYPE ty_value_map_multiple,      "2968006
    lv_is_cpd              TYPE boole_d.                    "3071425

  CLEAR: ls_sales_org_part_func, lv_parvw.                  "2968006

* Convert currency to ISO
  CALL FUNCTION 'CURRENCY_CODE_SAP_TO_ISO'
    EXPORTING
      sap_code  = ms_source-vbrk-waerk
    IMPORTING
      iso_code  = lv_isocd
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO lv_msg.
    add_error_message( ).
  ENDIF.

  ms_source-vbrk-waerk = lv_isocd.

*Start of 2968006
  get_partner_function( IMPORTING
                          es_cust = ls_vbpa ).

  IF ls_vbpa IS INITIAL.
    READ TABLE ms_source-vbpa INTO ls_vbpa
         WITH KEY kunnr = ms_source-vbrk-kunrg
                  parvw = 'RG'.
  ENDIF.

*End of 2968006

  cl_edoc_util_eu=>get_onetime_indicator(                  "3071425
    EXPORTING                                              "3071425
      iv_kunnr      = ls_vbpa-kunnr                        "3071425
    RECEIVING                                              "3071425
      rv_is_onetime = lv_is_cpd ).                         "3071425

  mv_is_cpd = lv_is_cpd.                                   "3071425

* Initial mapping is implemented in class CL_EDOC_MAP
  TEST-SEAM init_mapping_01.
  super->init_mapping(
    EXPORTING
      iv_bukrs = ms_source-vbrk-bukrs
      iv_kunnr = ls_vbpa-kunnr                              "2968006
      iv_adrnr = ls_vbpa-adrnr ).
  END-TEST-SEAM.

* Structure MS_KNA1 contains the attributes of the customer
* for one time customer, take the relevant tax information from VBPAVB
  IF ls_vbpa-stcd1 IS NOT INITIAL AND ls_vbpa-stcdt IS NOT INITIAL.
    ms_kna1-stcd1 = ls_vbpa-stcd1.
    ms_kna1-stcdt = ls_vbpa-stcdt.
  ENDIF.
  IF ls_vbpa-stceg IS NOT INITIAL.                     "Begin of 2938424
     ms_kna1-stceg = ls_vbpa-stceg.
  ELSEIF ms_kna1-stceg IS INITIAL
     AND ms_source-vbrk-stceg IS NOT INITIAL.         "3042934
      ms_kna1-stceg = ms_source-vbrk-stceg.
  ENDIF.                                              "End of 2938424

* ISO country code 2 digit
  SELECT SINGLE intca FROM t005 INTO ms_adrc_vend-country
    WHERE land1 =  ms_adrc_vend-country.

  SELECT SINGLE intca FROM t005 INTO ms_adrc_cust-country
    WHERE land1 = ms_adrc_cust-country.

* Get Document Currency Code ID
  mv_currency_code_id = get_fix_value( iv_name        = 'CURRENCY_CODE_ID'
                                       iv_err_msg_ind = abap_true ).

* Get party ID and type
  get_party_id_and_type( iv_partner_id = ms_kna1-kunnr
                         iv_partner_type = cl_edoc_dpp=>gc_customer
                         iv_bukrs = mv_bukrs
                         iv_is_cpd = lv_is_cpd ).         "3071425
* Check if Rounding is enabled
  SELECT SINGLE reinh INTO lv_reinh                       "Begin of 2938424
                      FROM t001r
                      WHERE bukrs EQ mv_bukrs
                        AND waers EQ ms_source-vbrk-waerk.
  IF sy-subrc EQ 0 AND lv_reinh IS NOT INITIAL.
    mv_rounding_active = abap_true.
  ENDIF.                                                    "End of 2938424
ENDMETHOD.


  METHOD read_doc_from_flow.                                "3085941

    FIELD-SYMBOLS <ls_docflow> TYPE tds_docflow.

    READ TABLE mt_docflow ASSIGNING <ls_docflow>
                          WITH KEY vbtyp_n = iv_vbtyp.

    IF sy-subrc = 0.
      rv_docnum = <ls_docflow>-vbeln.
    ENDIF.

  ENDMETHOD.


  METHOD read_note_text. "Added with SAP Note 3210223

    DATA ls_stxh TYPE stxh.

    ls_stxh-tdid     = get_fix_value( iv_name = mc_header_text_id ).
    ls_stxh-tdspras  = iv_spras.
    ls_stxh-tdname   = ms_source-vbrk-vbeln.
    ls_stxh-tdobject = 'VBBK'.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        id                      = ls_stxh-tdid
        language                = ls_stxh-tdspras
        name                    = ls_stxh-tdname
        object                  = ls_stxh-tdobject
      TABLES
        lines                   = rt_text_lines
      EXCEPTIONS
        id                      = 1
        language                = 2
        name                    = 3
        not_found               = 4
        object                  = 5
        reference_check         = 6
        wrong_access_to_archive = 7
        OTHERS                  = 8.

    IF sy-subrc <> 0.
      CLEAR rt_text_lines.
    ENDIF.

  ENDMETHOD.
ENDCLASS.

class CL_EDOC_MAP_UBL definition
  public
  inheriting from CL_EDOC_MAP_AIF
  create public .

public section.

  interfaces IF_EDOC_MAP_UBL .

  types:
    BEGIN OF ty_party,
        party_id        TYPE edoc_party_id,
        party_id_type   TYPE edoc_party_id_type,
        party_code_type TYPE edoc_party_code_type,
        email           TYPE edoc_eu_email,"2968006
      END OF ty_party .
  types:
    BEGIN OF ty_value_map_multiple,           "Begin of 2938424
    vmapname(20),
    vmapvalnr(5),
    ext_value1(200),
    ext_value2(200),
    ext_value3(200),
    ext_value4(200),
    ext_value5(200),
    int_value(200),
    default_flag(1),
  END OF ty_value_map_multiple .

  data MS_SOURCE type EDOC_UBL_MAPPING_SOURCE .
  constants GC_SRC_ISU_INVOICE type EDOC_SOURCE_TYPE value 'ISU_INVOIC' ##NO_TEXT.
  constants GC_SRC_CI_DOCUM type EDOC_SOURCE_TYPE value 'CI_DOCUM' ##NO_TEXT.
  constants:
    gc_no_exc_reas_tax_cat TYPE RANGE OF string value IS INITIAL ##NO_TEXT.
  constants GC_SRC_STLMT_INVOICE type EDOC_SOURCE_TYPE value 'STLMT_INV' ##NO_TEXT.
  constants:
    BEGIN OF gc_s_blr_response_code,
              accepted     TYPE edoc_eu_response_code VALUE 'AP' ##NO_TEXT,
              rejected     TYPE edoc_eu_response_code VALUE 'RE' ##NO_TEXT,
              acknowledged TYPE edoc_eu_response_code VALUE 'AB' ##NO_TEXT,
             END OF gc_s_blr_response_code .

  methods GET_PARTY_BY_CORP
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  class-methods CLASS_CONSTRUCTOR .
  methods CHECK_CR_NOTE1
    importing
      !IS_OUT_STRUCT type ANY
    exporting
      !ET_ERROR_MESSAGES type BAPIRET2_T
    raising
      CX_EDOCUMENT .
  methods CHECK_INVOICE1
    importing
      !IS_OUT_STRUCT type ANY
    exporting
      !ET_ERROR_MESSAGES type BAPIRET2_T
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_UEN_UBL
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods MAP_DISPLHTML1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_GENPRX1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_INVOICE1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_APPRESP1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_INVOICE2
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_MSGPULL1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_MSGPULLR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_LEITWEG_ID
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods MAP_MSGDEL1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_CR_NOTER1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_RESPONSE_GENERIC
    importing
      !IS_SOURCE type ANY
      !IV_SOURCE_TYPE type TYPENAME
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_OIN
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods MAP_DISPLHTMLR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_GENPRXR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_APPRESPR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_INVOICER1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_INVOICER2
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_RESPPULL1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_MSGDELR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_VAT_NUMBER
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods MAP_RESPPULLR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_CR_NOTE1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_RESPDEL1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods MAP_RESPDELR1
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  class-methods GET_SOURCE_DOCUMENT_DATA
    importing
      !IO_EDOCUMENT type ref to CL_EDOCUMENT
    returning
      value(RD_SOURCE_DATA) type ref to DATA
    raising
      CX_EDOCUMENT .
  methods GET_UBL_MAPPING_SOURCE
    importing
      !IO_EDOCUMENT type ref to CL_EDOCUMENT
      !IO_SOURCE type ref to CL_EDOC_SOURCE
    returning
      value(RS_UBL_MAPPING_SOURCE) type EDOC_UBL_MAPPING_SOURCE
    raising
      CX_EDOCUMENT .
  methods CONSTRUCTOR
    importing
      !IV_NS type STRING
      !IO_EDOC_MAP_UBL type ref to CL_EDOC_MAP_UBL optional .
  methods GET_PARTY_BY_ORGNR
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_GLN
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_GLN_NZ
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_STCEG
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_FIELD
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_FIELD type FDNAME
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_STCD1
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_STCD2
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_STCD3
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_STCD4
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_STCD5
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
    exporting
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_BUKRS type BUKRS
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_BP_TAXNUM
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    exporting
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_BP_ORGNR
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    exporting
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_BP_CBE
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    exporting
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_BP_IDNUM
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    exporting
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_KVK
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_CBE
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTY_BY_TAX_NUMBER1
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE optional
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods INIT_VALUE_MAP_MULTIPLE .
  methods GET_PARTY_BY_PEPPOL_ID
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
protected section.

  aliases GC_EDOC_PARTY_TYPE_UBL
    for IF_EDOC_MAP_UBL~GC_EDOC_PARTY_TYPE .
  aliases GC_FIXED_VALUE_LIST_UBL
    for IF_EDOC_MAP_UBL~GC_FIXED_VALUE_LIST .
  aliases GC_ONETIME_CPD_TEXTID
    for IF_EDOC_MAP_UBL~GC_ONETIME_CPD_TEXTID .
  aliases GC_ONETIME_KVK_TEXTID
    for IF_EDOC_MAP_UBL~GC_ONETIME_KVK_TEXTID .
  aliases GC_ONETIME_OIN_TEXTID
    for IF_EDOC_MAP_UBL~GC_ONETIME_OIN_TEXTID .
  aliases GC_VALUE_MAP_UBL
    for IF_EDOC_MAP_UBL~GC_VALUE_MAP .

  types:
    BEGIN OF ty_bu_idnumber,
      idnumber        TYPE bu_id_number,
      valid_date_from TYPE bu_id_valid_date_from,
    END OF ty_bu_idnumber .
  types:
    tt_bu_idnumber TYPE STANDARD TABLE OF ty_bu_idnumber .
  types:
    BEGIN OF ty_payee_account,
      iban       TYPE iban,
      banka      TYPE banka,
      banks      TYPE banks,"3259089
      brnch      TYPE brnch,
      swift      TYPE swift,
      waers      TYPE waers,
* DK rules - SF Begin
      bankn      TYPE bankn35,
      bankl      TYPE bankk,
      hktid      TYPE hktid,
* DK rules - SF End
      paym_means TYPE edoc_eu_paym_means,                   "2905102
    END OF ty_payee_account .
  types:
    BEGIN OF ty_pay_means,
      paym_means TYPE edoc_eu_paym_means,
    END OF ty_pay_means .
  types:
    tt_payee_account TYPE STANDARD TABLE OF ty_payee_account .
  types:
    tt_pay_means TYPE STANDARD TABLE OF ty_pay_means .
  types:
    BEGIN OF ty_s_group,
           mwsk1 TYPE mwskz,
           kschl TYPE kscha,
           krech TYPE krech,
           kawrt TYPE kawrt,
           kbetr TYPE kbetr,
           kwert TYPE kwert,
         END OF ty_s_group .
  types:
    tt_group TYPE STANDARD TABLE OF ty_s_group WITH NON-UNIQUE DEFAULT KEY .
  types:
    ty_v_subtotal TYPE p LENGTH 16 DECIMALS 2 .

  class-data GO_EDOCUMENT_DB type ref to IF_EDOCUMENT_DB .
  constants MC_PARTY_VALIDITY_WARNING type I value 30 ##NO_TEXT.
  data MV_TAX_EXEMPT_CODE type C .
  constants MC_TAX_EXEMPT_CODE_O type C value 'O' ##NO_TEXT.
  constants MC_ATGOV_ID_TEST type CHAR20 value 'AT_ATGOV_TEST_ID' ##NO_TEXT.
  data MS_PARTY_RECEIVER type TY_PARTY .
  data MS_PARTY_SENDER type TY_PARTY .
  data MV_CURRENCY_CODE_ID type STRING .
  data MV_CUSTOMIZATION_ID type STRING .
  data MV_TYPE_VERSION_ID type STRING .
  data MV_SBDH_VERSION_ID type STRING .
  constants MC_CUSTOMIZATION_ID_BIS3 type STRING value 'urn:cen.eu:en16931:2017' ##NO_TEXT.
  constants MC_VAT_TEXT type STRING value 'VAT' ##NO_TEXT.
  data MV_RESUBMIT type BOOLEAN .
  constants:
    BEGIN OF mc_payment_code,
      in_cash           TYPE string VALUE '10',
      credit_transfer   TYPE string VALUE '30',
      debit_transfer    TYPE string VALUE '31',
      pmnt_to_bank_acc  TYPE string VALUE '42',
      direct_debit      TYPE string VALUE '49',
      postgiro          TYPE string VALUE '50',
      bankgiro          TYPE string VALUE '56',
      sepa_credit_trans TYPE string VALUE '58',
      sepa_direct_debit TYPE string VALUE '59',
      reference_giro    TYPE string VALUE '93',
    END OF mc_payment_code .
  constants:
    BEGIN OF mc_paym_means,
      credit_transfer   TYPE string VALUE '0',
      bankgiro          TYPE string VALUE '1',
      postgiro          TYPE string VALUE '2',
    END OF mc_paym_means .
  constants GC_EDOC_MAP_UBL type STRING value 'CL_EDOC_MAP_UBL' ##NO_TEXT.
  data MO_EDOC_MAP_UBL type ref to CL_EDOC_MAP_UBL .
  data MV_PROCESS_ID type STRING .
  data MV_PARTNER_ID type EDOC_PARTNER_ID .
  data MV_PARTNER_TYPE type EDOC_PARTNER_TYPE .
  data MV_DOC_CATEG type EDOC_EU_DOC_CATEGORY .
  data MV_DOC_ID_STANDARD type STRING .
  data MV_DOC_ID_TYPE type STRING .
  data MV_DOC_TYPE type EDOC_EU_DOC_TYPE .
  data MS_SEPA_MANDATE type SEPA_STR_DATA_MANDATE_DATA .
  data:
    mt_no_exc_reason_tax_cat TYPE RANGE OF string .
  data MT_ITEM_NUMBER type IF_EDOC_EU_CLOUD_DATATYPES=>MTY_ITEM_NUMBER_T .
  data MT_HEADER_ITEM_TEXTS type IF_EDOC_EU_CLOUD_DATATYPES=>MTY_HEADER_ITEM_TEXT_T .
  constants MC_LIMIT_ATTACHMENTS_SIZE type INT4 value 15728640 ##NO_TEXT.
  constants MC_ATGOV_ID_PROD type CHAR20 value 'AT_ATGOV_PROD_ID' ##NO_TEXT.
  data:
    mt_value_map_multiple TYPE TABLE OF ty_value_map_multiple .
  data MV_ROUNDING_ACTIVE type BOOLE_D .
  data MV_IS_SELF_BILLING type ABAP_BOOL value ABAP_FALSE ##NO_TEXT.
  class-data GO_EDOC_UTIL_EU type ref to CL_EDOC_UTIL_EU .
  class-data GO_EDOC_UTIL_GLOBAL type ref to CL_EDOC_UTIL .
  data MV_IS_CPD type BOOLE_D .

  methods GET_SYSTEM_ROLE
    returning
      value(RV_SYSTEM_ROLE) type CCCATEGORY
    raising
      CX_EDOCUMENT .
  methods READ_CORP
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods FILL_ALLOWANCE_CHARGE2
    importing
      !IT_SOURCE_CHARGE type EDO_UBL_ALLOWANCE_CHARGE_TAB
    changing
      !CT_TARGET_CHARGE type EDO_UBL_PINT10_ALLOWANCE_C_TAB .
  methods FILL_DELIVERY2
    importing
      !IS_SOURCE_DELIVERY type EDO_UBL_DELIVERY
    changing
      !CS_TARGET_DELIVERY type EDO_UBL_PINT10_DELIVERY .
  methods FILL_ADDRESS2
    importing
      !IS_SOURCE_ADDRESS type EDO_UBL_POSTAL_ADDRESS
    changing
      !CS_TARGET_ADDRESS type EDO_UBL_PINT10_POSTAL_ADDRESS .
  methods FILL_PARTY2
    importing
      !IS_SOURCE_PARTY type EDO_UBL_PARTY
    changing
      !CS_TARGET_PARTY type EDO_UBL_PINT10_PARTY .
  methods CHECK_PARTNERS
    changing
      !CT_ERROR_MESSAGES type BAPIRET2_T .
  methods CHECK_PARTY_ID_TYPE_VALIDITY
    importing
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
      !IV_WARNING_MSG_ID type SYMSGNO
      !IV_ERROR_MSG_ID type SYMSGNO
    changing
      !CT_ERROR_MESSAGES type BAPIRET2_T .
  methods REMOVE_VAT_TAX_IDS
    changing
      !CS_ACCOUNTING_SUPPLIER_PARTY type EDO_UBL_ACCOUNTING_SUPPLIER_PA
      !CS_ACCOUNTING_CUSTOMER_PARTY type EDO_UBL_ACCOUNTING_CUSTOMER_PA
      !CS_TAX_REPRESENTATIVE_PARTY type EDO_UBL_TAX_REPRESENTATIVE_PAR .
  methods INIT_HEADER_ITEM_TEXTS
    raising
      CX_EDOCUMENT .
  methods CALL_CLOUD_BADI_CR_NOTE
    changing
      !CS_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods CALL_CLOUD_BADI_INVOICE
    changing
      !CS_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods CHECK_DELIVERY
    importing
      !IS_DELIVERY type EDO_UBL_DELIVERY1
      !IT_TAXTOTAL type EDO_UBL_TAX_TOTAL_TAB1
    changing
      !CT_ERROR_MESSAGES type BAPIRET2_T
    exceptions
      CX_EDOCUMENT .
  methods GET_DELIVERY_DATE_FOR_CR_NOTE
    importing
      !IS_VBRP type VBRP
    exporting
      !EV_LFDAT type LFDAT .
  methods GET_COUNTRY_FOR_PARTNER
    importing
      !IV_PARTNER type BU_PARTNER
    exporting
      !EV_COUNTRY type LAND1
    raising
      CX_EDOCUMENT .
  methods READ_VAT_NUMBER_FOR_PARTNER
    importing
      !IV_PARTNER type BU_PARTNER
    exporting
      !EV_TAXNUM type BPTAXNUM
    raising
      CX_EDOCUMENT .
  methods READ_CBE_FOR_PARTNER
    importing
      !IV_PARTNER type BU_PARTNER
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_ORGNR_FOR_PARTNER
    importing
      !IV_PARTNER type BU_PARTNER
      !IV_LEGAL_PARTY_ID type BOOLE_D optional
      !IV_COUNTRY type LAND1_GP optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_TAX_NUMBER_FOR_PARTNER
    importing
      !IV_PARTNER type BU_PARTNER
      !IV_TAX_TYPE type BPTAXTYPE
      !IV_LEGAL_PARTY_ID type BOOLE_D optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods IS_PAYMENT_MEANS_REQUIRED
    returning
      value(RV_VALUE) type ABAP_BOOL .
  methods MAP_GENERIC_WEBSERV_RESPONSE
    importing
      !IS_SOURCE type ANY
    exporting
      !ES_TARGET type ANY
    raising
      CX_EDOCUMENT .
  methods GET_PARTNER_FOR_CUSTOMER
    importing
      !IV_KUNNR type KUNNR
    exporting
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods GET_PARTNER_FOR_SUPPLIER
    importing
      !IV_LIFNR type LIFNR
    exporting
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods CREATE_EDOCUMENT_EU_DB
    returning
      value(RO_EDOCUMENT_DB_EU) type ref to IF_EDOCUMENT_EU_DB .
  methods FILL_PARTY_TAX_SCHEME
    importing
      !IV_STCEG type STCEG optional
      !IV_BPTAXNUM type BPTAXNUMXL optional
      !IV_LAND type LAND1
      !IV_BUKRS type BUKRS optional
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
    returning
      value(RT_PARTY_TAX_SCHEME) type EDO_UBL_PARTY_TAX_SCHEME_TAB .
  methods FILL_PARTY_LEGAL_ENTITY
    importing
      !IV_REGISTRATION_NAME type STRING
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
      !IV_PARTY_CODE_TYPE type EDOC_PARTY_CODE_TYPE
    returning
      value(RS_PARTY_LEGAL_ENTITY) type EDO_UBL_PARTY_LEGAL_ENTITY .
  methods GET_MODE_SETTING_UBL
    returning
      value(RV_MODE) type CHAR1 .
  methods COPY_ATTRIBUTES
    importing
      !IO_EDOC_MAP_UBL type ref to CL_EDOC_MAP_UBL .
  methods FILL_ADDRESS
    importing
      !IS_ADRC type ADRC
    returning
      value(RS_ADDRESS) type EDO_UBL_POSTAL_ADDRESS .
  methods FILL_ALLOWANCE_CHARGE
    importing
      !RS_TAX_TOTAL type EDO_UBL_TAX_TOTAL_TAB optional
    returning
      value(RT_ALLOWANCE_CHARGE) type EDO_UBL_ALLOWANCE_CHARGE_TAB .
  methods FILL_CUSTOMER_PARTY
    returning
      value(RS_CUST_PARTY) type EDO_UBL_ACCOUNTING_CUSTOMER_PA .
  methods FILL_CUSTOMER_PARTY_BY_COMPANY
    returning
      value(RS_CUST_PARTY) type EDO_UBL_ACCOUNTING_CUSTOMER_PA .
  methods FILL_CREDIT_NOTE
    returning
      value(RS_TARGET) type EDO_UBL_CREDIT_NOTE .
  methods GET_PARTY_WITH_PARAM_TYPE
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARAM_TYPE type PARTY
    exporting
      !EV_BUKRS type BUKRS
      !EV_KUNNR type KUNNR
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods DETERMINE_IDNUMBER_BY_TYPE
    importing
      !IV_PARTNER type BU_PARTNER
      !IV_TYPE type BU_ID_TYPE
    exporting
      !EV_IDNUMBER type BU_ID_NUMBER
    raising
      CX_EDOCUMENT .
  methods FILL_DCS_REQUEST
    returning
      value(RS_DCS_REQUEST) type DCS_SEND_REQUEST_TYPE1 .
  methods FILL_INVOICE
    returning
      value(RS_TARGET) type EDO_UBL_INVOICE .
  methods FILL_CREDIT_NOTE_LINE
    returning
      value(RT_CREDIT_NOTE_LINE) type EDO_UBL_CREDIT_NOTE_LINE_TAB .
  methods DETERMINE_TAXNUMBER_BY_TYPE
    importing
      !IV_PARTNER type BU_PARTNER
      !IV_TAXTYPE type BPTAXTYPE
    exporting
      !EV_TAXNUM type BPTAXNUM
    raising
      CX_EDOCUMENT .
  methods READ_ID_WITH_NOTE_AND_PARTY
    importing
      !IV_BUKRS type BUKRS optional
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_REMARK type AD_REMARK2 optional
      !IV_PARTY type PARTY optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods FILL_INVOICE_LINE
    importing
      !IV_EXCLUDE_ROUNDING_AMOUNT type ABAP_BOOL optional
    returning
      value(RT_INVOICE_LINE) type EDO_UBL_INVOICE_LINE_TAB .
  methods FILL_MONETARY_TOTAL
    returning
      value(RS_MONETARY_TOTAL) type EDO_UBL_LEGAL_MONETARY_TOTAL .
  methods FILL_PAYABLE_ROUNDING_AMOUNT
    returning
      value(RS_PAYABLE_ROUNDING_AMOUNT) type EDO_UBL_PAYABLE_ROUNDING_AMOU1 .
  methods FILL_TAX_EXCLUSIVE_AMOUNT
    importing
      !IV_EXCLUDE_ROUNDING_AMOUNT type ABAP_BOOL optional
    returning
      value(RS_TAX_EXCLUSIVE_AMOUNT) type EDO_UBL_TAX_EXCLUSIVE_AMOUNT .
  methods FILL_LINE_EXTENSION_AMOUNT
    importing
      !IV_EXCLUDE_ROUNDING_AMOUNT type ABAP_BOOL optional
    returning
      value(RS_LINE_EXTENSION_AMOUNT) type EDO_UBL_LINE_EXTENSION_AMOUNT1 .
  methods FILL_NOTE
    returning
      value(RS_NOTE) type EDO_UBL_NOTE .
  methods FILL_ORDER_REFERENCE
    returning
      value(RS_ORDER_REFERENCE) type EDO_UBL_ORDER_REFERENCE .
  methods FILL_PAYMENT_TERMS
    returning
      value(RT_PAYMENT_TERMS) type EDO_UBL_PAYMENT_TERMS_TAB .
  methods GET_BLR_DOCUMENT_REFERENCE
    importing
      !IV_INVOICE_IN_SOURCE_FILE type XSTRING
    exporting
      !EV_DOCUMENT_REFERENCE type STRING
      !EV_DOCUMENT_TYPE_CODE type STRING .
  methods FILL_SBDH_BLR_SENDER
    importing
      !IV_INVOICE_IN_SOURCE_FILE type XSTRING
    returning
      value(RS_PARTNER) type EDO_UBL_PARTNER4 .
  methods FILL_BLR_RECV_PRTY_LEGAL_ENTIT
    importing
      !IV_INVOICE_IN_SOURCE_FILE type XSTRING
    returning
      value(RS_LEGAL_ENTITY) type EDO_UBL_PARTY_LEGAL_ENTITY4 .
  methods FILL_BLR_SNDR_PRTY_LEGAL_ENTIT
    importing
      !IV_INVOICE_IN_SOURCE_FILE type XSTRING
    returning
      value(RS_LEGAL_ENTITY) type EDO_UBL_PARTY_LEGAL_ENTITY4 .
  methods FILL_SBDH_BLR
    importing
      !IV_INVOICE_IN_SOURCE_FILE type XSTRING
    returning
      value(RS_TARGET) type EDO_UBL_STANDARD_BUSINESS_DO14 .
  methods FILL_SBDH
    importing
      !IV_DOC_CATEG type EDOC_EU_DOC_CATEGORY optional
    returning
      value(RS_TARGET) type EDO_UBL_STANDARD_BUSINESS_DOCUMEN1 .
  methods FILL_SUPPLIER_PARTY_BY_VENDOR
    returning
      value(RS_SUPP_PARTY) type EDO_UBL_ACCOUNTING_SUPPLIER_PA .
  methods FILL_SUPPLIER_PARTY
    returning
      value(RS_SUPP_PARTY) type EDO_UBL_ACCOUNTING_SUPPLIER_PA .
  methods FILL_DELIVERY_BY_COMPANY
    returning
      value(RS_EDO_UBL_DELIVERY) type EDO_UBL_DELIVERY .
  methods FILL_DELIVERY
    returning
      value(RS_EDO_UBL_DELIVERY) type EDO_UBL_DELIVERY .
  methods FILL_CREDIT_NOTE_DELIVERY
    returning
      value(RS_EDO_UBL_DELIVERY) type EDO_UBL_DELIVERY1 .
  methods FILL_TAX_TOTAL
    returning
      value(RS_TAX_TOTAL) type EDO_UBL_TAX_TOTAL_TAB .
  methods FILL_PAYMENT_MEANS
    returning
      value(RT_PAYMENT_MEANS) type EDO_UBL_PAYMENT_MEANS_TAB .
  methods GET_PARTY_ID_AND_TYPE
    importing
      !IV_PARTNER_ID type EDOC_PARTNER_ID optional
      !IV_BUKRS type BUKRS optional
      !IV_PARTNER_TYPE type EDOC_PARTNER_TYPE optional
      !IV_RETURN type BOOLE_D optional
      !IV_IS_CPD type BOOLE_D optional
    exporting
      !EV_PARTY type TY_PARTY .
  methods FILL_BILLING_REFERENCE
    returning
      value(RT_BILLING_REFERENCE) type EDO_UBL_BILLING_REFERENCE_TAB .
  methods GET_PARTNER_BY_PARTY_ID
    importing
      !IV_PARTY_ID type EDOC_PARTY_ID
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    exporting
      !EV_KUNNR type KUNNR
      !EV_BUKRS type BUKRS
      !EV_LIFNR type LIFNR
      !EV_PARTNER type BU_PARTNER
    raising
      CX_EDOCUMENT .
  methods READ_CHAMBER_OF_COMMERCE_NR
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods DETERMINE_ALL_BUPAS .
  methods FILL_BUYER_REFERENCE
    returning
      value(RV_BUYER_REFERENCE) type EDO_UBL_BUYER_REFERENCE
    raising
      CX_EDOCUMENT .
  methods READ_VAT_NUMBER
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_TAX_NUMBER2
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_SIRET_B2G
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_TAX_NUMBER1
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_TAX_NUMBER
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
      !IV_TAX_INDEX type CHAR1
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods FILL_DUE_DATE
    returning
      value(RV_DUE_DATE) type NETDT .
  methods FILL_ENDPOINT
    importing
      !IV_KUNNR type KUNNR optional
      !IV_BUKRS type BUKRS optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_LIFNR type LIFNR optional
    exporting
      !EV_ENDPOINT type STRING
      !EV_SCHEME_ID type STRING .
  methods READ_GLN_NZ
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_GLN
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_PEPPOL_ID
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_OIN
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_ORGNR
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
      !IV_LEGAL_PARTY_ID type BOOLE_D optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_ABN_UBL
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
      !IV_LEGAL_PARTY_ID type BOOLE_D optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_LEITWEG_ID
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_CBE
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods GET_NONTAX_IDTYPES
    importing
      !IV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
    returning
      value(RV_BU_ID_TYPE) type BU_ID_TYPE .
  methods GET_PARTNER_ID_AND_TYPE
    exporting
      !EV_PARTNER_ID type EDOC_PARTNER_ID
      !EV_PARTNER_TYPE type EDOC_PARTNER_TYPE .
  methods GET_CUSTOMIZATION_ID .
  methods GET_SEPA_MANDATE
    importing
      !IV_BUKRS type BUKRS
      !IV_KUNNR type KUNNR
    raising
      CX_EDOCUMENT .
  methods FILL_PARTY_IDENTIFICATION
    importing
      !IS_SEPA_MANDATE type SEPA_STR_DATA_MANDATE_DATA
    returning
      value(RT_PARTY_IDENTIFICATION) type EDO_UBL_PARTY_IDENTIFICATI_TAB .
  methods FILL_PAYMENT_MANDATE
    importing
      !IS_SEPA_MANDATE type SEPA_STR_DATA_MANDATE_DATA
    returning
      value(RS_PAYMENT_MANDATE) type EDO_UBL_PAYMENT_MANDATE .
  methods GET_BANK_INFO
    importing
      !IV_BUKRS type BUKRS
      !IV_PAY_MEANS type EDOC_EU_PAYM_MEANS optional
      !IV_HBKID type HBKID optional
      !IV_HKTID type HKTID optional
      !IV_PAYMENT_CODE type STRING optional
    exporting
      !ET_PAYEE_ACCOUNT type TT_PAYEE_ACCOUNT .
  methods GET_SUPPLIER_BANK_DET
    exporting
      !ET_PAYEE_ACCOUNT type TT_PAYEE_ACCOUNT .
  methods GET_BANK_INFO_CE
    importing
      !IV_BUKRS type BUKRS
      !IV_PAY_MEANS type EDOC_EU_PAYM_MEANS
      !IV_HBKID type HBKID optional
      !IV_HKTID type HKTID optional
    exporting
      !ET_PAYEE_ACCOUNT type TT_PAYEE_ACCOUNT .
  methods GET_BANK_INFO_OP
    importing
      !IV_BUKRS type BUKRS
      !IV_PAY_MEANS type EDOC_EU_PAYM_MEANS
      !IV_HBKID type HBKID optional
      !IV_HKTID type HKTID optional
    exporting
      !ET_PAYEE_ACCOUNT type TT_PAYEE_ACCOUNT .
  methods CHECK_ATTACHMENTS
    importing
      !IT_ATTACHMENTS type EDO_UBL_ADDITIONAL_DOCUMEN_TAB
    changing
      !CT_ERROR_MESSAGES type BAPIRET2_T .
  methods READ_ATGOV
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods GET_CUSTOMER_BANK_DET
    importing
      !IV_PAYMENT_LIST_ID type STRING optional
      !IV_PAYMENT_CODE type STRING
      !IV_KIDNO type KIDNO
      !IV_HBKID type HBKID optional
      !IV_HKTID type HKTID optional
    returning
      value(RT_PAYMENT_MEANS) type EDO_UBL_PAYMENT_MEANS_TAB .
  methods GET_PAYMENT_MEANS_CODE
    importing
      !IV_ZLSCH type SCHZW_BSEG
    returning
      value(RT_PAYMENT_MEANS_CODE) type STRING .
  methods FILL_ORDER_LINE_REF
    importing
      !IV_POSNR type POSNR_VF
    returning
      value(RS_ORDER_LINE_REFERENCE) type EDO_UBL_ORDER_LINE_REFERENCE .
  methods FILL_PAYEE_PARTY
    returning
      value(RS_PAYEE_PARTY) type EDO_UBL_PAYEE_PARTY
    raising
      CX_EDOCUMENT .
  methods GET_PARTNER_FUNCTION
    exporting
      !ES_CUST type VBPAVB
      !ES_CUST_CONTACT type VBPAVB
      !ES_PAYEE type VBPAVB .
  methods CHECK_SBD_HEADER
    importing
      !IS_SBD_HEADER type EDO_UBL_STANDARD_BUSINESS_DOC1
    changing
      !CT_ERROR_MESSAGES type BAPIRET2_T .
  methods GET_SELF_BILLING_INDICATOR .
  methods READ_UEN_UBL
    importing
      !IV_KUNNR type KUNNR optional
      !IV_LIFNR type LIFNR optional
      !IV_PARTNER type BU_PARTNER optional
      !IV_BUKRS type BUKRS optional
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods READ_CPD_PARTY_ID
    exporting
      !EV_PARTY_ID_TYPE type EDOC_PARTY_ID_TYPE
      !EV_PARTY_CODE_TYPE type EDOC_PARTY_CODE_TYPE
      !EV_PARTY_ID type EDOC_PARTY_ID
      !EV_EMAIL type AD_SMTPADR
    raising
      CX_EDOCUMENT .
  methods READ_KVK_OR_OIN_FOR_CPD
    importing
      !IV_TEXT_ID type TDID
    exporting
      !EV_PARTY_ID type EDOC_PARTY_ID
    raising
      CX_EDOCUMENT .
  methods CREATE_EDOCUMENT_DB
    returning
      value(RO_EDOCUMENT_DB) type ref to IF_EDOCUMENT_DB .
  methods FILL_SBDH_BLR_RECEIVER
    importing
      !IV_INVOICE_IN_SOURCE_FILE type XSTRING
    returning
      value(RS_PARTNER) type EDO_UBL_PARTNER4 .

  methods ADD_ERROR_MESSAGE
    redefinition .
  methods INIT_MAPPING
    redefinition .
private section.
ENDCLASS.



CLASS CL_EDOC_MAP_UBL IMPLEMENTATION.


  METHOD add_error_message. "Added with SAP Note 2805246
    super->add_error_message( ).

*   Update error messages in calling instance (needed for country level layer)
    IF mo_edoc_map_ubl IS BOUND.
      mo_edoc_map_ubl->mt_error_messages_aif = mt_error_messages_aif.
    ENDIF.
  ENDMETHOD.


  METHOD call_cloud_badi_cr_note.
    DATA:
      lo_cloud_eu          TYPE REF TO edoc_eu_xml_file_credit_note,
      lo_exception         TYPE REF TO cx_ble_runtime_error,
      ls_source_data       TYPE if_edoc_eu_cloud_datatypes=>mty_source_data_s,
      ls_xml_file_mod      TYPE edo_ubl_credit_note,
      ls_target            TYPE edo_ubl_credit_note,
      ls_item_number       TYPE if_edoc_eu_cloud_datatypes=>mty_item_number_s,
      lt_item_number       TYPE if_edoc_eu_cloud_datatypes=>mty_item_number_t,
      lt_header_item_texts TYPE if_edoc_eu_cloud_datatypes=>mty_header_item_text_t,
      ls_header_item_texts TYPE if_edoc_eu_cloud_datatypes=>mty_header_item_text_s.
    DATA ls_standard_business_document TYPE edo_ubl_standard_business_doc5.

    " Delete 3365100

    TRY.
        GET BADI lo_cloud_eu.
      CATCH cx_root.
        FREE lo_cloud_eu.
    ENDTRY.
    IF lo_cloud_eu IS NOT BOUND.
      RETURN.
    ENDIF.

*   Initialize table of header and item texts
    TRY.
        init_header_item_texts( ).
      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

* Fill Source Documents data
    ls_source_data-billing_header    = ms_source-vbrk.
    ls_source_data-billing_item      = ms_source-vbrp.
    ls_source_data-accounting_header = ms_source-bkpf.
    ls_source_data-accounting_item   = ms_source-bseg.
    ls_standard_business_document    = cs_target.
    ls_target                        = ls_standard_business_document-credit_note.
* Call BAdI Implementations
    TRY.
        CALL BADI lo_cloud_eu->fill_xml_file
          EXPORTING
            source_data       = ls_source_data
            xml_file          = ls_target
            header_item_texts = mt_header_item_texts
            item_number       = mt_item_number
          CHANGING
            xml_file_modified = ls_xml_file_mod.
      CATCH cx_ble_runtime_error INTO lo_exception.         " 3365100
        MESSAGE e000(edocument) WITH lo_exception->get_text( )
          INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
    ENDTRY.

* Move new content of XML file to the target structure
    IF ls_xml_file_mod IS NOT INITIAL.
      ls_standard_business_document-credit_note = ls_xml_file_mod.
      cs_target = ls_standard_business_document.
    ENDIF.

  ENDMETHOD.


  METHOD call_cloud_badi_invoice.

    DATA:
      lo_cloud_eu          TYPE REF TO edoc_eu_xml_file_invoice,
      lo_exception         TYPE REF TO cx_ble_runtime_error,
      ls_source_data       TYPE if_edoc_eu_cloud_datatypes=>mty_source_data_s,
      ls_xml_file_mod      TYPE edo_ubl_invoice,
      ls_target            TYPE edo_ubl_invoice,
      ls_item_number       TYPE if_edoc_eu_cloud_datatypes=>mty_item_number_s,
      lt_item_number       TYPE if_edoc_eu_cloud_datatypes=>mty_item_number_t,
      lt_header_item_texts TYPE if_edoc_eu_cloud_datatypes=>mty_header_item_text_t,
      ls_header_item_texts TYPE if_edoc_eu_cloud_datatypes=>mty_header_item_text_s.
    DATA ls_standard_business_document TYPE edo_ubl_standard_business_doc2.

    " Delete 3365100

    TRY.
        GET BADI lo_cloud_eu.
      CATCH cx_root.
        FREE lo_cloud_eu.
    ENDTRY.
    IF lo_cloud_eu IS NOT BOUND.
      RETURN.
    ENDIF.

*   Initialize table of header and item texts
    TRY.
        init_header_item_texts( ).
      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

* Fill Source Documents data
    ls_source_data-billing_header    = ms_source-vbrk.
    ls_source_data-billing_item      = ms_source-vbrp.
    ls_source_data-accounting_header = ms_source-bkpf.
    ls_source_data-accounting_item   = ms_source-bseg.
    ls_standard_business_document    = cs_target.
    ls_target                        = ls_standard_business_document-invoice.
* Call BAdI Implementations

    TRY.
        CALL BADI lo_cloud_eu->fill_xml_file
          EXPORTING
            source_data       = ls_source_data
            xml_file          = ls_target
            header_item_texts = mt_header_item_texts
            item_number       = mt_item_number
          CHANGING
            xml_file_modified = ls_xml_file_mod.
      CATCH cx_ble_runtime_error INTO lo_exception.         " 3365100
        MESSAGE e000(edocument) WITH lo_exception->get_text( )
      INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
    ENDTRY.

* Move new content of XML file to the target structure
    IF ls_xml_file_mod IS NOT INITIAL.
      ls_standard_business_document-invoice = ls_xml_file_mod.
      cs_target = ls_standard_business_document.
    ENDIF.

  ENDMETHOD.


  METHOD check_attachments." Add in 2905102

    DATA:
          ls_attachments   LIKE LINE OF it_attachments,
          lv_total_size    TYPE i,
          ls_error_message TYPE bapiret2.

    LOOP AT it_attachments INTO ls_attachments.
      lv_total_size = lv_total_size + xstrlen( ls_attachments-attachment-embedded_document_binary_objec-base-content ).
    ENDLOOP.

    IF lv_total_size > mc_limit_attachments_size.
     MESSAGE e076(edocument_eu) INTO cl_edocument=>gv_error_txt.
     ls_error_message = convert_error_message( ).
     APPEND ls_error_message TO ct_error_messages.
    ENDIF.

  ENDMETHOD.


  METHOD check_cr_note1.                                    "Added with SAP Note 2871404

* Check Note after BAdI
    DATA: ls_out_struct       TYPE edo_ubl_standard_business_doc5,
          ls_credit_note_line TYPE edo_ubl_credit_note_line,
          ls_error_message    TYPE bapiret2,
          lt_attachments      TYPE edo_ubl_additional_documen_tab, "2905102
          ls_doc_ref          LIKE LINE OF ls_out_struct-credit_note-additional_document_reference, "2905102
          ls_attachments      LIKE LINE OF lt_attachments,  "2905102
          ls_sbd_header       TYPE edo_ubl_standard_business_doc1, "2968006
          ls_credit_note      TYPE edo_ubl_credit_note,     "2968006
          ls_tax_sub_total    TYPE edo_ubl_tax_subtotal,    "2968006
          lt_tax_exempt_codes TYPE TABLE OF edo_ubl_identifier_type-content, "2992171
          lv_tax_exempt_o_cnt TYPE i,                       "2992171
          ls_tax_total        TYPE edo_ubl_tax_total,       "2968006
          ls_rseg             TYPE rseg.                    "3042934

    ls_out_struct = is_out_struct.
    IF lines( ls_out_struct-credit_note-credit_note_line ) GT 0. "3289969
*  Tax Validation
      LOOP AT ls_out_struct-credit_note-credit_note_line INTO ls_credit_note_line.
        IF ls_credit_note_line-item-classified_tax_category-id-base-base-content IS INITIAL OR
           ls_credit_note_line-item-classified_tax_category-tax_scheme-id-base-base-content IS INITIAL.
          MESSAGE e058(edocument_eu)
            WITH ls_credit_note_line-id-base-base-content
            INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
*   Begin of Change 2992171
*   Handle Tax Exempt Code
        IF ls_credit_note_line-item-classified_tax_category-id-base-base-content =
            mc_tax_exempt_code_o.
*          Count Tax Exempt Code = O
          lv_tax_exempt_o_cnt = lv_tax_exempt_o_cnt + 1.
        ENDIF.
        COLLECT ls_credit_note_line-item-classified_tax_category-id-base-base-content
          INTO lt_tax_exempt_codes.
*   End of Change 2992171

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false AND                   "3210223
           ls_credit_note_line-item-classified_tax_category-id-base-base-scheme_id IS INITIAL. "2968006
          MESSAGE e098(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                  WITH ls_credit_note_line-id-base-base-content. "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

        IF ls_credit_note_line-credited_quantity-base-base-content IS INITIAL. "2968006
          MESSAGE e095(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                  WITH ls_credit_note_line-id-base-base-content. "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

        IF ls_credit_note_line-credited_quantity-base-base-unit_code IS INITIAL. "2968006
          MESSAGE e096(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                  WITH ls_credit_note_line-id-base-base-content. "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false AND             "3210223
           ls_credit_note_line-credited_quantity-base-base-unit_code_list_id IS INITIAL. "2968006
          MESSAGE e097(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                       WITH ls_credit_note_line-id-base-base-content. "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

        " @Del-3071425
        " Start of Change 3042934
        IF ls_credit_note_line-item-name-base-base-content IS INITIAL.
          CASE  ms_source-source_header-source_type.
            WHEN 'SD_INVOICE'.
              MESSAGE e020(edocument_eu)
                WITH ms_source-vbrk-vbeln ls_credit_note_line-id-base-base-content
                INTO cl_edocument=>gv_error_txt.
              ls_error_message = convert_error_message( ).
              APPEND ls_error_message TO et_error_messages.
            WHEN 'INV_VERIF'.
              CLEAR ls_rseg.
              LOOP AT ms_source-rseg INTO ls_rseg.
                IF ls_rseg-sgtxt IS INITIAL.
                  MESSAGE e020(edocument_eu)
                    WITH ls_rseg-belnr ls_rseg-buzei
                    INTO cl_edocument=>gv_error_txt.
                  ls_error_message = convert_error_message( ).
                  APPEND ls_error_message TO et_error_messages.
                ENDIF.
              ENDLOOP.
          ENDCASE.
        ENDIF.
        " End of Change 3042934
      ENDLOOP.
*   Begin of Change 2992171
      IF lv_tax_exempt_o_cnt > 0. "If the Tax Exempt Code = O
        "The count of Tax Exept Codes = O must be the same as total amount of lines
        IF lv_tax_exempt_o_cnt <> lines( ls_out_struct-credit_note-credit_note_line ).
          MESSAGE e100(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
*        There should be just only one Tax Exempt Code
        IF lines( lt_tax_exempt_codes ) > 1.
          MESSAGE e099(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
      ENDIF.
*   End of Change 2992171
    "Start of 3289969
    ELSE.
      MESSAGE e121(edocument_eu)  INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO et_error_messages.
    ENDIF.
    "End of 3289969
* For checking delivery structure                                      "Begin of 2905102
    check_delivery( EXPORTING is_delivery = ls_out_struct-credit_note-delivery
                              it_taxtotal = ls_out_struct-credit_note-tax_total
                    CHANGING  ct_error_messages = et_error_messages ). "End of 2905102

* Checks Attachment
    LOOP AT ls_out_struct-credit_note-additional_document_reference INTO ls_doc_ref. "2905102
      CLEAR ls_attachments.                                 "2905102
      MOVE-CORRESPONDING ls_doc_ref TO ls_attachments.      "2905102
      APPEND ls_attachments TO lt_attachments.              "2905102
    ENDLOOP.                                                "2905102
    check_attachments( EXPORTING it_attachments    = lt_attachments "2905102
                       CHANGING  ct_error_messages = et_error_messages ). "2905102

    " Begin of 2968006
    MOVE-CORRESPONDING ls_out_struct-standard_business_document_hea TO ls_sbd_header.
    check_sbd_header( EXPORTING is_sbd_header     = ls_sbd_header
                      CHANGING  ct_error_messages = et_error_messages ).

    ls_credit_note = ls_out_struct-credit_note.
    IF ls_credit_note-credit_note_type_code-base-base-content IS INITIAL.
      MESSAGE e094(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO et_error_messages.
    ENDIF.

    LOOP AT ls_credit_note-tax_total INTO ls_tax_total.
      LOOP AT ls_tax_total-tax_subtotal INTO ls_tax_sub_total.

        IF ls_tax_sub_total-tax_category-tax_scheme-id-base-base-content IS INITIAL.
          MESSAGE e088(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

        IF ls_tax_sub_total-tax_category-id-base-base-content IS INITIAL.
          MESSAGE e089(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false AND "3210223
           ls_tax_sub_total-tax_category-id-base-base-scheme_id IS INITIAL.

          MESSAGE e090(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

"       Begin of Change 3030901
        "Percent and Tax Exemption reason
        IF ( ls_tax_sub_total-tax_category-percent-base-base-content EQ '0.00' OR
              ls_tax_sub_total-tax_category-percent-base-base-content IS INITIAL )
          AND ls_tax_sub_total-tax_category-id-base-base-content NOT IN mt_no_exc_reason_tax_cat
          AND ls_tax_sub_total-tax_category-tax_scheme-id-base-base-content EQ mc_vat_text "3328617
          AND ls_tax_sub_total-tax_category-tax_exemption_reason_code-base-base-content IS INITIAL.
          MESSAGE e069(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
"       End of Change 3030901
      ENDLOOP.
    ENDLOOP.
    " End of 2968006


  ENDMETHOD.


  METHOD check_delivery.                                    "2905102
    DATA: lv_tax_ics       TYPE string,
          ls_error_message TYPE bapiret2,
          ls_taxtotal      TYPE edo_ubl_tax_total1,
          lt_tax_subtotal  TYPE edo_ubl_tax_subtotal_tab1,
          ls_tax_subtotal  TYPE edo_ubl_tax_subtotal1,
          lv_intracommu    TYPE abap_bool.

    lv_tax_ics = get_fix_value( iv_name        = 'TAX_EXEMPT_EEA_ICS'
                                iv_err_msg_ind = abap_false ).
    IF lv_tax_ics IS NOT INITIAL.
*     If it's intra-community and delivery is not filled error message should be triggered.
      LOOP AT it_taxtotal INTO ls_taxtotal.
        LOOP AT ls_taxtotal-tax_subtotal INTO ls_tax_subtotal.
          IF ls_tax_subtotal-tax_category-id-base-base-content = lv_tax_ics.
            lv_intracommu = abap_true.
            EXIT.
          ENDIF.
        ENDLOOP.
        IF lv_intracommu = abap_true.
          EXIT.
        ENDIF.
      ENDLOOP.
      IF lv_intracommu IS NOT INITIAL AND is_delivery IS INITIAL.
        MESSAGE e074(edocument_eu) INTO cl_edocument=>gv_error_txt.
        ls_error_message = convert_error_message( ).
        APPEND ls_error_message TO ct_error_messages.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD check_invoice1.                                    "Added with SAP Note 2871404

* Check Invoice after BAdI
    DATA: lo_edoc_db                   TYPE REF TO cl_edocument_db,
          ls_edocument                 TYPE edocument,
          ls_out_struct                TYPE edo_ubl_standard_business_doc2,
          ls_error_message             TYPE bapiret2,
          ls_invoice_line              TYPE edo_ubl_invoice_line,
          ls_delivery                  TYPE edo_ubl_delivery1, "2905102
          lt_attachments               TYPE edo_ubl_additional_documen_tab, "2905102
          ls_attachments               LIKE LINE OF lt_attachments, "2905102
          ls_doc_ref                   LIKE LINE OF ls_out_struct-invoice-additional_document_reference, "2905102
          ls_sbd_header                TYPE edo_ubl_standard_business_doc1, "2968006
          ls_invoice                   TYPE edo_ubl_invoice, "2968006
          ls_accounting_supplier_party TYPE edo_ubl_accounting_supplier_pa, "2968006
          ls_party_identification      TYPE edo_ubl_party_identification, "2968006
          ls_tax_sub_total             TYPE edo_ubl_tax_subtotal, "2968006
          ls_tax_total                 TYPE edo_ubl_tax_total, "2968006
          lt_tax_exempt_codes          TYPE TABLE OF edo_ubl_identifier_type-content, "2992171
          lv_tax_exempt_o_cnt          TYPE i,              "2992171
          ls_allowance_charge          TYPE edo_ubl_allowance_charge, "2968006
          ls_rseg                      TYPE rseg.           " 3042934

    ls_out_struct = is_out_struct.

    IF ms_source-reference-edoc_guid IS NOT INITIAL.
* Determine the eDocument line in order to get the eDoc type
      CREATE OBJECT lo_edoc_db.
      ls_edocument = lo_edoc_db->if_edocument_db~select_edocument( iv_edoc_guid = ms_source-reference-edoc_guid ).
* Buyer Reference and Order Reference Validation - Should only occur for FI
      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id )     "3210223
        AND ls_out_struct-invoice-buyer_reference-base-base-content IS INITIAL
        AND ls_out_struct-invoice-order_reference-id-base-base-content IS INITIAL.
        IF ls_edocument-edoc_type(2) = 'EU'.
          MESSAGE e043(edocument_eu) INTO cl_edocument=>gv_error_txt.
        ELSE.
          MESSAGE e024(edocument_eu) INTO cl_edocument=>gv_error_txt.
        ENDIF.
        ls_error_message = convert_error_message( ).
        APPEND ls_error_message TO et_error_messages.
      ENDIF.
    ENDIF.

* Tax Validation and quantity

    IF lines( ls_out_struct-invoice-invoice_line ) GT 0. "3289969
      LOOP AT ls_out_struct-invoice-invoice_line INTO ls_invoice_line.
        IF ls_invoice_line-item-classified_tax_category-id-base-base-content IS INITIAL OR
           ls_invoice_line-item-classified_tax_category-tax_scheme-id-base-base-content IS INITIAL.
          MESSAGE e058(edocument_eu)
            WITH ls_invoice_line-id-base-base-content
            INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

        IF ls_invoice_line-invoiced_quantity-base-base-content IS INITIAL. "2968006
          MESSAGE e085(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                  WITH ls_invoice_line-id-base-base-content.  "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

        IF ls_invoice_line-invoiced_quantity-base-base-unit_code IS INITIAL. "2968006
          MESSAGE e086(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                  WITH ls_invoice_line-id-base-base-content.  "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false AND "3210223
           ls_invoice_line-invoiced_quantity-base-base-unit_code_list_id IS INITIAL. "2968006
          MESSAGE e087(edocument_eu) INTO cl_edocument=>gv_error_txt "2968006
                  WITH ls_invoice_line-id-base-base-content.  "2968006
          ls_error_message = convert_error_message( ).        "2968006
          APPEND ls_error_message TO et_error_messages.       "2968006
        ENDIF.                                                "2968006

*   Begin of Change 2992171
*   Handle Tax Exempt Code
        IF ls_invoice_line-item-classified_tax_category-id-base-base-content =
            mc_tax_exempt_code_o.
*          Count Tax Exempt Code = O
          lv_tax_exempt_o_cnt = lv_tax_exempt_o_cnt + 1.
        ENDIF.
        COLLECT ls_invoice_line-item-classified_tax_category-id-base-base-content
          INTO lt_tax_exempt_codes.
*   End of Change 2992171
        " @Del-3071425

        " Start of Change 3042934
        IF ls_invoice_line-item-name-base-base-content IS INITIAL.
          CASE  ms_source-source_header-source_type.
            WHEN 'SD_INVOICE'.
              MESSAGE e020(edocument_eu)
                WITH ms_source-vbrk-vbeln ls_invoice_line-id-base-base-content
                INTO cl_edocument=>gv_error_txt.
              ls_error_message = convert_error_message( ).
              APPEND ls_error_message TO et_error_messages.
            WHEN 'INV_VERIF'.
              CLEAR ls_rseg.
              LOOP AT ms_source-rseg INTO ls_rseg.
                IF ls_rseg-sgtxt IS INITIAL.
                  MESSAGE e020(edocument_eu)
                    WITH ls_rseg-belnr ls_rseg-buzei
                    INTO cl_edocument=>gv_error_txt.
                  ls_error_message = convert_error_message( ).
                  APPEND ls_error_message TO et_error_messages.
                ENDIF.
              ENDLOOP.
          ENDCASE.
        ENDIF.
        " End of Change 3042934
      ENDLOOP.
*   Begin of Change 2992171
      IF lv_tax_exempt_o_cnt > 0. "If the Tax Exempt Code = O
        "The count of Tax Exept Codes = O must be the same as total amount of lines
        IF lv_tax_exempt_o_cnt <> lines( ls_out_struct-invoice-invoice_line ).
          MESSAGE e100(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
*        There should be just only one Tax Exempt Code
        IF lines( lt_tax_exempt_codes ) > 1.
          MESSAGE e099(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
      ENDIF.
*   End of Change 2992171
    "Start of 3289969
    ELSE.
      MESSAGE e121(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO et_error_messages.
    ENDIF.
    "End of 3289969
* For checking Delivery structure                                      "Begin of 2905102
    MOVE-CORRESPONDING ls_out_struct-invoice-delivery TO ls_delivery.
    check_delivery( EXPORTING is_delivery = ls_delivery
                              it_taxtotal = ls_out_struct-invoice-tax_total
                    CHANGING  ct_error_messages = et_error_messages ). "End of 2905102

* Checks Attachment
    LOOP AT ls_out_struct-invoice-additional_document_reference INTO ls_doc_ref. "2905102
      CLEAR ls_attachments.                                 "2905102
      MOVE-CORRESPONDING ls_doc_ref TO ls_attachments.      "2905102
      APPEND ls_attachments TO lt_attachments.              "2905102
    ENDLOOP.                                                "2905102
    check_attachments( EXPORTING it_attachments    = lt_attachments "2905102
                       CHANGING  ct_error_messages = et_error_messages ). "2905102

    " Begin of 2968006
    ls_sbd_header = ls_out_struct-standard_business_document_hea.
    check_sbd_header( EXPORTING is_sbd_header     = ls_sbd_header
                      CHANGING  ct_error_messages = et_error_messages ).

    ls_invoice = ls_out_struct-invoice.
    IF ls_invoice-invoice_type_code-base-base-content IS INITIAL.
      MESSAGE e082(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO et_error_messages.
    ENDIF.

    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false AND "3210223
       ls_invoice-invoice_type_code-base-base-list_id IS INITIAL.
      MESSAGE e083(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO et_error_messages.
    ENDIF.

    LOOP AT ls_invoice-tax_total INTO ls_tax_total.
      LOOP AT ls_tax_total-tax_subtotal INTO ls_tax_sub_total.

        IF ls_tax_sub_total-tax_category-tax_scheme-id-base-base-content IS INITIAL.
          MESSAGE e088(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

        IF ls_tax_sub_total-tax_category-id-base-base-content IS INITIAL.
          MESSAGE e089(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false AND "3210223
           ls_tax_sub_total-tax_category-id-base-base-scheme_id IS INITIAL.
          MESSAGE e090(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.

        "       Begin of Change 3030901
        "Percent and Tax Exemption reason
        IF ( ls_tax_sub_total-tax_category-percent-base-base-content EQ '0.00' OR
              ls_tax_sub_total-tax_category-percent-base-base-content IS INITIAL )
          AND ls_tax_sub_total-tax_category-id-base-base-content NOT IN mt_no_exc_reason_tax_cat
          AND ls_tax_sub_total-tax_category-tax_scheme-id-base-base-content EQ mc_vat_text "3328617
          AND ls_tax_sub_total-tax_category-tax_exemption_reason_code-base-base-content IS INITIAL.
          MESSAGE e069(edocument_eu) INTO cl_edocument=>gv_error_txt.
          ls_error_message = convert_error_message( ).
          APPEND ls_error_message TO et_error_messages.
        ENDIF.
        "       End of Change 3030901
      ENDLOOP.
    ENDLOOP.

    " End of 2968006

  ENDMETHOD.


  METHOD check_partners.                                    "3109533

    check_party_id_type_validity( EXPORTING iv_error_msg_id = '116'
                                            iv_warning_msg_id = '117'
                                            iv_party_id_type = ms_party_sender-party_id_type
                                  CHANGING  ct_error_messages = ct_error_messages ).

    check_party_id_type_validity( EXPORTING iv_error_msg_id = '118'
                                            iv_warning_msg_id = '119'
                                            iv_party_id_type = ms_party_receiver-party_id_type
                                  CHANGING  ct_error_messages = ct_error_messages ).


  ENDMETHOD.


  METHOD check_party_id_type_validity.
    DATA: lo_edoc_eu_db    TYPE REF TO cl_edocument_eu_db,
          ls_error_message TYPE bapiret2,
          ls_edoeuparty    TYPE edoeuparty,
          lv_days(2)       TYPE c.

    CREATE OBJECT lo_edoc_eu_db.
    TEST-SEAM check_parners_01.
      ls_edoeuparty = lo_edoc_eu_db->if_edocument_eu_db~select_edoeuparty( iv_party_id_type = iv_party_id_type ).
    END-TEST-SEAM.

    IF ls_edoeuparty-valid_to IS NOT INITIAL.
      IF ls_edoeuparty-valid_to < sy-datum.
* Party Identification Type is not valid any more
        MESSAGE ID 'EDOCUMENT_EU' TYPE 'E' NUMBER iv_error_msg_id
          INTO cl_edocument=>gv_error_txt.
        ls_error_message = convert_error_message( ).
        APPEND ls_error_message TO ct_error_messages.
      ELSEIF ( ls_edoeuparty-valid_to - sy-datum ) < mc_party_validity_warning.
* Party Identification Type will soon become obsolete
        lv_days = ls_edoeuparty-valid_to - sy-datum.
        MESSAGE ID 'EDOCUMENT_EU' TYPE 'W' NUMBER iv_warning_msg_id
          WITH ms_party_receiver-party_id_type
               lv_days
          INTO cl_edocument=>gv_error_txt.
        ls_error_message = convert_error_message( ).
        APPEND ls_error_message TO ct_error_messages.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD check_sbd_header.                                  "2968006

    DATA:
      ls_error_message TYPE bapiret2,
      ls_partner       TYPE edo_ubl_partner,
      ls_scope         TYPE edo_ubl_scope,
      lv_count         TYPE i.

    IF is_sbd_header-header_version IS INITIAL.
      MESSAGE e078(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO ct_error_messages.
    ENDIF.

    READ TABLE is_sbd_header-sender INTO ls_partner INDEX 1.
    IF sy-subrc IS INITIAL AND
       ls_partner-identifier-authority IS INITIAL.

      MESSAGE e079(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO ct_error_messages.

    ENDIF.

    READ TABLE is_sbd_header-receiver INTO ls_partner INDEX 1.
    IF sy-subrc IS INITIAL AND
       ls_partner-identifier-authority IS INITIAL.

      MESSAGE e080(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO ct_error_messages.
    ENDIF.

    check_partners( CHANGING ct_error_messages = ct_error_messages ). "3109533

    LOOP AT is_sbd_header-business_scope-scope INTO ls_scope.
      IF ls_scope-type IS INITIAL.

        MESSAGE e081(edocument_eu) INTO cl_edocument=>gv_error_txt.
        ls_error_message = convert_error_message( ).
        APPEND ls_error_message TO ct_error_messages.

      ENDIF.
    ENDLOOP.

    DESCRIBE TABLE is_sbd_header-business_scope-scope LINES lv_count.
    IF lv_count < 2.
      MESSAGE e091(edocument_eu) INTO cl_edocument=>gv_error_txt.
      ls_error_message = convert_error_message( ).
      APPEND ls_error_message TO ct_error_messages.
    ENDIF.

  ENDMETHOD.                                                "2968006


  METHOD class_constructor.   "Added with 3030901

    CREATE OBJECT go_edoc_util_eu.

    CREATE OBJECT go_edocument_db TYPE cl_edocument_db. "3109533

  ENDMETHOD.


  METHOD constructor.

    super->constructor( iv_ns = iv_ns ).

    copy_attributes( io_edoc_map_ubl = io_edoc_map_ubl ).
    init_value_map_multiple( ).                             "2968006
    CREATE OBJECT go_edoc_util_global TYPE cl_edoc_util.

  ENDMETHOD.


  METHOD copy_attributes.

    IF io_edoc_map_ubl IS BOUND.
*     Save calling instance in case attributes need to be updated (write access) "2805246
      mo_edoc_map_ubl       = io_edoc_map_ubl.              "2805246

*     Copy attributes from calling instance to this instance (read access)       "2805246
      ms_source             = io_edoc_map_ubl->ms_source.
      ms_adrc_bukrs         = io_edoc_map_ubl->ms_adrc_bukrs.
      ms_adrc_cust          = io_edoc_map_ubl->ms_adrc_cust.
      ms_adrc_vend          = io_edoc_map_ubl->ms_adrc_vend.
      ms_kna1               = io_edoc_map_ubl->ms_kna1.
      ms_party_receiver     = io_edoc_map_ubl->ms_party_receiver.
      ms_party_sender       = io_edoc_map_ubl->ms_party_sender.
      ms_t001               = io_edoc_map_ubl->ms_t001.
      ms_vendor             = io_edoc_map_ubl->ms_vendor.
      mt_error_messages_aif = io_edoc_map_ubl->mt_error_messages_aif.
      mt_fix_value          = io_edoc_map_ubl->mt_fix_value.
      mt_fix_value_list     = io_edoc_map_ubl->mt_fix_value_list.
      mt_t001z              = io_edoc_map_ubl->mt_t001z.
      mt_value_mapping      = io_edoc_map_ubl->mt_value_mapping.
      mv_bukrs              = io_edoc_map_ubl->mv_bukrs.
      mv_currency_code_id   = io_edoc_map_ubl->mv_currency_code_id.
      mv_customization_id   = io_edoc_map_ubl->mv_customization_id.
      mv_ns                 = io_edoc_map_ubl->mv_ns.
      mv_resubmit           = io_edoc_map_ubl->mv_resubmit.
      mv_type_version_id    = io_edoc_map_ubl->mv_type_version_id.
      mv_waers              = io_edoc_map_ubl->mv_waers.
      mv_process_id         = io_edoc_map_ubl->mv_process_id.
      mv_partner_id         = io_edoc_map_ubl->mv_partner_id.
      mv_partner_type       = io_edoc_map_ubl->mv_partner_type.
      mv_sbdh_version_id    = io_edoc_map_ubl->mv_sbdh_version_id. "2854416
      mv_doc_categ          = io_edoc_map_ubl->mv_doc_categ. "2885554
      mv_doc_id_standard    = io_edoc_map_ubl->mv_doc_id_standard. "2885554
      mv_doc_id_type        = io_edoc_map_ubl->mv_doc_id_type. "2885554
      mv_doc_type           = io_edoc_map_ubl->mv_doc_type. "2885554
      ms_sepa_mandate       = io_edoc_map_ubl->ms_sepa_mandate. "2888554
      mt_no_exc_reason_tax_cat = io_edoc_map_ubl->mt_no_exc_reason_tax_cat. "2885554
      mv_is_cpd             = io_edoc_map_ubl->mv_is_cpd."3071425
    ENDIF.

  ENDMETHOD.


  METHOD CREATE_EDOCUMENT_DB.
    CREATE OBJECT ro_edocument_db TYPE cl_edocument_db."note 3326386
  ENDMETHOD.


  METHOD CREATE_EDOCUMENT_EU_DB.
    CREATE OBJECT ro_edocument_db_eu TYPE cl_edocument_eu_db."note 3289969
  ENDMETHOD.


  METHOD determine_all_bupas.
* Determine all business partners for whom data is stored in the XML
    DATA: ls_edoc_bupa  TYPE edoc_bupa,
          lt_edoc_bupa  TYPE edoc_bupa_tab,
          lv_is_blocked TYPE abap_bool.

    CASE ms_source-source_header-source_type.
      WHEN cl_edoc_source_fi_invoice=>gc_src_fi_invoice OR
           cl_edoc_source_sd_invoice=>gc_src_sd_invoice.
        ls_edoc_bupa-partner_type = cl_edoc_dpp=>gc_customer.
        ls_edoc_bupa-partner_id = ms_kna1-kunnr.
        ls_edoc_bupa-one_time = ms_kna1-xcpdk.
        APPEND ls_edoc_bupa TO lt_edoc_bupa.
      WHEN OTHERS.
        RETURN.
    ENDCASE.

    TRY.
        go_edoc_dpp->check_and_save_bupa(
          EXPORTING iv_edoc_guid   = ms_source-reference-edoc_guid
                    iv_source_type = ms_source-source_header-source_type
                    iv_source_key  = ms_source-source_header-source_key
                    iv_bukrs       = ms_source-source_header-bukrs
                    it_edoc_bupa   = lt_edoc_bupa
                    iv_preview     = ms_source-map_control-preview
          IMPORTING ev_is_blocked  = lv_is_blocked )..
        IF lv_is_blocked IS NOT INITIAL.
          MESSAGE e194(edocument) INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
        ENDIF.
      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

  ENDMETHOD.


  METHOD determine_idnumber_by_type.

    DATA:
      lt_bu_idnumber TYPE tt_bu_idnumber,
      ls_bu_idnumber LIKE LINE OF lt_bu_idnumber.

    IF iv_partner IS INITIAL OR
       iv_type IS INITIAL.
      RETURN.
    ENDIF.

    TEST-SEAM determine_idnumber_by_type_01.
      SELECT idnumber
             valid_date_from
        INTO TABLE lt_bu_idnumber
        FROM but0id
        WHERE  type    = iv_type
           AND partner = iv_partner.
    END-TEST-SEAM.

    "Del 2992909
    CHECK sy-subrc = 0. "2992909
    SORT lt_bu_idnumber BY valid_date_from DESCENDING.
    READ TABLE lt_bu_idnumber INTO ls_bu_idnumber INDEX 1.
    IF sy-subrc IS INITIAL.
      ev_idnumber = ls_bu_idnumber-idnumber.
    ENDIF.

  ENDMETHOD.


  METHOD determine_taxnumber_by_type.

    DATA: lv_taxnum TYPE bptaxnum.

    IF iv_partner IS NOT INITIAL
      AND iv_taxtype IS NOT INITIAL.

      TEST-SEAM determine_taxnumber_by_type_01.
        SELECT SINGLE taxnum
          INTO lv_taxnum
          FROM dfkkbptaxnum
          WHERE partner = iv_partner
          AND   taxtype = iv_taxtype.
      END-TEST-SEAM.

      IF sy-subrc = 0.
        ev_taxnum = lv_taxnum.
      ELSE.
        MESSAGE e033(edocument_eu) WITH iv_partner iv_taxtype INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

    ENDIF.

  ENDMETHOD.


METHOD fill_address.
  DATA: lv_spras TYPE spras,
        lv_intca TYPE intca.                                "2938424
* Address
  CONCATENATE is_adrc-street is_adrc-str_suppl1 is_adrc-str_suppl2 is_adrc-str_suppl3 is_adrc-house_num1
         INTO rs_address-street_name-base-base-content
         SEPARATED BY space.

  SHIFT rs_address-street_name-base-base-content LEFT DELETING LEADING space.

  rs_address-additional_street_name-base-base-content = is_adrc-name_co.

* City Name
  CONCATENATE is_adrc-city1 is_adrc-city2
         INTO rs_address-city_name-base-base-content
         SEPARATED BY space.

  SHIFT rs_address-city_name-base-base-content LEFT DELETING LEADING space.

* Postal Code
  rs_address-postal_zone-base-base-content = is_adrc-post_code1.

* PO Box
  IF rs_address-street_name-base-base-content IS INITIAL.
    IF is_adrc-po_box IS NOT INITIAL.                       "2992909
*     Get the language of the document                            "2839436
      SELECT SINGLE spras                                   "2839436
        INTO lv_spras                                       "2839436
        FROM t005                                           "2839436
        WHERE land1 = ms_t001-land1.                        "2839436
      SET LANGUAGE lv_spras.                                "2839436
      CONCATENATE TEXT-001 is_adrc-po_box                   "2839436
        INTO rs_address-additional_street_name-base-base-content. "2839436
*   Revert back to user language                                "2839436
      SET LANGUAGE sy-langu.                                "2839436
      rs_address-postal_zone-base-base-content = is_adrc-post_code2.
    ENDIF.                                                  "3013311
  ENDIF.

* Country
  " del 2938424
  SELECT SINGLE bezei                                       "2938424
    INTO rs_address-country_subentity-base-base-content     "2938424
    FROM t005u                                              "2938424
    WHERE spras = sy-langu                                  "2938424
      AND land1 = ms_t001-land1                             "2938424
      AND bland = is_adrc-region.                           "2938424
*Start Response XML File(Clean Up Task)- Start *****   "3030901
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false.   "3210223
    CLEAR rs_address-country_subentity-base-base-content.
  ENDIF.
*End Response XML File(Clean Up Task)- Start *****     "3030901

  IF is_adrc-country IS NOT INITIAL.
* Start of 2938424
    CLEAR lv_intca.
    CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
      EXPORTING
        sap_code  = is_adrc-country
      IMPORTING
        iso_code  = lv_intca
      EXCEPTIONS
        not_found = 1
        OTHERS    = 2.

    IF sy-subrc <> 0.
      MESSAGE e072(edocument_eu)
      WITH is_adrc-country
      INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ELSE.
      rs_address-country-identification_code-base-base-content = lv_intca.
    ENDIF.
* End of 2938424
* Not needed for BIS3 2805246
    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false.                          "3210223
      rs_address-country-identification_code-base-base-list_id = get_fix_value(                        "2805246
                                                               iv_name        = 'COUNTRY_CODE_LIST_ID' "2805246
                                                               iv_err_msg_ind = abap_true ).           "2805246
    ENDIF.
  ELSE.
    CLEAR rs_address.
  ENDIF.

ENDMETHOD.


  METHOD fill_address2. "Added with SAP Note 3210223

    DATA ls_address_line2 TYPE edo_ubl_pint10_address_line.

    " POSTAL_ADDRESS-CONTROLLER
    cs_target_address-controller = is_source_address-controller.

    " POSTAL_ADDRESS-STREET_NAME
    MOVE-CORRESPONDING is_source_address-street_name
                    TO cs_target_address-street_name
                    EXPANDING NESTED TABLES.

    " POSTAL_ADDRESS-ADDITIONAL_STREET_NAME
    MOVE-CORRESPONDING is_source_address-additional_street_name
                    TO cs_target_address-additional_street_name
                    EXPANDING NESTED TABLES.

    " POSTAL_ADDRESS-CITY_NAME
    MOVE-CORRESPONDING is_source_address-city_name
                    TO cs_target_address-city_name
                    EXPANDING NESTED TABLES.

    " POSTAL_ADDRESS-POSTAL_ZONE
    MOVE-CORRESPONDING is_source_address-postal_zone
                    TO cs_target_address-postal_zone
                    EXPANDING NESTED TABLES.

    " POSTAL_ADDRESS-COUNTRY_SUBENTITY
    MOVE-CORRESPONDING is_source_address-country_subentity
                    TO cs_target_address-country_subentity
                    EXPANDING NESTED TABLES.

    " POSTAL_ADDRESS-ADDRESS_LINE
    MOVE-CORRESPONDING is_source_address-address_line
                    TO ls_address_line2
                    EXPANDING NESTED TABLES.

    IF ls_address_line2 IS NOT INITIAL.
      APPEND ls_address_line2 TO cs_target_address-address_line.
      CLEAR  ls_address_line2.
    ENDIF.

    " POSTAL_ADDRESS-COUNTRY
    MOVE-CORRESPONDING is_source_address-country
                    TO cs_target_address-country
                    EXPANDING NESTED TABLES.

  ENDMETHOD.


METHOD fill_allowance_charge.

* at SAP all Allowances / Charges on header level
* are divided into the line levels

ENDMETHOD.


  METHOD fill_allowance_charge2. "Added with SAP Note 3210223

    DATA ls_allowance_charge1 TYPE edo_ubl_allowance_charge.
    DATA ls_allowance_charge2 TYPE edo_ubl_pint10_allowance_char5.
    DATA ls_tax_category2     TYPE edo_ubl_pint10_tax_category.


    LOOP AT it_source_charge
         INTO ls_allowance_charge1.

      " INVOICE_LINE-ALLOWANCE_CHARGE-CONTROLLER
      ls_allowance_charge2-controller = ls_allowance_charge1-controller.

      " INVOICE_LINE-ALLOWANCE_CHARGE-CHARGE_INDICATOR
      MOVE-CORRESPONDING ls_allowance_charge1-charge_indicator
                      TO ls_allowance_charge2-charge_indicator
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ALLOWANCE_CHARGE-ALLOWANCE_CHARGE_REASON_CODE
      MOVE-CORRESPONDING ls_allowance_charge1-allowance_charge_reason_code
                      TO ls_allowance_charge2-allowance_charge_reason_code
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ALLOWANCE_CHARGE-ALLOWANCE_CHARGE_REASON
      MOVE-CORRESPONDING ls_allowance_charge1-allowance_charge_reason
                      TO ls_allowance_charge2-allowance_charge_reason
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ALLOWANCE_CHARGE-MULTIPLIER_FACTOR_NUMERIC
      MOVE-CORRESPONDING ls_allowance_charge1-multiplier_factor_numeric
                      TO ls_allowance_charge2-multiplier_factor_numeric
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ALLOWANCE_CHARGE-AMOUNT
      MOVE-CORRESPONDING ls_allowance_charge1-amount
                      TO ls_allowance_charge2-amount
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ALLOWANCE_CHARGE-BASE_AMOUNT
      MOVE-CORRESPONDING ls_allowance_charge1-base_amount
                      TO ls_allowance_charge2-base_amount
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ALLOWANCE_CHARGE-TAX_CATEGORY
      MOVE-CORRESPONDING ls_allowance_charge1-tax_category
                      TO ls_tax_category2
                      EXPANDING NESTED TABLES.

      IF ls_tax_category2 IS NOT INITIAL.
        APPEND ls_tax_category2 TO ls_allowance_charge2-tax_category.
        CLEAR  ls_tax_category2.
      ENDIF.

      IF ls_allowance_charge2 IS NOT INITIAL.
        APPEND ls_allowance_charge2 TO ct_target_charge.
        CLEAR  ls_allowance_charge2.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.


  method FILL_BILLING_REFERENCE.
*    to be redefined in the FI and SD subclasses
  endmethod.


METHOD FILL_BLR_RECV_PRTY_LEGAL_ENTIT."added with 3328617
* Receiver of BLR: Identifier = Supplier
  CLEAR: rs_legal_entity.
  TRY.
      rs_legal_entity-registration_name-base-base-content = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/AccountingSupplierParty/Party/PartyName/Name'
                          iv_xml         = iv_invoice_in_source_file ).

    CATCH cx_edocument.
      TRY.
          rs_legal_entity-registration_name-base-base-content = go_edoc_util_eu->get_value_from_xml_noprefix(
                                  iv_value_name  = 'CreditNote/AccountingSupplierParty/Party/PartyName/Name'
                                  iv_xml         = iv_invoice_in_source_file ).
        CATCH cx_edocument.
          MESSAGE e803(edocument) WITH '.../AccountingSupplierParty/Party/PartyName/Name' INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
      ENDTRY.
  ENDTRY.

ENDMETHOD.


METHOD fill_blr_sndr_prty_legal_entit."added with 3328617
* Sender of BLR: Identifier = Customer
  CLEAR: rs_legal_entity.
  TRY.
      rs_legal_entity-registration_name-base-base-content = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/AccountingCustomerParty/Party/PartyName/Name'
                          iv_xml         = iv_invoice_in_source_file ).

    CATCH cx_edocument.
      TRY.
          rs_legal_entity-registration_name-base-base-content = go_edoc_util_eu->get_value_from_xml_noprefix(
                                  iv_value_name  = 'CreditNote/AccountingCustomerParty/Party/PartyName/Name'
                                  iv_xml         = iv_invoice_in_source_file ).
        CATCH cx_edocument.
          MESSAGE e803(edocument) WITH '.../AccountingCustomerParty/Party/PartyName/Name' INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
      ENDTRY.
  ENDTRY.

ENDMETHOD.


  method FILL_BUYER_REFERENCE.
* Redefined in the country class
  endmethod.


METHOD fill_credit_note.

* Redefine for FI and SD

ENDMETHOD.


METHOD FILL_CREDIT_NOTE_DELIVERY.                                       "Added with SAP Note 2871404
* Obsolete with SAP Note 2938424
ENDMETHOD.


METHOD fill_credit_note_line.

* Redefine for FI and SD

ENDMETHOD.


METHOD fill_customer_party.

  CONSTANTS: lc_null TYPE c VALUE IS INITIAL.               "2968006
  DATA:
    lv_smtp_addr             TYPE ad_smtpadr,
    ls_party_tax_scheme_line TYPE edo_ubl_party_tax_scheme.

  DATA: ls_sales_org_part_func TYPE ty_value_map_multiple,        "Begin of 2968006
        ls_vbpa                TYPE vbpavb,
        lv_parvw               TYPE parvw,
        ls_adr6                TYPE adr6,
        lv_tel_number          TYPE ad_tlnmbr,
        lv_tel_ext             TYPE ad_tlxtns,
        ls_knvk                TYPE knvk.                         "End of 2968006

* Party
* - Endpoint
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) AND "3210223
     NOT ( ms_party_receiver-party_id IS INITIAL AND        "2968006
           ms_party_receiver-email    IS NOT INITIAL ).     "2968006.

    fill_endpoint( EXPORTING iv_kunnr = ms_kna1-kunnr
                   IMPORTING ev_endpoint = rs_cust_party-party-endpoint_id-base-base-content
                             ev_scheme_id =  rs_cust_party-party-endpoint_id-base-base-scheme_id ).

    IF rs_cust_party-party-endpoint_id-base-base-content IS INITIAL.
      MESSAGE e025(edocument_eu) INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.
  ENDIF.

* - Party Name
  IF ms_kna1-name1 IS NOT INITIAL.
    CONCATENATE ms_adrc_cust-name1                          "2968006
                ms_adrc_cust-name2                          "2968006
                ms_adrc_cust-name3                          "2968006
                ms_adrc_cust-name4                          "2968006
                INTO rs_cust_party-party-party_name-name-base-base-content "2968006
                SEPARATED BY space.                         "2968006
  ELSE.
    MESSAGE e010(edocument_eu) WITH ms_kna1-kunnr INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

* - Postal Address
  rs_cust_party-party-postal_address = fill_address( is_adrc = ms_adrc_cust ).
  IF rs_cust_party-party-postal_address IS INITIAL.
    MESSAGE e011(edocument_eu) WITH ms_kna1-kunnr INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

* - Party Tax Scheme: Company ID
* Begin of 2871404
  rs_cust_party-party-party_tax_scheme =
  fill_party_tax_scheme( iv_stceg = ms_kna1-stceg
                         iv_land  = ms_kna1-land1
                         iv_kunnr = ms_kna1-kunnr ).
* End of 2871404

* Party Legal Entity
* Begin of 2854416
  rs_cust_party-party-party_legal_entity = fill_party_legal_entity(
       iv_registration_name  = rs_cust_party-party-party_name-name-base-base-content
       iv_party_id           = ms_party_receiver-party_id
       iv_party_id_type      = ms_party_receiver-party_id_type
       iv_party_code_type    = ms_party_receiver-party_code_type ).
* End of 2854416

* - Contact
  TEST-SEAM fill_customer_party_01.                         "2390901
    " Begin of 2905102
    SELECT smtp_addr
       INTO lv_smtp_addr
       FROM adr6
       UP TO 1 ROWS
      WHERE addrnumber =  ms_adrc_cust-addrnumber
       AND  flgdefault =  abap_true
       AND  flg_nouse  =  abap_false.
    ENDSELECT.
    " End of 2905102
  END-TEST-SEAM.                                            "2390901

  IF sy-subrc IS INITIAL.
* --- Electronic Mail
    rs_cust_party-party-contact-electronic_mail-base-base-content = lv_smtp_addr.
  ENDIF.

* --- Telephone
  rs_cust_party-party-contact-telephone-base-base-content = ms_adrc_cust-tel_number. "2905102

  "Begin of 2968006
  CHECK ms_source-vbpa IS NOT INITIAL.

  get_partner_function(
    IMPORTING
      es_cust_contact = ls_vbpa
  ).
  IF ls_vbpa IS INITIAL.
    READ TABLE ms_source-vbpa INTO ls_vbpa
                              WITH KEY parvw = 'AP'.  "Contact Person
  ENDIF.

  IF ls_vbpa IS NOT INITIAL.
    IF ls_vbpa-parnr IS NOT INITIAL.
      TEST-SEAM fill_contact_person1.
        SELECT SINGLE * FROM knvk             "#EC CI_ALL_FIELDS_NEEDED
                        INTO ls_knvk
                       WHERE parnr EQ ls_vbpa-parnr.
      END-TEST-SEAM.
* --- Name
      IF ls_knvk-namev IS NOT INITIAL OR ls_knvk-name1 IS NOT INITIAL.
        CONCATENATE ls_knvk-namev ls_knvk-name1 INTO
          rs_cust_party-party-contact-name-base-base-content SEPARATED BY space.
      ENDIF.


      IF ls_knvk-prsnr IS NOT INITIAL.
        TEST-SEAM fill_contact_person2.
          SELECT * FROM adr6 INTO ls_adr6 UP TO 1 ROWS "#EC CI_ALL_FIELDS_NEEDED
                                          WHERE persnumber EQ ls_knvk-prsnr
                                            AND date_from LE sy-datum
                                          ORDER BY date_from DESCENDING.
          ENDSELECT.
        END-TEST-SEAM.
        IF sy-subrc EQ 0.
* --- Electronic Mail
          rs_cust_party-party-contact-electronic_mail-base-base-content = ls_adr6-smtp_addr.
        ENDIF.
        TEST-SEAM fill_contact_person3.
          SELECT SINGLE tel_number tel_extens  FROM adr2 INTO (lv_tel_number,lv_tel_ext)
                                    WHERE persnumber EQ ls_knvk-prsnr
                                      AND flgdefault EQ abap_true.
        END-TEST-SEAM.
        IF sy-subrc EQ 0.
* --- Telephone
          IF lv_tel_ext IS INITIAL.
            rs_cust_party-party-contact-telephone-base-base-content = lv_tel_number.
          ELSE.
            CONCATENATE lv_tel_number lv_tel_ext INTO
            rs_cust_party-party-contact-telephone-base-base-content SEPARATED BY '-'.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
  "End of 2968006

ENDMETHOD.


METHOD FILL_CUSTOMER_PARTY_BY_COMPANY. "Added with 3030901

  CONSTANTS: lc_null TYPE c VALUE IS INITIAL.
  DATA:
    lv_smtp_addr             TYPE ad_smtpadr.

  " Party
  " - Endpoint
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) AND "3210223
     NOT ( ms_party_receiver-party_id IS INITIAL AND
           ms_party_receiver-email    IS NOT INITIAL ).

    fill_endpoint( EXPORTING iv_bukrs = ms_t001-bukrs
                   IMPORTING ev_endpoint = rs_cust_party-party-endpoint_id-base-base-content
                             ev_scheme_id =  rs_cust_party-party-endpoint_id-base-base-scheme_id ).

    IF rs_cust_party-party-endpoint_id-base-base-content IS INITIAL.
      MESSAGE e025(edocument_eu) INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.
  ENDIF.

  " - Party Name
  IF ms_adrc_bukrs-name1 IS NOT INITIAL.
    CONCATENATE ms_adrc_bukrs-name1
                ms_adrc_bukrs-name2
                ms_adrc_bukrs-name3
                ms_adrc_bukrs-name4
                INTO rs_cust_party-party-party_name-name-base-base-content
                SEPARATED BY space.
  ELSE.
    MESSAGE e013(edocument_eu) WITH ms_t001-bukrs INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  " - Postal Address
  rs_cust_party-party-postal_address = fill_address( is_adrc = ms_adrc_bukrs ).
  IF rs_cust_party-party-postal_address IS INITIAL.
    MESSAGE e015(edocument_eu) WITH ms_t001-bukrs INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  " - Party Tax Scheme: Company ID
  rs_cust_party-party-party_tax_scheme =
  fill_party_tax_scheme( iv_stceg = ms_t001-stceg
                         iv_land  = ms_t001-land1
                         iv_bukrs = ms_t001-bukrs ).

  " Party Legal Entity
  rs_cust_party-party-party_legal_entity = fill_party_legal_entity(
       iv_registration_name  = rs_cust_party-party-party_name-name-base-base-content
       iv_party_id           = ms_party_sender-party_id                                   "3071425
       iv_party_id_type      = ms_party_sender-party_id_type                              "3071425
       iv_party_code_type    = ms_party_sender-party_code_type ).                         "3071425

  " - Contact
  TEST-SEAM fill_customer_party_company_01.
    SELECT smtp_addr
       INTO lv_smtp_addr
       FROM adr6
       UP TO 1 ROWS
      WHERE addrnumber =  ms_adrc_bukrs-addrnumber
       AND  flgdefault =  abap_true
       AND  flg_nouse  =  abap_false.
    ENDSELECT.
  END-TEST-SEAM.

  IF sy-subrc IS INITIAL.
    " --- Electronic Mail
    rs_cust_party-party-contact-electronic_mail-base-base-content = lv_smtp_addr.
  ENDIF.

  " --- Telephone
  rs_cust_party-party-contact-telephone-base-base-content = ms_adrc_bukrs-tel_number.

  " --- Name
  rs_cust_party-party-contact-name-base-base-content = ms_adrc_bukrs-name1.

ENDMETHOD.


METHOD fill_dcs_request. "Added with 3109533

  DATA: lv_process       TYPE string,
        lv_process_vers  TYPE string,

        lv_sender_id     TYPE string,
        lv_receiver_id   TYPE string,
        lv_document_type TYPE string.

  DATA: lv_filename     TYPE string,
        lv_doctype_id   TYPE string,
        lv_doctype_date TYPE string,
        lv_path         TYPE string.

  DATA lv_document_id_string  TYPE string.

  CLEAR rs_dcs_request.

  TRY.
      lv_sender_id = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'StandardBusinessDocument/StandardBusinessDocumentHeader/Sender/Identifier'
                          iv_xml         = ms_source-file ).
    CATCH cx_edocument.
      MESSAGE e803(edocument) WITH 'StandardBusinessDocument/StandardBusinessDocumentHeader/Sender/Identifier' INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
  ENDTRY.

  TRY.
      lv_receiver_id = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'StandardBusinessDocument/StandardBusinessDocumentHeader/Receiver/Identifier'
                          iv_xml         = ms_source-file ).
    CATCH cx_edocument.
      MESSAGE e803(edocument) WITH 'StandardBusinessDocument/StandardBusinessDocumentHeader/Receiver/Identifier' INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
  ENDTRY.

  TRY.
      lv_document_type = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'StandardBusinessDocument/StandardBusinessDocumentHeader/DocumentIdentification/Type'
                          iv_xml         = ms_source-file ).
    CATCH cx_edocument.
      MESSAGE e803(edocument) WITH 'StandardBusinessDocument/StandardBusinessDocumentHeader/DocumentIdentification/Type' INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
  ENDTRY.

  CONCATENATE 'StandardBusinessDocument' lv_document_type 'ID' INTO lv_path SEPARATED BY '/'.
  TRY.
      lv_doctype_id = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = lv_path
                          iv_xml         = ms_source-file ).
    CATCH cx_edocument.
  ENDTRY.

  CONCATENATE 'StandardBusinessDocument' lv_document_type 'IssueDate' INTO lv_path SEPARATED BY '/'.
  TRY.
      lv_doctype_date = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = lv_path
                          iv_xml         = ms_source-file ).
    CATCH cx_edocument.
  ENDTRY.

  CONCATENATE lv_receiver_id lv_doctype_id lv_doctype_date ms_source-reference-edoc_guid INTO lv_filename SEPARATED BY '_'.

  IF ms_source-map_control-preview = 'X'. "Added with Note 3134550
    rs_dcs_request-action = get_fix_val('GENPRX_ACTION_DISPL').
  ELSE.
    rs_dcs_request-action = get_fix_val( 'GENPRX_ACTION_SEND' ).
  ENDIF.  "Note 3134550

  IF rs_dcs_request-action IS INITIAL.
    MESSAGE e705(edocument) WITH 'GENPRX_ACTION_SEND' INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  rs_dcs_request-system = get_fix_val( 'GENPRX_SYSTEM' ).
  IF rs_dcs_request-system IS INITIAL.
    MESSAGE e705(edocument) WITH 'GENPRX_SYSTEM' INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  lv_process            = get_fix_val( 'GENPRX_PROCESS' ).
  lv_process_vers       = get_fix_val( 'GENPRX_PROCESS_VERS' ).
  IF lv_process IS INITIAL OR lv_process_vers IS INITIAL.
    MESSAGE e705(edocument) WITH 'GENPRX_PROCESS, GENPRX_PROCESS_VERS' INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ELSE.
    CONCATENATE lv_process lv_process_vers
          INTO rs_dcs_request-process
          SEPARATED BY '_'.
  ENDIF.

  rs_dcs_request-document-document_id    = ms_source-source_header-source_key.
* 3415017 Avoid space in the ID
  lv_document_id_string = rs_dcs_request-document-document_id.
  REPLACE ALL OCCURRENCES OF REGEX '\s' IN lv_document_id_string WITH '_' ##REGEX_POSIX.
  rs_dcs_request-document-document_id = lv_document_id_string.
  rs_dcs_request-document-content_type   = get_fix_val( 'GENPRX_DOC_CONT_TYPE' ).

  IF rs_dcs_request-document-content_type IS INITIAL.
    MESSAGE e705(edocument) WITH 'GENPRX_DOC_CONT_TYPE' INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  rs_dcs_request-document-schema_version = get_fix_val( 'GENPRX_SCHEMA_VER' ).
  IF rs_dcs_request-document-schema_version IS INITIAL.
    MESSAGE e705(edocument) WITH 'GENPRX_SCHEMA_VER' INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  rs_dcs_request-document-content       = ms_source-file.
  rs_dcs_request-alt_partner_id         = lv_sender_id.
  rs_dcs_request-organization_id        = lv_sender_id.
  rs_dcs_request-receiver_id            = lv_receiver_id.
  rs_dcs_request-document-document_Type = lv_document_type.
  rs_dcs_request-document-document_name = lv_filename.

ENDMETHOD.


METHOD FILL_DELIVERY.                                       "Added with SAP Note 2871404
* Redefine for FI and SD
ENDMETHOD.


  METHOD fill_delivery2. "Added with SAP Note 3210223

    " DELIVERY-CONTROLLER
    cs_target_delivery-controller = is_source_delivery-controller.

    " DELIVERY-ACTUAL_DELIVERY_DATE
    MOVE-CORRESPONDING is_source_delivery-actual_delivery_date
                    TO cs_target_delivery-actual_delivery_date
                    EXPANDING NESTED TABLES.

    " DELIVERY-DELIVERY_LOCATION-CONTROLLER
    cs_target_delivery-delivery_location-controller = is_source_delivery-delivery_location-controller.

    " DELIVERY-DELIVERY_LOCATION-ID
    MOVE-CORRESPONDING is_source_delivery-delivery_location-id
                    TO cs_target_delivery-delivery_location-id
                    EXPANDING NESTED TABLES.

    " DELIVERY-DELIVERY_LOCATION-ADDRESS
    fill_address2( EXPORTING is_source_address = is_source_delivery-delivery_location-address
                   CHANGING  cs_target_address = cs_target_delivery-delivery_location-address ).

    " DELIVERY-DELIVERY_PARTY
    fill_party2( EXPORTING is_source_party = is_source_delivery-delivery_party
                 CHANGING  cs_target_party = cs_target_delivery-delivery_party ).

  ENDMETHOD.


  METHOD fill_delivery_by_company. "Added with SAP Note 3030901
    " Redefine for FI, SD and LIV
  ENDMETHOD.


METHOD fill_due_date.

* Redefine for FI and SD

ENDMETHOD.


  METHOD fill_endpoint.
* the EndpointID will be filled with the Party ID

    CLEAR: ev_endpoint,
           ev_scheme_id.

    IF iv_kunnr IS NOT INITIAL.
      ev_endpoint = ms_party_receiver-party_id.
      ev_scheme_id =  ms_party_receiver-party_code_type. "2390901
    ELSEIF iv_partner IS NOT INITIAL.                    "2805246
      ev_endpoint = ms_party_receiver-party_id.          "2805246
      ev_scheme_id =  ms_party_receiver-party_code_type. "2805246
    ELSEIF iv_lifnr IS NOT INITIAL.                      "2805246
      ev_endpoint = ms_party_receiver-party_id.          "2805246
      ev_scheme_id =  ms_party_receiver-party_code_type. "2805246
    ELSEIF iv_bukrs IS NOT INITIAL.
      ev_endpoint = ms_party_sender-party_id.
      ev_scheme_id =  ms_party_sender-party_code_type.   "2390901
    ENDIF.

  ENDMETHOD.


METHOD fill_invoice.

* Redefine for FI and SD

ENDMETHOD.


METHOD fill_invoice_line.

* Redefine for FI and SD

ENDMETHOD.


METHOD fill_line_extension_amount.                          " 2854416

* Redefine for SD

ENDMETHOD.


METHOD fill_monetary_total.

* Redefine for FI and SD

ENDMETHOD.


  method FILL_NOTE.
  endmethod.


  METHOD fill_order_line_ref.
* To be implemented in Sub Class
  ENDMETHOD.


  method FILL_ORDER_REFERENCE.
  endmethod.


  METHOD fill_party2. "Added with SAP Note 3210223

    DATA ls_party_identification1     TYPE edo_ubl_party_identification.
    DATA ls_party_identification2     TYPE edo_ubl_pint10_party_identifi1.
    DATA ls_id2                       TYPE edo_ubl_pint10_id.
    DATA ls_party_name2               TYPE edo_ubl_pint10_party_name.
    DATA ls_registration_address2     TYPE edo_ubl_pint10_registration_ad.
    DATA ls_party_legal_entity2       TYPE edo_ubl_pint10_party_legal_en1.


    " PARTY-CONTROLLER
    cs_target_party-controller = is_source_party-controller.

    " PARTY-ENDOPOINT_ID
    MOVE-CORRESPONDING is_source_party-endpoint_id
                    TO cs_target_party-endpoint_id
                    EXPANDING NESTED TABLES.

    " PARTY-PARTY_IDENTIFICATION
    LOOP AT is_source_party-party_identification
         INTO ls_party_identification1.

      ls_party_identification2-controller = ls_party_identification1-controller.

      MOVE-CORRESPONDING ls_party_identification1-id
                      TO ls_id2
                      EXPANDING NESTED TABLES.

      IF ls_id2 IS NOT INITIAL.
        APPEND ls_id2 TO ls_party_identification2-id.
        CLEAR  ls_id2.
      ENDIF.

      IF ls_party_identification2 IS NOT INITIAL.
        APPEND ls_party_identification2 TO cs_target_party-party_identification.
        CLEAR  ls_party_identification2.
      ENDIF.
    ENDLOOP.

    " PARTY-PARTY_NAME
    MOVE-CORRESPONDING is_source_party-party_name
                    TO ls_party_name2
                    EXPANDING NESTED TABLES.

    IF ls_party_name2 IS NOT INITIAL.
      APPEND ls_party_name2 TO cs_target_party-party_name.
      CLEAR  ls_party_name2.
    ENDIF.

    " PARTY-POSTAL_ADDRESS
    fill_address2( EXPORTING is_source_address = is_source_party-postal_address
                   CHANGING  cs_target_address = cs_target_party-postal_address ).

    " PARTY-PARTY_TAX_SCHEME
    MOVE-CORRESPONDING is_source_party-party_tax_scheme
                    TO cs_target_party-party_tax_scheme
                    EXPANDING NESTED TABLES.


    " PARTY-PARTY_LEGAL_ENTITY
    " PARTY-PARTY_LEGAL_ENTITY-CONTROLLER
    ls_party_legal_entity2-controller = is_source_party-party_legal_entity-controller.

    " PARTY-PARTY_LEGAL_ENTITY-REGISTRATION_NAME
    MOVE-CORRESPONDING is_source_party-party_legal_entity-registration_name
                    TO ls_party_legal_entity2-registration_name
                    EXPANDING NESTED TABLES.

    " PARTY-PARTY_LEGAL_ENTITY-COMPANY_ID
    MOVE-CORRESPONDING is_source_party-party_legal_entity-company_id
                    TO ls_party_legal_entity2-company_id
                    EXPANDING NESTED TABLES.

    " PARTY-PARTY_LEGAL_ENTITY-COMPANY_LEGAL_FORM
    MOVE-CORRESPONDING is_source_party-party_legal_entity-company_legal_form
                    TO ls_party_legal_entity2-company_legal_form
                    EXPANDING NESTED TABLES.


    " PARTY-PARTY_LEGAL_ENTITY-REGISTRATION_ADDRESS
    fill_address2( EXPORTING is_source_address = is_source_party-party_legal_entity-registration_address
                   CHANGING  cs_target_address = ls_registration_address2 ).

    ls_party_legal_entity2-registration_address = ls_registration_address2.
    CLEAR ls_registration_address2.

    IF ls_party_legal_entity2 IS NOT INITIAL.
      APPEND ls_party_legal_entity2 TO cs_target_party-party_legal_entity.
      CLEAR  ls_party_legal_entity2.
    ENDIF.

    " PARTY-CONTACT
    MOVE-CORRESPONDING is_source_party-contact
                    TO cs_target_party-contact
                    EXPANDING NESTED TABLES.

  ENDMETHOD.


  METHOD fill_party_identification. "New with 2871404
    DATA:
      ls_party_identification LIKE LINE OF rt_party_identification.

    IF mv_is_self_billing = abap_true.                      "3030901
      TEST-SEAM fill_party_identification_02.               "3030901
        SELECT SINGLE eikto                                 "3030901
          INTO ls_party_identification-id-base-base-content "3030901
          FROM lfb1                                         "3030901
          WHERE lifnr = ms_vendor-lifnr AND                 "3030901
                bukrs = mv_bukrs.                           "3030901
      END-TEST-SEAM.                                        "3030901
    ELSE.                                                   "3030901
      IF is_sepa_mandate-rec_crdid IS NOT INITIAL.          "3030901
        ls_party_identification-id-base-base-scheme_id =    "3030901
          get_fix_value( iv_name        = 'SEPA_SCHEME_ID'  "3030901
                         iv_err_msg_ind = abap_true ).      "3030901
        ls_party_identification-id-base-base-content =      "3030901
          is_sepa_mandate-rec_crdid.                        "3030901
      ELSE.                                                 "3030901
*        Begin of 3042934
        IF ms_source-vbrk-vkorg IS NOT INITIAL AND
           ms_source-vbrk-vtweg IS NOT INITIAL.
          TEST-SEAM fill_party_identification_03.
            SELECT SINGLE eikto
              INTO ls_party_identification-id-base-base-content
              FROM knvv
              WHERE kunnr = ms_kna1-kunnr
                AND vkorg = ms_source-vbrk-vkorg
                AND vtweg = ms_source-vbrk-vtweg
                AND spart = ms_source-vbrk-spart.
          END-TEST-SEAM.
        ELSE.
*          End of 3042934
          TEST-SEAM fill_party_identification_01.
            SELECT SINGLE eikto
              INTO ls_party_identification-id-base-base-content
              FROM knb1
              WHERE kunnr = ms_kna1-kunnr AND
                    bukrs = mv_bukrs.
          END-TEST-SEAM.
        ENDIF.                                              "3042934
      ENDIF.                                                "3030901
      " Start of 3013311
    ENDIF.                                                  "3030901
    IF ls_party_identification-id-base-base-content IS NOT INITIAL.
*      Moved to another logical branch by 3030901
      APPEND ls_party_identification TO rt_party_identification.
    ENDIF.
    " End of 3013311

  ENDMETHOD.


  METHOD fill_party_legal_entity. "Added with SAP Note 2805246

*   Registration Name
    rs_party_legal_entity-registration_name-base-base-content = iv_registration_name.

*   Company ID
    rs_party_legal_entity-company_id-base-base-content = iv_party_id.

*   Company ID - Scheme ID
    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ).     "3210223
      rs_party_legal_entity-company_id-base-base-scheme_id = iv_party_code_type.
    ELSE.
      rs_party_legal_entity-company_id-base-base-scheme_id = iv_party_id_type.
    ENDIF.

    IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id )      "3210223
    AND iv_party_code_type NOT BETWEEN '0001' AND '0192'.   "2839436
      CLEAR rs_party_legal_entity-company_id-base-base-scheme_id.
    ENDIF.

  ENDMETHOD.


  METHOD fill_party_tax_scheme. "Added with SAP Note 2805246

    DATA:
      lv_party_id_type         TYPE edoc_party_id_type,
      lv_party_id_type_vat     TYPE edoc_party_id_type,
      ls_party_tax_scheme_line TYPE edo_ubl_party_tax_scheme,
      lv_taxnum                TYPE bptaxnumxl.

    IF iv_bukrs IS SUPPLIED.
      lv_party_id_type = ms_party_sender-party_id_type.
      lv_taxnum = iv_stceg.
    ELSEIF iv_kunnr IS SUPPLIED.
      lv_party_id_type = ms_party_receiver-party_id_type.
      lv_taxnum = iv_stceg.
    ELSEIF iv_lifnr IS SUPPLIED.
      lv_party_id_type = ms_party_receiver-party_id_type.
      lv_taxnum = iv_stceg.
    ELSEIF iv_partner IS SUPPLIED.
      lv_party_id_type = ms_party_receiver-party_id_type.
      lv_taxnum = iv_bptaxnum.
    ENDIF.

    CONCATENATE iv_land mc_vat_text INTO lv_party_id_type_vat SEPARATED BY ':'.

    IF lv_taxnum IS NOT INITIAL.
*     Company ID
      ls_party_tax_scheme_line-company_id-base-base-content = lv_taxnum.

      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ) EQ abap_false.     "3210223
*       Company ID - Scheme ID
        ls_party_tax_scheme_line-company_id-base-base-scheme_id = lv_party_id_type_vat.
      ENDIF.

*     Tax Scheme - ID
      ls_party_tax_scheme_line-tax_scheme-id-base-base-content =
                get_fix_value( iv_name        = 'TAX_SCHEME_ID'
                               iv_err_msg_ind = abap_true ).

      APPEND ls_party_tax_scheme_line TO rt_party_tax_scheme.

    ELSE.
*     Raise error if Party ID Type is VAT number
      IF lv_party_id_type EQ lv_party_id_type_vat.
        IF iv_bukrs IS SUPPLIED.
          MESSAGE e014(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        ELSEIF iv_kunnr IS SUPPLIED.
          MESSAGE e012(edocument_eu) WITH iv_kunnr INTO cl_edocument=>gv_error_txt.
        ELSEIF iv_lifnr IS SUPPLIED.
          MESSAGE e046(edocument_eu) WITH iv_lifnr INTO cl_edocument=>gv_error_txt.
        ELSEIF iv_partner IS SUPPLIED.
          MESSAGE e047(edocument_eu) WITH iv_partner INTO cl_edocument=>gv_error_txt.
        ENDIF.
        add_error_message( ).
      ENDIF.
    ENDIF.

ENDMETHOD.


METHOD fill_payable_rounding_amount.                        " 2854416

* Redefine for SD

ENDMETHOD.


  METHOD fill_payee_party.    "New with 2968006
* Redefined in Sub Class
  ENDMETHOD.


  METHOD fill_payment_mandate. "New with 2871404
    rs_payment_mandate-id-base-base-content =
     is_sepa_mandate-mndid.
    rs_payment_mandate-payer_financial_account-id-base-base-content =
     is_sepa_mandate-snd_iban.
  ENDMETHOD.


  METHOD fill_payment_means.
* Redefine for FI and SD
  ENDMETHOD.


METHOD fill_payment_terms.

* Redefine for FI and SD

ENDMETHOD.


METHOD fill_sbdh.

  DATA:
    ls_partner         TYPE edo_ubl_partner,
    ls_scope           TYPE edo_ubl_scope,
    lv_tzone           TYPE sy-tzone,
    lv_tzoneh(2)       TYPE n,
    lv_tzonem(2)       TYPE n,
    lv_authority       TYPE edoc_field_value.
                                                            "Del 2854416

* Header Version
  rs_target-header_version = get_fix_value(
                               iv_name        = 'SBDH_HEADER_VERSION'
                               iv_err_msg_ind = abap_false )."2968006

* Sender: Identifier
  CLEAR ls_partner.

  CONCATENATE ms_party_sender-party_code_type ':' ms_party_sender-party_id
         INTO ls_partner-identifier-content.

* Sender: Authority
  lv_authority = get_fix_value(
                   iv_name        = 'SBDH_AUTHORITY'
                   iv_err_msg_ind = abap_false )."2968006

  ls_partner-identifier-authority = lv_authority.

  APPEND ls_partner TO rs_target-sender.

* Receiver: Identifier
  CLEAR ls_partner.

  CONCATENATE ms_party_receiver-party_code_type ':' ms_party_receiver-party_id
         INTO ls_partner-identifier-content.

* Receiver: Authority
  ls_partner-identifier-authority = lv_authority.

  APPEND ls_partner TO rs_target-receiver.

* Document Identification: Standard                                    "Start 2854416
  rs_target-document_identification-standard = mv_doc_id_standard.
  rs_target-document_identification-type = mv_doc_id_type.
* Document Identification: Type Version
  rs_target-document_identification-type_version = mv_sbdh_version_id. "End 2854416

* Document Identification: Instance Identifier
  rs_target-document_identification-instance_identifier = ms_source-reference-edoc_guid.

* Document Identification: Creation Date And Time
  CONCATENATE sy-datum(4) '-' sy-datum+4(2) '-' sy-datum+6(2) 'T'
              sy-uzeit(2) ':' sy-uzeit+2(2) ':' sy-uzeit+4(2)
         INTO rs_target-document_identification-creation_date_and_time.

* Add Time Zone
  IF sy-tzone IS NOT INITIAL.
    lv_tzone = sy-tzone DIV 60.
    lv_tzoneh = lv_tzone DIV 60.
    lv_tzonem = lv_tzone MOD 60.

    IF sy-tzone >= 0.
      CONCATENATE rs_target-document_identification-creation_date_and_time '+'
                  lv_tzoneh ':' lv_tzonem
             INTO rs_target-document_identification-creation_date_and_time.
    ELSE.
      CONCATENATE rs_target-document_identification-creation_date_and_time '-'
                  lv_tzoneh ':' lv_tzonem
             INTO rs_target-document_identification-creation_date_and_time.
    ENDIF.

  ELSE.
*   Time Zone is UTC
    CONCATENATE rs_target-document_identification-creation_date_and_time 'Z'
           INTO rs_target-document_identification-creation_date_and_time.
  ENDIF.


  CLEAR ls_scope.
* Business Scope: Type 1
  ls_scope-type = get_fix_value( iv_name        = 'SBDH_SCOPE_TYPE1'
                                 iv_err_msg_ind = abap_false )."2968006

* Business Scope: Instance Identifier 1 (DOCUMENTID)
  ls_scope-instance_identifier = mv_doc_type.               "2854416

  APPEND ls_scope TO rs_target-business_scope-scope.

  CLEAR ls_scope.
* Business Scope: Type 2 (PROCESSID)
  ls_scope-type = get_fix_value( iv_name        = 'SBDH_SCOPE_TYPE2'
                                 iv_err_msg_ind = abap_false )."2968006

  APPEND ls_scope TO rs_target-business_scope-scope.

ENDMETHOD.


METHOD fill_sbdh_blr."added with 3328617

  DATA:
    ls_partner   TYPE edo_ubl_partner4,
    ls_scope     TYPE edo_ubl_scope,
    lv_tzone     TYPE sy-tzone,
    lv_tzoneh(2) TYPE n,
    lv_tzonem(2) TYPE n,
    lv_authority TYPE edoc_field_value.

* Header Version
  rs_target-header_version = get_fix_value(
                               iv_name        = 'SBDH_HEADER_VERSION'
                               iv_err_msg_ind = abap_false ).

  APPEND fill_sbdh_blr_sender( iv_invoice_in_source_file ) TO rs_target-sender.
  APPEND fill_sbdh_blr_receiver( iv_invoice_in_source_file ) TO rs_target-receiver.

  GET TIME STAMP FIELD rs_target-document_identification-creation_date_and_time.

* Document Identification: Standard
  rs_target-document_identification-standard = mv_doc_id_standard.
  rs_target-document_identification-type = mv_doc_id_type.
* Document Identification: Type Version
  rs_target-document_identification-type_version = mv_sbdh_version_id.

* Document Identification: Instance Identifier
  rs_target-document_identification-instance_identifier = ms_source-reference-edoc_guid.

* Document Identification: Creation Date And Time
  GET TIME STAMP FIELD rs_target-document_identification-creation_date_and_time.

  CLEAR ls_scope.
* Business Scope: Type 1
  ls_scope-type = get_fix_value( iv_name        = 'SBDH_SCOPE_TYPE1'
                                 iv_err_msg_ind = abap_false ).
* Business Scope: Instance Identifier 1 (DOCUMENTID)
  ls_scope-instance_identifier = mv_doc_type.

  APPEND ls_scope TO rs_target-business_scope-scope.

  CLEAR ls_scope.
* Business Scope: Type 2 (PROCESSID)
  ls_scope-type = get_fix_value( iv_name        = 'SBDH_SCOPE_TYPE2'
                                 iv_err_msg_ind = abap_false ).
  ls_scope-instance_identifier = mv_process_id.

  APPEND ls_scope TO rs_target-business_scope-scope.

ENDMETHOD.


METHOD fill_sbdh_blr_receiver."added with 3328617
  DATA lv_supplier_party TYPE string.
  DATA lv_supplier_party_scheme TYPE string.
* Receiver of BLR: Identifier = Supplier
* Receiver: Authority
  CLEAR: rs_partner.
  rs_partner-identifier-authority = get_fix_value(
                   iv_name        = 'SBDH_AUTHORITY'
                   iv_err_msg_ind = abap_false ).
  TRY.
      lv_supplier_party = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/AccountingSupplierParty/Party/EndpointID'
                          iv_xml         = iv_invoice_in_source_file ).


      lv_supplier_party_scheme = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/AccountingSupplierParty/Party/EndpointID'
                          iv_attribute_name = 'schemeID'
                          iv_xml         = iv_invoice_in_source_file ).

      CONCATENATE lv_supplier_party_scheme ':' lv_supplier_party
             INTO rs_partner-identifier-content.

    CATCH cx_edocument.
      TRY.
          lv_supplier_party = go_edoc_util_eu->get_value_from_xml_noprefix(
                              iv_value_name  = 'CreditNote/AccountingSupplierParty/Party/EndpointID'
                              iv_xml         = iv_invoice_in_source_file ).
          lv_supplier_party_scheme = go_edoc_util_eu->get_value_from_xml_noprefix(
                              iv_value_name  = 'CreditNote/AccountingSupplierParty/Party/EndpointID'
                              iv_attribute_name = 'schemeID'
                              iv_xml         = iv_invoice_in_source_file ).

          CONCATENATE lv_supplier_party_scheme ':' lv_supplier_party
                 INTO rs_partner-identifier-content.
        CATCH cx_edocument.
          MESSAGE e803(edocument) WITH '.../AccountingSupplierParty/Party/EndpointID' INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
      ENDTRY.
  ENDTRY.

ENDMETHOD.


METHOD fill_sbdh_blr_sender."added with 3328617
  DATA lv_customer_party TYPE string.
  DATA lv_customer_party_scheme TYPE string.
* Sender of BLR: Identifier = Customer
* Sender: Authority
  CLEAR: rs_partner.
  rs_partner-identifier-authority = get_fix_value(
                   iv_name        = 'SBDH_AUTHORITY'
                   iv_err_msg_ind = abap_false ).
  TRY.
      lv_customer_party = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/AccountingCustomerParty/Party/EndpointID'
                          iv_xml         = iv_invoice_in_source_file ).


      lv_customer_party_scheme = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/AccountingCustomerParty/Party/EndpointID'
                          iv_attribute_name = 'schemeID'
                          iv_xml         = iv_invoice_in_source_file ).

      CONCATENATE lv_customer_party_scheme ':' lv_customer_party
             INTO rs_partner-identifier-content.

    CATCH cx_edocument.
      TRY.
          lv_customer_party = go_edoc_util_eu->get_value_from_xml_noprefix(
                              iv_value_name  = 'CreditNote/AccountingCustomerParty/Party/EndpointID'
                              iv_xml         = iv_invoice_in_source_file ).
          lv_customer_party_scheme = go_edoc_util_eu->get_value_from_xml_noprefix(
                              iv_value_name  = 'CreditNote/AccountingCustomerParty/Party/EndpointID'
                              iv_attribute_name = 'schemeID'
                              iv_xml         = iv_invoice_in_source_file ).
          CONCATENATE lv_customer_party_scheme ':' lv_customer_party
                 INTO rs_partner-identifier-content.

        CATCH cx_edocument.
          MESSAGE e803(edocument) WITH '.../AccountingCustomerParty/Party/EndpointID' INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
      ENDTRY.
  ENDTRY.

ENDMETHOD.


METHOD fill_supplier_party.

  DATA:
    lv_smtp_addr             TYPE ad_smtpadr,
    ls_party_tax_scheme_line TYPE edo_ubl_party_tax_scheme.

* Party
* - Endpoint
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ). "3210223
    fill_endpoint( EXPORTING iv_bukrs = mv_bukrs
                   IMPORTING ev_endpoint = rs_supp_party-party-endpoint_id-base-base-content
                             ev_scheme_id = rs_supp_party-party-endpoint_id-base-base-scheme_id ).
    IF rs_supp_party-party-endpoint_id-base-base-content IS INITIAL.
      MESSAGE e025(edocument_eu) INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.
  ENDIF.

* Begin of 2871404
* - Identification
  rs_supp_party-party-party_identification =
    fill_party_identification(
      is_sepa_mandate = ms_sepa_mandate ).
* End of 2871404

* - Party Name
  IF ms_adrc_bukrs-name1 IS NOT INITIAL.                    "2938424
    CONCATENATE ms_adrc_bukrs-name1                         "2938424
                ms_adrc_bukrs-name2                         "2938424
                ms_adrc_bukrs-name3                         "2938424
                ms_adrc_bukrs-name4                         "2938424
    INTO rs_supp_party-party-party_name-name-base-base-content "2938424
                SEPARATED BY space.                         "2968006
  ELSE.
    MESSAGE e013(edocument_eu) WITH ms_t001-bukrs INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

* - Postal Address
  rs_supp_party-party-postal_address = fill_address( is_adrc = ms_adrc_bukrs ).
  IF rs_supp_party-party-postal_address IS INITIAL.
    MESSAGE e015(edocument_eu) WITH ms_t001-bukrs INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

* - Party Tax Scheme
* Begin of 2871404
  rs_supp_party-party-party_tax_scheme =
  fill_party_tax_scheme( iv_stceg = ms_t001-stceg
                         iv_land  = ms_t001-land1
                         iv_bukrs = ms_t001-bukrs ).
* End of 2871404

* - Party Legal Entity
* Begin of 2854416
  rs_supp_party-party-party_legal_entity = fill_party_legal_entity(
       iv_registration_name  = rs_supp_party-party-party_name-name-base-base-content
       iv_party_id           = ms_party_sender-party_id
       iv_party_id_type      = ms_party_sender-party_id_type
       iv_party_code_type    = ms_party_sender-party_code_type ).
* End of 2854416

* - Contact
  TEST-SEAM fill_supplier_party_01.                         "2390901
    SELECT SINGLE smtp_addr
      INTO lv_smtp_addr
      FROM adr6
     WHERE addrnumber = ms_adrc_bukrs-addrnumber
      AND  flgdefault = abap_true
      AND  flg_nouse  = abap_false.
  END-TEST-SEAM.                                            "2390901

  IF sy-subrc IS INITIAL.
* --- Electronic Mail
    rs_supp_party-party-contact-electronic_mail-base-base-content = lv_smtp_addr.
  ENDIF.

* --- Name
  rs_supp_party-party-contact-name-base-base-content = ms_adrc_bukrs-name1.

* --- Telephone
  rs_supp_party-party-contact-telephone-base-base-content = ms_adrc_bukrs-tel_number.

ENDMETHOD.


METHOD FILL_SUPPLIER_PARTY_BY_VENDOR. "Added with 3030901

  DATA:
    lv_smtp_addr             TYPE ad_smtpadr,
    ls_party_tax_scheme_line TYPE edo_ubl_party_tax_scheme.

  " Party
  " - Endpoint
  IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ). "3210223
    fill_endpoint( EXPORTING iv_lifnr = ms_vendor-lifnr
                   IMPORTING ev_endpoint = rs_supp_party-party-endpoint_id-base-base-content
                             ev_scheme_id = rs_supp_party-party-endpoint_id-base-base-scheme_id ).
    IF rs_supp_party-party-endpoint_id-base-base-content IS INITIAL.
      MESSAGE e025(edocument_eu) INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.
  ENDIF.

  " - Identification
  rs_supp_party-party-party_identification =
    fill_party_identification(
      is_sepa_mandate = ms_sepa_mandate ).

  " - Party Name
  IF ms_adrc_vend-name1 IS NOT INITIAL.
    CONCATENATE ms_adrc_vend-name1
                ms_adrc_vend-name2
                ms_adrc_vend-name3
                ms_adrc_vend-name4
    INTO rs_supp_party-party-party_name-name-base-base-content
                SEPARATED BY space.
  ELSE.
    MESSAGE e102(edocument_eu) WITH ms_vendor-lifnr INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  " - Postal Address
  rs_supp_party-party-postal_address = fill_address( is_adrc = ms_adrc_vend ).
  IF rs_supp_party-party-postal_address IS INITIAL.
    MESSAGE e103(edocument_eu) WITH ms_vendor-lifnr INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

  " - Party Tax Scheme
  rs_supp_party-party-party_tax_scheme =
  fill_party_tax_scheme( iv_stceg = ms_vendor-stceg
                         iv_land  = ms_vendor-land1
                         iv_lifnr = ms_vendor-lifnr ).

  " - Party Legal Entity
  rs_supp_party-party-party_legal_entity = fill_party_legal_entity(
       iv_registration_name  = rs_supp_party-party-party_name-name-base-base-content
       iv_party_id           = ms_party_receiver-party_id                                 "3071425
       iv_party_id_type      = ms_party_receiver-party_id_type                            "3071425
       iv_party_code_type    = ms_party_receiver-party_code_type ).                       "3071425

  " - Contact
  TEST-SEAM fill_supplier_party_vendor_01.
    SELECT SINGLE smtp_addr
      INTO lv_smtp_addr
      FROM adr6
     WHERE addrnumber = ms_adrc_vend-addrnumber
      AND  flgdefault = abap_true
      AND  flg_nouse  = abap_false.
  END-TEST-SEAM.

  IF sy-subrc IS INITIAL.
    " --- Electronic Mail
    rs_supp_party-party-contact-electronic_mail-base-base-content = lv_smtp_addr.
  ENDIF.

  " --- Name
  rs_supp_party-party-contact-name-base-base-content = ms_adrc_vend-name1.

  " --- Telephone
  rs_supp_party-party-contact-telephone-base-base-content = ms_adrc_vend-tel_number.

ENDMETHOD.


METHOD fill_tax_exclusive_amount.                           " 2854416

* Redefine for SD

ENDMETHOD.


METHOD fill_tax_total.

* Redefine for FI and SD

ENDMETHOD.


  METHOD get_bank_info. "New with 2871404

    CLEAR:
          et_payee_account.

    IF iv_bukrs IS INITIAL.
      MESSAGE e070(edocument_eu)
         WITH space INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
      RETURN.
    ENDIF.

    "Del-3109533
    get_bank_info_op( EXPORTING iv_bukrs = iv_bukrs
                                iv_pay_means = iv_pay_means
                                iv_hbkid = iv_hbkid         "2938424
                                iv_hktid = iv_hktid         "2938424
                      IMPORTING et_payee_account = et_payee_account ).

  ENDMETHOD.


  METHOD get_bank_info_ce.

  " Obsolete with SAP Note 3109533

  ENDMETHOD.                                                "2871404


  METHOD get_bank_info_op. " New with 2871404

    TYPES: BEGIN OF ty_account,
             bukrs TYPE  bukrs,
             hbkid TYPE hbkid,
             banks TYPE banks,
             bankl TYPE bankl,
             hktid TYPE hktid,
             bankn TYPE bankn35,
             bkont TYPE bkont,
             waers TYPE waers,
             banka TYPE banka,
             swift TYPE swift,
             brnch TYPE brnch,
             iban  TYPE iban,                               "3365100
           END OF ty_account.

    " Delete Note 3365100

    DATA: lt_account       TYPE TABLE OF ty_account,
          ls_account       TYPE ty_account,
          " Delete Note 3365100
          ls_payee_account TYPE ty_payee_account.

    DATA: lo_edoc_db TYPE REF TO cl_edocument_eu_db,
          lt_bankacc TYPE TABLE OF edoeubankacc,
          ls_bankacc TYPE edoeubankacc.

    CLEAR: lt_bankacc, et_payee_account, lt_account.        " 3365100
    CREATE OBJECT lo_edoc_db.

    IF  iv_hbkid IS NOT INITIAL                             "Begin of 2938424
    AND iv_hktid IS NOT INITIAL.
      ls_bankacc-bukrs = iv_bukrs.
      ls_bankacc-hbkid = iv_hbkid.
      ls_bankacc-hktid = iv_hktid.
      APPEND ls_bankacc TO lt_bankacc.
    ELSE.                                                   "End of 2938424
      lt_bankacc = lo_edoc_db->if_edocument_eu_db~select_edoeubankacc(
                       iv_bukrs = iv_bukrs
                       iv_pay_means = iv_pay_means ).
    ENDIF.
    IF lt_bankacc IS NOT INITIAL.
      TEST-SEAM get_bank_info_op_1.
        " Begin of Note 3365100
        SELECT CompanyCode, HouseBank, i_housebankaccountlinkage~BankCountry, i_housebankaccountlinkage~BankInternalID, HouseBankAccount,
               BankAccount, BankControlKey, BankAccountCurrency, i_housebankaccountlinkage~BankName, i_housebankaccountlinkage~SWIFTCode, I_Bank_2~BankBranch,
               iban
          FROM i_HouseBankAccountLinkage
          LEFT OUTER JOIN I_Bank_2 ON i_housebankaccountlinkage~bankcountry = I_Bank_2~bankcountry AND  i_housebankaccountlinkage~bankinternalid = I_Bank_2~bankinternalid
           FOR ALL ENTRIES IN @lt_bankacc
         WHERE CompanyCode      = @lt_bankacc-bukrs
           AND HouseBank        = @lt_bankacc-hbkid
           AND HouseBankAccount = @lt_bankacc-hktid
                    INTO TABLE @lt_account PRIVILEGED ACCESS.
        " End of Note 3365100
      END-TEST-SEAM.
      IF sy-subrc NE 0.
        CLEAR lt_account.
      ENDIF.
    ELSE.
      TEST-SEAM get_bank_info_op_2.
        " Begin of Note 3365100
        SELECT CompanyCode, HouseBank, i_housebankaccountlinkage~BankCountry, i_housebankaccountlinkage~BankInternalID, HouseBankAccount,
               BankAccount, BankControlKey, BankAccountCurrency, i_housebankaccountlinkage~BankName, i_housebankaccountlinkage~SWIFTCode, I_Bank_2~BankBranch,
               iban
          FROM i_HouseBankAccountLinkage
          LEFT OUTER JOIN I_Bank_2 ON i_housebankaccountlinkage~bankcountry = I_Bank_2~bankcountry AND  i_housebankaccountlinkage~bankinternalid = I_Bank_2~bankinternalid
         WHERE CompanyCode = @iv_bukrs
          INTO TABLE @lt_account PRIVILEGED ACCESS.
        " End of Note 3365100
      END-TEST-SEAM.
      IF sy-subrc NE 0.
        CLEAR lt_account.
      ENDIF.
    ENDIF.
    IF lt_account IS NOT INITIAL.
      TEST-SEAM get_bank_info_op_3.
      END-TEST-SEAM.
      " Delete 3365100
      LOOP AT lt_account INTO ls_account.
        ls_payee_account-banka = ls_account-banka.
        ls_payee_account-banks = ls_account-banks.          "3259089
        ls_payee_account-brnch = ls_account-brnch.
        ls_payee_account-swift = ls_account-swift.
        ls_payee_account-waers = ls_account-waers.
        ls_payee_account-bankl = ls_account-bankl.
        ls_payee_account-hktid = ls_account-hktid.
        ls_payee_account-bankn = ls_account-bankn.          "2885554
        ls_payee_account-iban  = ls_account-iban.           "3365100
        " Delete 3365100
        READ TABLE lt_bankacc INTO ls_bankacc WITH KEY      "Start 2905102
             bukrs = ls_account-bukrs
             hbkid = ls_account-hbkid
             hktid = ls_account-hktid.
        IF sy-subrc EQ 0.
          ls_payee_account-paym_means = ls_bankacc-paym_means.
        ENDIF.                                              "End 2905102
        APPEND ls_payee_account TO et_payee_account.
        CLEAR: ls_account, ls_payee_account.                "3365100
      ENDLOOP.
    ENDIF.
  ENDMETHOD.


METHOD get_blr_document_reference."added with 3328617
  CLEAR: ev_document_reference, ev_document_type_code.
  TRY.
      ev_document_reference = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/ID'
                          iv_xml         = iv_invoice_in_source_file ).

      ev_document_type_code = go_edoc_util_eu->get_value_from_xml_noprefix(
                          iv_value_name  = 'Invoice/InvoiceTypeCode'
                          iv_xml         = iv_invoice_in_source_file ).


    CATCH cx_edocument.
      TRY.
          ev_document_reference = go_edoc_util_eu->get_value_from_xml_noprefix(
                              iv_value_name  = 'CreditNote/ID'
                              iv_xml         = iv_invoice_in_source_file ).

          ev_document_type_code = go_edoc_util_eu->get_value_from_xml_noprefix(
                              iv_value_name  = 'CreditNote/CreditNoteTypeCode'
                              iv_xml         = iv_invoice_in_source_file ).

        CATCH cx_edocument.
          MESSAGE e803(edocument) WITH '.../ID' INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
      ENDTRY.
  ENDTRY.

ENDMETHOD.


METHOD get_country_for_partner. "Added with SAP Note 3042934
  TYPES: BEGIN OF ty_but020,
           addrnumber      TYPE but020-addrnumber,
           addr_valid_from TYPE but020-addr_valid_from,
         END OF ty_but020.

  DATA: lt_but020  TYPE TABLE OF ty_but020,
        ls_but020  TYPE ty_but020.

  CLEAR ev_country.
  TEST-SEAM get_country_for_partner_01.
  SELECT addrnumber addr_valid_from
    INTO CORRESPONDING FIELDS OF TABLE lt_but020
    FROM but020
    WHERE partner = iv_partner.
  END-TEST-SEAM.
  IF sy-subrc = 0.
    SORT lt_but020 BY addr_valid_from DESCENDING.
    READ TABLE lt_but020 INTO ls_but020 INDEX 1.

    SELECT SINGLE country INTO ev_country
      FROM adrc
      WHERE addrnumber = ls_but020-addrnumber.
  ENDIF.
ENDMETHOD.


  METHOD get_customer_bank_det.               "New with 2938424
    DATA: lt_bank_det      TYPE TABLE OF bapicustomer_02,
          ls_bank_det      TYPE bapicustomer_02,
          ls_bank_key      TYPE ty_value_map_multiple,
          ls_payment_means TYPE edo_ubl_payment_means.

    CHECK iv_payment_code IS NOT INITIAL.
* Get All Bank accounts of Customer
    TEST-SEAM bank_det.
      CALL FUNCTION 'BAPI_CUSTOMER_GETDETAIL2'
        EXPORTING
          customerno         = ms_kna1-kunnr
          companycode        = mv_bukrs
        TABLES
          customerbankdetail = lt_bank_det.
    END-TEST-SEAM.
* Read Default Bank Key maintained in Value mapping
    READ TABLE mt_value_map_multiple INTO ls_bank_key
                                     WITH KEY vmapname = gc_value_map_ubl-cust_debit_bank_key
                                              int_value = ms_kna1-kunnr.                            "2992171

    IF sy-subrc EQ 0.
      READ TABLE lt_bank_det INTO ls_bank_det WITH KEY bank_ctry = ls_bank_key-ext_value1
                                                       bank_key = ls_bank_key-ext_value2
                                                       bank_acct = ls_bank_key-ext_value3.
      IF sy-subrc EQ 0 AND ls_bank_det IS NOT INITIAL.
        ls_payment_means-payment_mandate-id-base-base-content = ls_bank_det-bank_acct.
        ls_payment_means-payment_mandate-payer_financial_account-id-base-base-content = ls_bank_det-bank_acct.
        ls_payment_means-payment_means_code-base-base-content = iv_payment_code.
        ls_payment_means-payment_means_code-base-base-list_id = iv_payment_list_id.
        ls_payment_means-payment_due_date-base-content = fill_due_date( ).
        ls_payment_means-payment_id-base-base-content = iv_kidno.
        APPEND ls_payment_means TO rt_payment_means.
        CLEAR ls_payment_means.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_customization_id. "New with 2854416
    DATA:
      lo_edoc_db         TYPE REF TO cl_edocument_eu_db,
      ls_edocument       TYPE edocument,
      lt_edoeudoctype    TYPE edoeudoctype_t,
      ls_edoeudoctype    TYPE edoeudoctype,
      ls_edoeubupadoctyp TYPE edoeubupadoctyp,
      ls_edoeudoctypeid  TYPE edoeudoctypeid,               "3013311
      ls_edoeubupa       TYPE edoeubupa.                    "3013311

    IF ms_source-reference-edoc_guid IS NOT INITIAL.
      " Get eDoc type
      CREATE OBJECT lo_edoc_db.
      TEST-SEAM get_cust_id_01.
        ls_edocument = lo_edoc_db->if_edocument_db~select_edocument(
                          iv_edoc_guid = ms_source-reference-edoc_guid ).
        ls_edoeubupadoctyp = lo_edoc_db->if_edocument_eu_db~select_edoeubupadoctyp(
                              iv_partner_id   = mv_partner_id
                              iv_partner_type = mv_partner_type
                              iv_doc_categ    = mv_doc_categ ).
      END-TEST-SEAM.

      CLEAR ls_edoeudoctypeid.
*     Check if there is a customer specific document type
      IF ls_edoeubupadoctyp IS NOT INITIAL AND
         mv_is_cpd IS INITIAL."3042934
        ls_edoeudoctypeid =
          lo_edoc_db->if_edocument_eu_db~select_edoeudoctypeid(
              iv_doc_type_id = ls_edoeubupadoctyp-doc_type_id ).
* Start of Change 3013311
        IF ls_edoeudoctypeid IS NOT INITIAL.
          TEST-SEAM get_cust_id_03.
            ls_edoeubupa = lo_edoc_db->if_edocument_eu_db~select_edoeubupa(
                            iv_partner_id = mv_partner_id
                            iv_partner_type = mv_partner_type ).
          END-TEST-SEAM.
          IF ls_edoeudoctypeid-is_email_doc_type = abap_true.
            IF ls_edoeubupa-email IS INITIAL.
              MESSAGE e104(edocument_eu) WITH ls_edoeudoctypeid-doc_type_id mv_partner_id
                                         INTO cl_edocument=>gv_error_txt.
              add_error_message( ).
            ENDIF.
          ENDIF.
          IF ls_edoeubupa-email IS NOT INITIAL.
            IF ls_edoeudoctypeid-is_email_doc_type = abap_false.
              MESSAGE e104(edocument_eu) WITH ls_edoeudoctypeid-doc_type_id mv_partner_id
                                         INTO cl_edocument=>gv_error_txt.
              add_error_message( ).
            ENDIF.
          ENDIF.
        ENDIF.
* End of Change 3013311
      ELSE.
*       Determine the document type based on the eDoc type
        TEST-SEAM get_cust_id_02.
          lt_edoeudoctype =
            lo_edoc_db->if_edocument_eu_db~select_edoeudoctype(
                 iv_edoc_type = ls_edocument-edoc_type ).
        END-TEST-SEAM.

        IF ls_edocument-last_procstep <> 'CREATE'.
          mv_resubmit = abap_true.
        ENDIF.
        SORT lt_edoeudoctype BY active_from DESCENDING.

        LOOP AT lt_edoeudoctype INTO ls_edoeudoctype WHERE active_from <= sy-datum.
          EXIT.
        ENDLOOP.
        ls_edoeudoctypeid =
          lo_edoc_db->if_edocument_eu_db~select_edoeudoctypeid(
               iv_doc_type_id = ls_edoeudoctype-doc_type_id ).
      ENDIF.
      mv_doc_type = ls_edoeudoctypeid-doc_type.
      mv_process_id = ls_edoeudoctypeid-process_id.

*     Document Identification: Standard
      SEARCH mv_doc_type FOR '##'.                                              "3013311
      IF SY-SUBRC = 0.                                                          "3013311
        SPLIT mv_doc_type AT '##' INTO mv_doc_id_standard mv_customization_id.
      ELSE.                                                                     "3013311
        mv_customization_id = mv_doc_type.                                      "3013311
      ENDIF.                                                                    "3013311
      SPLIT mv_doc_id_standard AT '::' INTO mv_doc_id_standard mv_doc_id_type.
*     Customization ID, Document Identification: Type Version
      SPLIT mv_customization_id AT '::' INTO mv_customization_id mv_type_version_id.
      mv_sbdh_version_id = mv_type_version_id.

      "Delete UBL version ID for PEPPOL BIS3
      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ).     "3210223
        CLEAR mv_type_version_id.
      ENDIF.

      IF mv_doc_type IS INITIAL.
*       No customization ID determined
        MESSAGE e016(edocument_eu) WITH ls_edocument-edoc_type 'EDOEUDOCTYPEV' INTO cl_edocument=>gv_error_txt.
        add_error_message( ).
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_delivery_date_for_cr_note. "New with 2885554
* Redefine for FI and SD
  ENDMETHOD.


  METHOD GET_MODE_SETTING_UBL.     "New with 3289969
    rv_mode = get_value_mapping(
      iv_vmapname    = 'SETTINGS'    " Value Mapping
      iv_int_value   = 'MODE'     " Internal Value
      iv_err_msg_ind = abap_false ).
    TRANSLATE rv_mode TO UPPER CASE.
  ENDMETHOD.


  method GET_NONTAX_IDTYPES.

    IF iv_party_id_type IS INITIAL.
      RETURN.
    ENDIF.

    TEST-SEAM get_nontax_idtypes_01.                                  "2854416
    SELECT SINGLE bu_id_type
      INTO rv_bu_id_type
      FROM edoeubpidtype
      WHERE party_id_type = iv_party_id_type.
    END-TEST-SEAM.                                                    "2854416
  endmethod.


METHOD get_partner_by_party_id.

  DATA:
    lo_edoc_eu_db      TYPE REF TO cl_edocument_eu_db,
    ls_edoeuparty      TYPE edoeuparty,
    lo_edoc_eu_inbound TYPE REF TO object,
    lv_ns              TYPE string,
    lr_class_desc      TYPE REF TO cl_abap_classdescr.

  CLEAR: ev_bukrs, ev_kunnr, ev_lifnr.

  CREATE OBJECT lo_edoc_eu_db.
  TEST-SEAM get_partner_by_party_id_01.
    ls_edoeuparty = lo_edoc_eu_db->if_edocument_eu_db~select_edoeuparty( iv_party_id_type = iv_party_id_type ).
  END-TEST-SEAM.

  IF ls_edoeuparty-class_inbound IS NOT INITIAL AND
     ls_edoeuparty-method_inbound IS NOT INITIAL.

    TRY .
        lr_class_desc ?= cl_abap_classdescr=>describe_by_object_ref( me ).
        IF lr_class_desc->get_relative_name( ) NE ls_edoeuparty-class_inbound
        AND ls_edoeuparty-class_inbound NE gc_edoc_map_ubl.
          lv_ns = mv_ns.
          CREATE OBJECT lo_edoc_eu_inbound TYPE (ls_edoeuparty-class_inbound)
            EXPORTING
              iv_ns           = lv_ns
              io_edoc_map_ubl = me.
        ELSE.
          lo_edoc_eu_inbound = me.
        ENDIF.

        IF ev_bukrs IS SUPPLIED.
          CALL METHOD lo_edoc_eu_inbound->(ls_edoeuparty-method_inbound)
            EXPORTING
              iv_party_id = iv_party_id
            IMPORTING
              ev_bukrs    = ev_bukrs.
        ELSEIF ev_lifnr IS SUPPLIED.
          CALL METHOD lo_edoc_eu_inbound->(ls_edoeuparty-method_inbound)
            EXPORTING
              iv_party_id = iv_party_id
            IMPORTING
              ev_lifnr    = ev_lifnr.
        ELSEIF ev_kunnr IS SUPPLIED.
          CALL METHOD lo_edoc_eu_inbound->(ls_edoeuparty-method_inbound)
            EXPORTING
              iv_party_id = iv_party_id
            IMPORTING
              ev_kunnr    = ev_kunnr.
        ELSEIF ev_partner IS SUPPLIED.
          CALL METHOD lo_edoc_eu_inbound->(ls_edoeuparty-method_inbound)
            EXPORTING
              iv_party_id = iv_party_id
              iv_party_id_type = iv_party_id_type
            IMPORTING
              ev_partner  = ev_partner.
        ENDIF.

      CATCH cx_dynamic_check.
        MESSAGE e083(edocument) WITH ls_edoeuparty-class_inbound ls_edoeuparty-method_inbound
          INTO cl_edocument=>gv_error_txt.
        add_error_message( ).
      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

  ELSE.
    MESSAGE e009(edocument_eu) WITH iv_party_id_type
      INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.
ENDMETHOD.


  METHOD get_partner_for_customer. "Added with SAP Note 2839436

    DATA: lv_partner_guid TYPE bu_partner_guid,
          lv_partner      TYPE bu_partner.

    CLEAR : lv_partner_guid, ev_partner.
    TEST-SEAM get_partner_for_customer_01.
    SELECT SINGLE partner_guid
      FROM cvi_cust_link
      INTO lv_partner_guid
      WHERE customer = iv_kunnr.
    END-TEST-SEAM.
    IF sy-subrc = 0.
      CLEAR lv_partner.
      CALL FUNCTION 'BUPA_NUMBERS_GET'
        EXPORTING
          iv_partner_guid = lv_partner_guid
        IMPORTING
          ev_partner      = lv_partner.
    ELSE.
      CLEAR lv_partner.
      TEST-SEAM get_partner_for_customer_02.
      SELECT SINGLE partner
        FROM bd001
        INTO lv_partner
        WHERE kunnr = iv_kunnr.
      END-TEST-SEAM.
    ENDIF.
    ev_partner = lv_partner.
  ENDMETHOD.


  METHOD get_partner_for_supplier.                "Added with SAP Note 2854416
    DATA: lv_partner_guid TYPE bu_partner_guid,
          lv_partner      TYPE bu_partner.

    CLEAR: lv_partner_guid, ev_partner.
    TEST-SEAM get_partner_for_supplier_01.
      SELECT SINGLE partner_guid
        FROM cvi_vend_link
        INTO lv_partner_guid
        WHERE vendor = iv_lifnr.
    END-TEST-SEAM.
    IF sy-subrc = 0.
      CLEAR lv_partner.
      CALL FUNCTION 'BUPA_NUMBERS_GET'
        EXPORTING
          iv_partner_guid = lv_partner_guid
        IMPORTING
          ev_partner      = lv_partner.
      ev_partner = lv_partner.
    ELSE.
      CLEAR lv_partner.
      TEST-SEAM get_partner_for_supplier_02.
        SELECT SINGLE partner
          FROM bc001
          INTO lv_partner
          WHERE lifnr = iv_lifnr.
      END-TEST-SEAM.
      IF sy-subrc = 0.
        ev_partner = lv_partner.
      ELSE.
        MESSAGE e056(edocument_eu) WITH iv_lifnr INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_partner_function.  "New with 2968006

    CONSTANTS: lc_null TYPE c VALUE ''.
    DATA: lt_part_func TYPE TABLE OF ty_value_map_multiple,
          ls_part_func TYPE ty_value_map_multiple,
          ls_vbpa      TYPE vbpavb,
          lv_parvw     TYPE parvw.
    CLEAR: es_cust, es_cust_contact, es_payee.
    lt_part_func = mt_value_map_multiple.

    DELETE lt_part_func WHERE vmapname NE gc_value_map_ubl-sales_org_part_func.
    DELETE lt_part_func WHERE int_value NE ms_source-vbrk-vkorg.
    IF lt_part_func IS INITIAL.
      lt_part_func = mt_value_map_multiple.
      DELETE lt_part_func WHERE vmapname NE gc_value_map_ubl-sales_org_part_func.
      DELETE lt_part_func WHERE int_value NE lc_null.
    ENDIF.
    IF lt_part_func IS INITIAL.
      RETURN.
    ENDIF.
    LOOP AT lt_part_func INTO ls_part_func.
      IF es_cust IS REQUESTED.
        lv_parvw = ls_part_func-ext_value1.
      ELSEIF es_cust_contact IS REQUESTED.
        lv_parvw = ls_part_func-ext_value2.
      ENDIF.
      READ TABLE ms_source-vbpa INTO ls_vbpa
                                WITH KEY parvw = lv_parvw.
      IF sy-subrc EQ 0 AND ls_vbpa IS NOT INITIAL.
        EXIT.
      ENDIF.
    ENDLOOP.
    IF es_cust IS REQUESTED.
      es_cust = ls_vbpa.
    ELSEIF es_cust_contact IS REQUESTED.
      es_cust_contact = ls_vbpa.
    ENDIF.

  ENDMETHOD.


  METHOD get_partner_id_and_type."Added with SAP Note 2805246
*   Implementation for SD and FI moved to respective subclasses               "2968006
*   Other source types: Redefine this method in source-type-specific subclass "2968006
  ENDMETHOD.


  METHOD get_party_by_bp_cbe.                               " Added with SAP Note 2938424

    DATA: lv_taxtype  TYPE bptaxtype.

    CLEAR ev_partner.
    IF iv_party_id_type(2) = 'BE'.
      CONCATENATE iv_party_id_type(2) '1' INTO lv_taxtype.
      TEST-SEAM get_party_by_bp_cbe_01.
        SELECT SINGLE partner
          INTO ev_partner
          FROM dfkkbptaxnum
          WHERE taxtype = lv_taxtype
          AND taxnum = iv_party_id.
      END-TEST-SEAM.
      IF sy-subrc IS NOT INITIAL.
        MESSAGE e018(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_bp_idnum.

    DATA: lv_bp_id_type TYPE bu_id_type.

    CLEAR ev_partner.

*  Get the business partner identification type from the mapping table EDOEUBPIDTYPE
    lv_bp_id_type = get_nontax_idtypes( iv_party_id_type = iv_party_id_type ).
    IF NOT lv_bp_id_type IS INITIAL.
      TEST-SEAM get_party_by_bp_idnum_01.                               "2854416
      SELECT SINGLE partner
        INTO ev_partner
        FROM but0id
        WHERE type = lv_bp_id_type
        AND idnumber = iv_party_id.
      END-TEST-SEAM.                                                    "2854416
      IF NOT sy-subrc IS INITIAL.
        MESSAGE e035(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSE.
      MESSAGE e036(edocument_eu) WITH iv_party_id_type 'EDOEUBPIDTYPEV' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.



  ENDMETHOD.


  METHOD get_party_by_bp_orgnr.

    DATA: lv_taxtype  TYPE bptaxtype.

    CLEAR ev_partner.                                       "2938424
    IF iv_party_id_type(2) = 'SE' OR iv_party_id_type(2)  = 'NO'.
      CONCATENATE iv_party_id_type(2) '2' INTO lv_taxtype.
      TEST-SEAM get_party_by_bp_orgnr_01.                   "2854416
      SELECT SINGLE partner
        INTO ev_partner
        FROM dfkkbptaxnum
        WHERE taxtype = lv_taxtype
        AND taxnum = iv_party_id.
      END-TEST-SEAM.                                        "2854416
      IF sy-subrc IS NOT INITIAL.
        MESSAGE e018(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_bp_taxnum.

    DATA: lv_taxtype  TYPE bptaxtype,
          lv_party_id TYPE bptaxnum.

    CLEAR ev_partner.                                       "2938424
    IF iv_party_id_type CS mc_vat_text.

      CONCATENATE iv_party_id_type(2) '0' INTO lv_taxtype.
      lv_party_id = iv_party_id.

      TEST-SEAM get_party_by_bp_taxnum_01.                  "2854416
      SELECT SINGLE partner
        INTO ev_partner
        FROM dfkkbptaxnum
        WHERE taxtype = lv_taxtype
        AND taxnum = lv_party_id.
      END-TEST-SEAM.                                        "2854416
      IF sy-subrc IS NOT INITIAL.
        MESSAGE e018(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSE.
      MESSAGE e037(edocument_eu) WITH iv_party_id_type INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_cbe. "changed with SAP Note 2854416 (moved from class CL_EDOC_MAP_UBL_BE)
*   Get Party by Belgian Crossroad Bank of Enterprises Nr.
    IF ev_bukrs IS SUPPLIED.
      TEST-SEAM get_company_code_by_cbe.
        SELECT SINGLE bukrs INTO ev_bukrs FROM t001z
          WHERE paval = iv_party_id
            AND party = 'BEENTN'.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e062(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_kunnr IS SUPPLIED.
      get_party_by_stcd1(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_kunnr = ev_kunnr ).
    ELSEIF ev_lifnr IS SUPPLIED.
      get_party_by_stcd1(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_lifnr = ev_lifnr ).
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_cbe(                                  "2938424
        EXPORTING iv_party_id      = iv_party_id
                  iv_party_id_type = iv_party_id_type
        IMPORTING ev_partner       = ev_partner ).
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_corp. "Added with SAP Note 3210223

    IF ev_bukrs IS SUPPLIED.
      IF iv_party_id_type(2) EQ 'JP'.
        SELECT SINGLE bukrs INTO ev_bukrs FROM t001z
          WHERE paval = iv_party_id
            AND party = 'JPCCRP'.
        IF sy-subrc = 0.
          RETURN.
        ENDIF.
      ENDIF.
    ELSEIF ev_kunnr IS SUPPLIED.
      SELECT SINGLE kunnr
        FROM kna1
        INTO ev_kunnr
        WHERE stcd3 = iv_party_id.
    ELSEIF ev_lifnr IS SUPPLIED.
      SELECT SINGLE lifnr
        FROM lfa1
        INTO ev_lifnr
        WHERE stcd3 = iv_party_id.
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_taxnum(
        EXPORTING iv_party_id      = iv_party_id
                  iv_party_id_type = 'JP3'
        IMPORTING ev_partner       = ev_partner ).
    ENDIF.

  ENDMETHOD.


  METHOD GET_PARTY_BY_FIELD.
*  determine the Party(Customer, Vendor or Company code) based on the provided field

    TYPES: BEGIN OF ty_kunnr,
             kunnr TYPE kunnr,
           END OF ty_kunnr,

           BEGIN OF ty_lifnr,
             lifnr TYPE lifnr,
           END OF ty_lifnr,

           BEGIN OF ty_bukrs,
             bukrs TYPE bukrs,
           END OF ty_bukrs,

           tty_kunnr TYPE TABLE OF ty_kunnr,
           tty_lifnr TYPE TABLE OF ty_lifnr,
           tty_bukrs TYPE TABLE OF ty_bukrs.

    DATA: lt_t001      TYPE tty_bukrs,
          lt_kna1      TYPE tty_kunnr,
          lt_lfa1      TYPE tty_lifnr,
          lv_condition TYPE string.

    CLEAR: ev_kunnr, ev_lifnr, ev_bukrs.


    CONCATENATE iv_field '= IV_PARTY_ID' INTO lv_condition SEPARATED BY space.

* Retrieve the Customer
    IF ev_kunnr IS SUPPLIED.

      TEST-SEAM get_party_by_field_01.                      "2390901
      SELECT kunnr UP TO 2 ROWS INTO TABLE lt_kna1
        FROM kna1
        WHERE (lv_condition).
      END-TEST-SEAM.                                        "2390901

      IF sy-subrc = 0.
        IF lines( lt_kna1 ) = 1.
          READ TABLE lt_kna1 INTO ev_kunnr INDEX 1.
        ELSE.
*          the party could not be identified - too many retrieved lines
          MESSAGE e017(edocument_eu) INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ELSE.
        MESSAGE e018(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

* Retrieve the Vendor
    ELSEIF ev_lifnr IS SUPPLIED.

      TEST-SEAM get_party_by_field_02.                      "2390901
      SELECT lifnr UP TO 2 ROWS INTO TABLE lt_lfa1
        FROM lfa1
        WHERE (lv_condition).
      END-TEST-SEAM.                                        "2390901

      IF sy-subrc = 0.
        IF lines( lt_lfa1 ) = 1.
          READ TABLE lt_lfa1 INTO ev_lifnr INDEX 1.
        ELSE.
*          the party could not be identified - too many retrieved lines
          MESSAGE e017(edocument_eu) INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ELSE.
        MESSAGE e018(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

* Retrieve the Company Code
    ELSEIF ev_bukrs IS SUPPLIED.

      TEST-SEAM get_party_by_field_03.                      "2390901
      SELECT bukrs UP TO 2 ROWS INTO TABLE lt_t001
        FROM t001
        WHERE (lv_condition).
      END-TEST-SEAM.                                        "2390901

      IF sy-subrc = 0.
        IF lines( lt_t001 ) = 1.
          READ TABLE lt_t001 INTO ev_bukrs INDEX 1.
        ELSE.
*          the party could not be identified - too many retrieved lines
          MESSAGE e017(edocument_eu) INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ELSE.
        MESSAGE e018(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_gln.                                "2390901
    DATA:
      ls_kna1   TYPE kna1,
      lv_offset TYPE i,
      lv_len    TYPE i.

    CLEAR:  ev_kunnr,
            ev_bukrs.

*   determine the customer based on GLN.
    IF ev_kunnr IS SUPPLIED.
      " Split the gln number into bbbnr, bbsnr and bubkz
      lv_offset = 0.
      DESCRIBE FIELD ls_kna1-bbbnr LENGTH lv_len IN CHARACTER MODE.
      ls_kna1-bbbnr = iv_party_id+lv_offset(lv_len).
      lv_offset = lv_offset + lv_len.
      DESCRIBE FIELD ls_kna1-bbsnr LENGTH lv_len IN CHARACTER MODE.
      ls_kna1-bbsnr = iv_party_id+lv_offset(lv_len).
      lv_offset = lv_offset + lv_len.
      DESCRIBE FIELD ls_kna1-bubkz LENGTH lv_len IN CHARACTER MODE.
      ls_kna1-bubkz = iv_party_id+lv_offset(lv_len).

      TEST-SEAM get_party_by_gln_kunnr.
        SELECT SINGLE kunnr FROM kna1 INTO ev_kunnr
          WHERE bbbnr = ls_kna1-bbbnr                  "#EC CI_NOFIELD.
            AND bbsnr = ls_kna1-bbsnr                  "#EC CI_NOFIELD.
            AND bubkz = ls_kna1-bubkz.                 "#EC CI_NOFIELD.
      END-TEST-SEAM.

      IF sy-subrc <> 0.
        MESSAGE e028(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

*   determine the company code based on GLN.
    ELSEIF ev_bukrs IS SUPPLIED.
      TEST-SEAM get_party_by_gln_kunnr02.
        SELECT SINGLE object_key
          INTO ev_bukrs FROM eanc_gln_mapp
          WHERE object = 'BUKRS'
          AND gln = iv_party_id.
      END-TEST-SEAM.
      "Start of Change 3030901
      IF ev_bukrs IS INITIAL.
        TEST-SEAM get_party_by_gln_bukrs01.
        get_party_by_gln_nz(
          EXPORTING
            iv_party_id       = iv_party_id
            iv_party_id_type  = iv_party_id_type
          IMPORTING
            ev_bukrs          = ev_bukrs ).
        END-TEST-SEAM.
        IF ev_bukrs IS INITIAL.
          MESSAGE e027(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ENDIF.
      "End of Change 3030901
    ELSEIF ev_partner IS SUPPLIED.
      TEST-SEAM get_party_by_gln_kunnr03.
        SELECT SINGLE partner
          INTO ev_partner
          FROM but0id
          WHERE type = if_edoc_map_ubl=>gc_bu_id_type-gln   "2992909
          AND idnumber = iv_party_id.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e034(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_party_by_gln_nz.                                  "3030901

    DATA:ls_t001 TYPE t001,
         lt_t001 TYPE STANDARD TABLE OF t001.

    CLEAR: ev_bukrs.

    TEST-SEAM gpbg1.
      SELECT * FROM t001 INTO TABLE lt_t001
        WHERE stceg = iv_party_id.
    END-TEST-SEAM.
    IF sy-subrc EQ 0.
      TEST-SEAM gpbg2.
      READ TABLE lt_t001 INTO ls_t001
        WITH KEY stceg = iv_party_id.
      END-TEST-SEAM.
      IF sy-subrc EQ 0.
        ev_bukrs = ls_t001-bukrs.
      ENDIF.
    ELSE.
      SELECT SINGLE bukrs INTO ev_bukrs FROM t001z WHERE paval = iv_party_id AND party = 'NZBN'.
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_kvk. " added with SAP Note 2854416 (moved from class CL_EDOC_MAP_UBL_NL)

    DATA: ls_kna1   TYPE kna1,
          ls_lfa1   TYPE lfa1,
          ls_offset TYPE i,
          ls_len    TYPE i.

    CLEAR: ev_kunnr,
           ev_bukrs.

    IF ev_bukrs IS SUPPLIED.
      TEST-SEAM read_t001z.
        SELECT SINGLE bukrs INTO ev_bukrs FROM t001z
          WHERE paval = iv_party_id
            AND party = 'CCNR'.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e065(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_kunnr IS SUPPLIED.
      ls_offset = 0.
      DESCRIBE FIELD ls_kna1-bbbnr LENGTH ls_len IN CHARACTER MODE.
      ls_kna1-bbbnr = iv_party_id+ls_offset(ls_len).
      ls_offset = ls_offset + ls_len.
      DESCRIBE FIELD ls_kna1-bubkz LENGTH ls_len IN CHARACTER MODE.
      ls_kna1-bubkz = iv_party_id+ls_offset(ls_len).

      TEST-SEAM read_kna1.
        SELECT SINGLE kunnr INTO ev_kunnr
          FROM kna1
          WHERE bbbnr = ls_kna1-bbbnr                  "#EC CI_NOFIELD.
            AND bubkz = ls_kna1-bubkz.                 "#EC CI_NOFIELD.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e066(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_lifnr IS SUPPLIED.
      ls_offset = 0.
      DESCRIBE FIELD ls_lfa1-bbbnr LENGTH ls_len IN CHARACTER MODE.
      ls_lfa1-bbbnr = iv_party_id+ls_offset(ls_len).
      ls_offset = ls_offset + ls_len.
      DESCRIBE FIELD ls_lfa1-bubkz LENGTH ls_len IN CHARACTER MODE.
      ls_lfa1-bubkz = iv_party_id+ls_offset(ls_len).

      TEST-SEAM read_lfa1.
        SELECT SINGLE lifnr INTO ev_lifnr
          FROM lfa1
          WHERE bbbnr = ls_lfa1-bbbnr                  "#EC CI_NOFIELD.
            AND bubkz = ls_lfa1-bubkz.                 "#EC CI_NOFIELD.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e067(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_idnum(
        EXPORTING iv_party_id      = iv_party_id
                  iv_party_id_type = iv_party_id_type
        IMPORTING ev_partner       = ev_partner ).
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_leitweg_id.   " added with SAP Note 2854416 (moved from class CL_EDOC_MAP_UBL_DE)
    CLEAR: ev_bukrs,
           ev_kunnr,
           ev_lifnr,
           ev_partner.

    IF ev_bukrs IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id = iv_party_id
            iv_param_type    = 'LEITW'
          IMPORTING
            ev_bukrs    = ev_bukrs ).
    ELSEIF ev_kunnr IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id = iv_party_id
            iv_param_type    = 'LEITW'
          IMPORTING
            ev_kunnr    = ev_kunnr ).
    ELSEIF ev_lifnr IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id = iv_party_id
            iv_param_type    = 'LEITW'
          IMPORTING
            ev_lifnr    = ev_lifnr ).
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_idnum(
          EXPORTING iv_party_id      = iv_party_id
                    iv_party_id_type = iv_party_id_type
          IMPORTING ev_partner       = ev_partner ).
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_oin. " added with SAP Note 2854416 (moved from class CL_EDOC_MAP_UBL_NL)

    CLEAR: ev_bukrs,
           ev_kunnr,
           ev_lifnr,
           ev_partner.

    IF ev_bukrs IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id   = iv_party_id
            iv_param_type = 'NLOIN'
          IMPORTING
            ev_bukrs      = ev_bukrs ).
    ELSEIF ev_kunnr IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id   = iv_party_id
            iv_param_type = 'NLOIN'
          IMPORTING
            ev_kunnr      = ev_kunnr ).
    ELSEIF ev_lifnr IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id   = iv_party_id
            iv_param_type = 'NLOIN'
          IMPORTING
            ev_lifnr      = ev_lifnr ).
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_idnum(
        EXPORTING iv_party_id      = iv_party_id
                  iv_party_id_type = iv_party_id_type
        IMPORTING ev_partner       = ev_partner ).
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_orgnr.

    DATA: lv_stceg TYPE stceg.

    TRY.                                                    "2839436
        IF ev_bukrs IS SUPPLIED.
          "Start of change 3210223
          IF iv_party_id_type(2) EQ 'NO'.
            SELECT SINGLE bukrs INTO ev_bukrs FROM t001z
              WHERE paval = iv_party_id
                AND party = 'NO_JUR'.
            IF sy-subrc = 0.
              RETURN.
            ENDIF.
          ENDIF.
          "End of change 3210223
          CONCATENATE '%' iv_party_id '%' INTO lv_stceg.
          IF lv_stceg IS NOT INITIAL AND iv_party_id IS NOT INITIAL.
            SELECT SINGLE bukrs                             "2839436.
                FROM t001
                INTO ev_bukrs
                WHERE land1 = iv_party_id_type+0(2)         "2885554
                AND stceg LIKE lv_stceg.
          ENDIF.
        ELSEIF ev_kunnr IS SUPPLIED.
          SELECT SINGLE kunnr
            FROM kna1
            INTO ev_kunnr
            WHERE stcd2 = iv_party_id.                 "#EC CI_NOFIELD.
        "Start of change 3210223
        ELSEIF ev_lifnr IS SUPPLIED.
          SELECT SINGLE lifnr
            FROM lfa1
            INTO ev_lifnr
            WHERE stcd2 = iv_party_id.                 "#EC CI_NOFIELD.
        "End of change 3210223
        ELSEIF ev_partner IS SUPPLIED.
          get_party_by_bp_orgnr(
            EXPORTING iv_party_id      = iv_party_id
                      iv_party_id_type = iv_party_id_type
            IMPORTING ev_partner       = ev_partner ).
        ENDIF.
      CATCH cx_edocument.                                   "2839436
    ENDTRY.                                                 "2839436
  ENDMETHOD.


  METHOD get_party_by_peppol_id.

    DATA: lv_pure_party_id TYPE edoc_party_id.

*  Remove prefix in SG party ID for type 'DCUID' to correctly get party
    IF iv_party_id_type+2(3) = 'UID'.   "3326386
      lv_pure_party_id = iv_party_id+5. "3326386
    ELSE.                               "3326386
      lv_pure_party_id = iv_party_id.   "3326386
    ENDIF.                              "3326386

    CLEAR: ev_bukrs,
    ev_kunnr,
    ev_lifnr,
    ev_partner.

    IF ev_bukrs IS SUPPLIED.
      get_party_with_param_type(
          EXPORTING
            iv_party_id = lv_pure_party_id "3326386
            iv_param_type    = if_edoc_map_ubl~gc_comp_code_peppol_id_textid
          IMPORTING
            ev_bukrs    = ev_bukrs ).
    ENDIF.
  ENDMETHOD.


  METHOD GET_PARTY_BY_STCD1.
*  determine the Party(Customer, Vendor) based on STCD1 field value
    TRY .                                                  "2839436
    CLEAR: ev_kunnr,
           ev_lifnr,
           ev_bukrs.

        IF ev_kunnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD1'
            IMPORTING
              ev_kunnr    = ev_kunnr ).
        ELSEIF ev_lifnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD1'
            IMPORTING
              ev_lifnr    = ev_lifnr ).
        ENDIF.
    CATCH cx_edocument.                                    "2839436
    ENDTRY.                                                "2839436
  ENDMETHOD.


  METHOD GET_PARTY_BY_STCD2.
*  determine the Party(Customer, Vendor) based on STCD2 field value
    TRY .                                                  "2839436
    CLEAR: ev_kunnr,
           ev_lifnr,
           ev_bukrs.

        IF ev_kunnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD2'
            IMPORTING
              ev_kunnr    = ev_kunnr ).
        ELSEIF ev_lifnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD2'
            IMPORTING
              ev_lifnr    = ev_lifnr ).
        ENDIF.
    CATCH cx_edocument.                                    "2839436
    ENDTRY.                                                "2839436
  ENDMETHOD.


  METHOD GET_PARTY_BY_STCD3.
*  determine the Party(Customer, Vendor) based on STCD3 field value
    CLEAR: ev_kunnr,
           ev_lifnr,
           ev_bukrs.
    TRY.
        IF ev_kunnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD3'
            IMPORTING
              ev_kunnr    = ev_kunnr ).
        ELSEIF ev_lifnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD3'
            IMPORTING
              ev_lifnr    = ev_lifnr ).
        ENDIF.
      CATCH cx_edocument.
    ENDTRY.

  ENDMETHOD.


  METHOD GET_PARTY_BY_STCD4.
*  determine the Party(Customer, Vendor) based on STCD4 field value
    CLEAR: ev_kunnr,
           ev_lifnr,
           ev_bukrs.
    TRY.
        IF ev_kunnr IS SUPPLIED.
          get_party_by_field(
             EXPORTING
               iv_party_id = iv_party_id
               iv_field    = 'STCD4'
             IMPORTING
               ev_kunnr    = ev_kunnr ).
        ELSEIF ev_lifnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD4'
            IMPORTING
              ev_lifnr    = ev_lifnr ).
        ENDIF.
      CATCH cx_edocument .

    ENDTRY.

  ENDMETHOD.


  METHOD GET_PARTY_BY_STCD5.
*  determine the Party(Customer, Vendor) based on STCD5 field value
    CLEAR: ev_kunnr,
           ev_lifnr,
           ev_bukrs.
    TRY.
        IF ev_kunnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCD5'
            IMPORTING
              ev_kunnr    = ev_kunnr ).
        ELSEIF ev_lifnr IS SUPPLIED.
          get_party_by_field(
             EXPORTING
               iv_party_id = iv_party_id
               iv_field    = 'STCD5'
             IMPORTING
               ev_lifnr    = ev_lifnr ).
        ENDIF.
      CATCH cx_edocument .

    ENDTRY.

  ENDMETHOD.


  METHOD GET_PARTY_BY_STCEG.
*  determine the Party(Customer, Vendor or Company code) based on VAT Registration Number
    TRY.                                                   "2839436
    CLEAR: ev_kunnr,
           ev_lifnr,
           ev_bukrs.

        IF ev_kunnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCEG'
            IMPORTING
              ev_kunnr    = ev_kunnr ).
        ELSEIF ev_lifnr IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCEG'
            IMPORTING
              ev_lifnr    = ev_lifnr ).
        ELSEIF ev_bukrs IS SUPPLIED.
          get_party_by_field(
            EXPORTING
              iv_party_id = iv_party_id
              iv_field    = 'STCEG'
            IMPORTING
              ev_bukrs    = ev_bukrs ).
        ENDIF.

    CATCH cx_edocument.                                    "2839436
    ENDTRY.                                                "2839436
  ENDMETHOD.


  METHOD GET_PARTY_BY_TAX_NUMBER1. "Added with 3259089
    DATA: lv_party type t001z-party.

    IF ev_bukrs IS SUPPLIED.
      CONCATENATE 'SAP' iv_party_id_type(2) '1' INTO lv_party.
      SELECT SINGLE bukrs INTO ev_bukrs FROM t001z
        WHERE paval = iv_party_id
          AND party = lv_party.
      IF sy-subrc <> 0.
        MESSAGE e031(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_kunnr IS SUPPLIED.
      get_party_by_stcd1(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_kunnr = ev_kunnr ).
    ELSEIF ev_lifnr IS SUPPLIED.
      get_party_by_stcd1(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_lifnr = ev_lifnr ).
    ENDIF.
  ENDMETHOD.


  METHOD GET_PARTY_BY_UEN_UBL.

    DATA: lv_pure_party_id TYPE edoc_party_id.

*  Remove prefix in Singapore party ID to correctly get party
*  For legacy solutions, the importing party ID may not contain any prefix
    lv_pure_party_id = iv_party_id.       "3328617
    IF iv_party_id_type(2) = 'SG'.        "3326386
      IF lv_pure_party_id(2) = 'SG'.      "3328617
        lv_pure_party_id = iv_party_id+5. "3326386
      ENDIF.                              "3328617
    ENDIF.                                "3326386

    IF ev_bukrs IS SUPPLIED.
      SELECT SINGLE bukrs INTO ev_bukrs FROM t001z
        WHERE paval = lv_pure_party_id
          AND party = 'SG_UEN'.
      IF sy-subrc <> 0.
        MESSAGE e114(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.      "3085941
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_kunnr IS SUPPLIED.
      get_party_by_stcd3(
        EXPORTING iv_party_id = lv_pure_party_id
        IMPORTING ev_kunnr = ev_kunnr ).
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_taxnum(
        EXPORTING iv_party_id      = lv_pure_party_id
                  iv_party_id_type = 'SG3' "iv_party_id_type
        IMPORTING ev_partner       = ev_partner ).
    ENDIF.

  ENDMETHOD.


  METHOD get_party_by_vat_number.

    IF ev_bukrs IS SUPPLIED.
      get_party_by_stceg(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_bukrs = ev_bukrs ).
    ELSEIF ev_kunnr IS SUPPLIED.
      get_party_by_stceg(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_kunnr = ev_kunnr ).
    ELSEIF ev_lifnr IS SUPPLIED.
      get_party_by_stceg(
        EXPORTING iv_party_id = iv_party_id
        IMPORTING ev_lifnr = ev_lifnr ).
    ELSEIF ev_partner IS SUPPLIED.
      get_party_by_bp_taxnum(
        EXPORTING iv_party_id = iv_party_id
                  iv_party_id_type = iv_party_id_type
        IMPORTING ev_partner = ev_partner ).
    ENDIF.

  ENDMETHOD.


METHOD get_party_id_and_type.
* Determine the Party ID dynamically for outbound message

  DATA:
    lo_edoc_eu_db    TYPE REF TO cl_edocument_eu_db,
    lo_edoc_outbound TYPE REF TO object,
    ls_edoeuparty    TYPE edoeuparty,
    ls_edoeucomp     TYPE edoeucomp,
    ls_edoeubupa     TYPE edoeubupa,
    lv_ns            TYPE string,
    lr_class_desc    TYPE REF TO cl_abap_classdescr,
    lv_party_id      TYPE edoc_party_id,                "2968006
    lv_email         TYPE ad_smtpadr.                   "3071425

"if it is onetime customer
  IF iv_is_cpd IS NOT INITIAL.                                   "3071425
    TRY.                                                         "3071425
     read_cpd_party_id(                                          "3071425
       IMPORTING                                                 "3071425
         ev_party_id_type   = ev_party-party_id_type             "3071425
         ev_party_code_type = ev_party-party_code_type           "3071425
         ev_party_id        = ev_party-party_id                  "3071425
         ev_email           = lv_email ).                        "3071425
      CATCH cx_edocument.                                        "3071425
        add_error_message( ).                                    "3071425
    ENDTRY.                                                      "3071425
    ms_party_receiver-party_id_type   = ev_party-party_id_type.  "3071425
    ms_party_receiver-party_code_type = ev_party-party_code_type."3071425
    ms_party_receiver-party_id        = ev_party-party_id.       "3071425
    ms_party_receiver-email           = lv_email.                "3071425
    mv_is_cpd                         = iv_is_cpd.               "3071425
  ENDIF.                                                         "3071425

  IF iv_partner_id IS SUPPLIED AND
    iv_partner_type IS SUPPLIED OR
     iv_bukrs IS SUPPLIED.

    CREATE OBJECT lo_edoc_eu_db.

*   Customer
    IF iv_partner_id IS SUPPLIED AND
       iv_partner_type IS SUPPLIED AND
       iv_is_cpd IS INITIAL.                                     "3071425

      TEST-SEAM get_party_id_and_type_01.
      lo_edoc_eu_db->if_edocument_eu_db~select_edoeubupa(
        EXPORTING
          iv_partner_id   = iv_partner_id
          iv_partner_type = iv_partner_type
        RECEIVING
          rs_edoeubupa    = ls_edoeubupa ).
      END-TEST-SEAM.
      IF iv_return EQ abap_true.
        ev_party-email = ls_edoeubupa-email.         "2968006
      ELSE.
        ms_party_receiver-email = ls_edoeubupa-email."2968006
      ENDIF.

      IF ls_edoeubupa-party_id_type IS NOT INITIAL.
        ms_party_receiver-party_id_type = ls_edoeubupa-party_id_type.

        TEST-SEAM get_party_id_and_type_02.
        ls_edoeuparty = lo_edoc_eu_db->if_edocument_eu_db~select_edoeuparty(
                        iv_party_id_type = ls_edoeubupa-party_id_type ).
        END-TEST-SEAM.
        IF iv_return EQ abap_true.                                                "2968006
          ev_party-party_code_type = ls_edoeuparty-party_code_type.               "2968006
        ELSE.                                                                     "2968006
          ms_party_receiver-party_code_type = ls_edoeuparty-party_code_type.      "2968006
        ENDIF.                                                                    "2968006

        IF ls_edoeuparty-class_outbound IS NOT INITIAL AND
           ls_edoeuparty-method_outbound IS NOT INITIAL.

          TRY.
              lr_class_desc ?= cl_abap_classdescr=>describe_by_object_ref( me ).
              IF lr_class_desc->get_relative_name( ) NE ls_edoeuparty-class_outbound
              AND ls_edoeuparty-class_outbound NE gc_edoc_map_ubl.
                lv_ns = mv_ns.
                CREATE OBJECT lo_edoc_outbound TYPE (ls_edoeuparty-class_outbound)
                  EXPORTING
                    iv_ns           = lv_ns
                    io_edoc_map_ubl = me.
              ELSE.
                lo_edoc_outbound = me.
              ENDIF.

              IF iv_partner_type = cl_edoc_dpp=>gc_customer.
                CALL METHOD lo_edoc_outbound->(ls_edoeuparty-method_outbound)
                  EXPORTING
                    iv_kunnr    = iv_partner_id
                  IMPORTING
                    ev_party_id = lv_party_id.

              ELSEIF iv_partner_type = cl_edoc_dpp=>gc_vendor.
                CALL METHOD lo_edoc_outbound->(ls_edoeuparty-method_outbound)
                  EXPORTING
                    iv_lifnr    = iv_partner_id
                  IMPORTING
                    ev_party_id = lv_party_id.
              ELSEIF iv_partner_type = cl_edoc_dpp=>gc_partner.
                CALL METHOD lo_edoc_outbound->(ls_edoeuparty-method_outbound)
                  EXPORTING
                    iv_partner  = iv_partner_id
                  IMPORTING
                    ev_party_id = lv_party_id.
              ENDIF.
              IF iv_return EQ abap_true.                       "2968006
                ev_party-party_id = lv_party_id.               "2968006
              ELSE.                                            "2968006
                ms_party_receiver-party_id = lv_party_id.      "2968006
              ENDIF.                                           "2968006

            CATCH cx_dynamic_check.
              MESSAGE e083(edocument)
                 WITH ls_edoeuparty-class_outbound ls_edoeuparty-method_outbound
                 INTO cl_edocument=>gv_error_txt.
              add_error_message( ).
            CATCH cx_edocument.
              add_error_message( ).
          ENDTRY.
        ELSE.
          MESSAGE e004(edocument_eu)
             WITH ls_edoeucomp-party_id_type
             INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
        ENDIF.

      ELSEIF ls_edoeubupa-email IS INITIAL."2968006
        MESSAGE e005(edocument_eu)
           WITH iv_partner_id  iv_partner_type
           INTO cl_edocument=>gv_error_txt.
        add_error_message( ).
      ENDIF.
    ENDIF.

*   Company Code
    IF iv_bukrs IS SUPPLIED.
      CLEAR ls_edoeuparty.
      CLEAR lv_party_id.
      TEST-SEAM get_party_id_and_type_03.
                                                                                                          "3365100
        ls_edoeucomp = lo_edoc_eu_db->if_edocument_eu_db~select_edoeucomp( iv_bukrs = iv_bukrs                            "3365100
                                                                           iv_comm_channel = ls_edoeubupa-comm_channel ). "3365100
        "error message
      END-TEST-SEAM.

      IF ls_edoeucomp-party_id_type IS NOT INITIAL.
        IF iv_return EQ abap_true.                                    "2968006
          ev_party-party_id_type = ls_edoeucomp-party_id_type.        "2968006
        ELSE.                                                         "2968006
          ms_party_sender-party_id_type = ls_edoeucomp-party_id_type.
        ENDIF.                                                        "2968006

        TEST-SEAM get_party_id_and_type_04.
        ls_edoeuparty = lo_edoc_eu_db->if_edocument_eu_db~select_edoeuparty( iv_party_id_type = ls_edoeucomp-party_id_type ).
        END-TEST-SEAM.
        IF iv_return EQ abap_true.                                    "2968006
          ev_party-party_code_type = ls_edoeuparty-party_code_type.   "2968006
        ELSE.                                                         "2968006
          ms_party_sender-party_code_type = ls_edoeuparty-party_code_type.
        ENDIF.                                                        "2968006

        IF ls_edoeuparty-class_outbound IS NOT INITIAL AND
           ls_edoeuparty-method_outbound IS NOT INITIAL.

          TRY.
              lr_class_desc ?= cl_abap_classdescr=>describe_by_object_ref( me ).
              IF lr_class_desc->get_relative_name( ) NE ls_edoeuparty-class_outbound
              AND ls_edoeuparty-class_outbound NE gc_edoc_map_ubl.
                lv_ns = mv_ns.
                CREATE OBJECT lo_edoc_outbound TYPE (ls_edoeuparty-class_outbound)
                  EXPORTING
                    iv_ns           = lv_ns
                    io_edoc_map_ubl = me.
              ELSE.
                lo_edoc_outbound = me.
              ENDIF.

              CALL METHOD lo_edoc_outbound->(ls_edoeuparty-method_outbound)
                EXPORTING
                  iv_bukrs    = iv_bukrs
                IMPORTING
                  ev_party_id = lv_party_id.

              IF iv_return EQ abap_true.                          "2968006
                ev_party-party_id = lv_party_id.                  "2968006
              ELSE.                                               "2968006
               ms_party_sender-party_id = lv_party_id.
              ENDIF.                                              "2968006

            CATCH cx_dynamic_check.
              MESSAGE e083(edocument)
                 WITH ls_edoeuparty-class_outbound ls_edoeuparty-method_outbound
                 INTO cl_edocument=>gv_error_txt.
              add_error_message( ).
            CATCH cx_edocument.
              add_error_message( ).
          ENDTRY.
        ELSE.
          MESSAGE e004(edocument_eu)
             WITH ls_edoeucomp-party_id_type
             INTO cl_edocument=>gv_error_txt.
          add_error_message( ).
        ENDIF.
      ELSE.
        MESSAGE e006(edocument_eu)
           WITH iv_bukrs
           INTO cl_edocument=>gv_error_txt.
        add_error_message( ).
      ENDIF.
    ENDIF.

  ELSE.
    MESSAGE e007(edocument_eu)
       WITH 'GET_PARTY_ID_AND_TYPE'
       INTO cl_edocument=>gv_error_txt.
    add_error_message( ).
  ENDIF.

ENDMETHOD.


  METHOD get_party_with_param_type.                         " 2390901

    DATA: ls_t001z TYPE t001z,
          lt_t001z TYPE STANDARD TABLE OF t001z,            "2854416
          lt_adr11 TYPE STANDARD TABLE OF adr11,
          ls_adr11 TYPE adr11.

    CLEAR: ev_bukrs,
           ev_kunnr,                                        "2854416
           ev_lifnr,                                        "2854416
           ev_partner.                                      "2854416
    IF ev_bukrs IS SUPPLIED.
      TEST-SEAM get_party_with_param_type_05.               "Start 2854416
      SELECT *
        FROM t001z
        UP TO 2 ROWS
        INTO TABLE lt_t001z
        WHERE paval = iv_party_id
          AND party = iv_param_type.
      END-TEST-SEAM.

      IF sy-subrc = 0 AND lines( lt_t001z ) = 1.
        READ TABLE lt_t001z
          INTO ls_t001z
          INDEX 1.                                          "End 2854416
        ev_bukrs = ls_t001z-bukrs.
      ELSE.
        MESSAGE e031(edocument_eu) WITH iv_party_id INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

    ELSEIF ev_kunnr IS SUPPLIED.
      TEST-SEAM get_party_with_param_type_01.               "2854416
      SELECT * FROM adr11 INTO TABLE lt_adr11
        WHERE date_from <= sy-datum.
      END-TEST-SEAM.                                        "2854416

      IF NOT lt_adr11 IS INITIAL.
        SORT lt_adr11 BY date_from DESCENDING.
        LOOP AT lt_adr11 INTO ls_adr11                      "2854416
          WHERE ssfid = iv_party_id.                        "2854416
          TEST-SEAM get_party_with_param_type_04.           "2854416
          SELECT SINGLE kunnr INTO ev_kunnr FROM kna1
            WHERE adrnr = ls_adr11-addrnumber.         "#EC CI_NOFIELD.
          END-TEST-SEAM.                                    "2854416
          IF NOT ev_kunnr IS INITIAL.
            EXIT.
          ENDIF.
        ENDLOOP.                                            "Start 2854416
      ENDIF.
      IF ev_kunnr IS INITIAL.
        MESSAGE e032(edocument_eu)
          WITH iv_party_id
          INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF ev_lifnr IS SUPPLIED.
      CLEAR lt_adr11.
      TEST-SEAM get_party_with_param_type_02.
      SELECT * FROM adr11 INTO TABLE lt_adr11
        WHERE date_from <= sy-datum.
      END-TEST-SEAM.

      IF NOT lt_adr11 IS INITIAL.
        SORT lt_adr11 BY date_from DESCENDING.
        CLEAR ls_adr11.
        LOOP AT lt_adr11 INTO ls_adr11
          WHERE ssfid = iv_party_id.
          TEST-SEAM get_party_with_param_type_03.
          SELECT SINGLE lifnr INTO ev_lifnr FROM lfa1
             WHERE adrnr = ls_adr11-addrnumber.      "#EC CI_NOFIELD.
          END-TEST-SEAM.
          IF NOT ev_lifnr IS INITIAL.
            EXIT.
          ENDIF.
        ENDLOOP.
      ENDIF.
      IF ev_lifnr IS INITIAL.
        MESSAGE e055(edocument_eu)
          WITH iv_party_id
          INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.                                                "End 2854416
    ENDIF.

  ENDMETHOD.


  method GET_PAYMENT_MEANS_CODE."2938424

    DATA:
         lv_intca       TYPE intca,
         lv_vmapname    TYPE char20,
         lv_tax_country TYPE land1.                 "3085941

    FIELD-SYMBOLS: <fs_tax_country_tab> TYPE table, "3085941
                   <fs_tax_country>     TYPE any.   "3085941

*   Begin of change 3085941
    ASSIGN COMPONENT 'TAX_COUNTRY' OF STRUCTURE ms_source-source_header TO <fs_tax_country_tab>.
    IF <fs_tax_country_tab> IS ASSIGNED.
      READ TABLE <fs_tax_country_tab> INDEX 1 ASSIGNING <fs_tax_country>.
    ENDIF.
    IF <fs_tax_country> IS ASSIGNED.
      lv_tax_country = <fs_tax_country>.
    ELSE.
      lv_tax_country = ms_source-source_header-land.
    ENDIF.
*   End of 3085941
    CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
      EXPORTING
        sap_code  = lv_tax_country                    "3085941
      IMPORTING
        iso_code  = lv_intca
      EXCEPTIONS
        not_found = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
      MESSAGE e072(edocument_eu)
          WITH lv_tax_country                         "3085941
          INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.

    IF lv_intca IS NOT INITIAL.
      CONCATENATE lv_intca '_PAYM_MEANS_CODE' INTO lv_vmapname.

      rt_payment_means_code = get_value_mapping( iv_vmapname  = lv_vmapname
                                                 iv_int_value = iv_zlsch ).
    ENDIF.

    IF rt_payment_means_code IS INITIAL.
*   Allow mapping of a default value (when ls_bseg-zlsch is empty)
      rt_payment_means_code = get_value_mapping( iv_vmapname  = 'PAYMENT_MEANS_CODE'
                                                 iv_int_value = iv_zlsch ).
    ENDIF.

  endmethod."2938424


  METHOD get_self_billing_indicator. "added with SAP Note 3013311

    DATA: lo_edoc_db   TYPE REF TO cl_edocument_eu_db,
          ls_edocument TYPE edocument.

    CREATE OBJECT lo_edoc_db.
    ls_edocument = lo_edoc_db->if_edocument_db~select_edocument(
                               iv_edoc_guid = ms_source-reference-edoc_guid ).

    IF ls_edocument-edoc_type CS 'SB'.
      mv_is_self_billing = abap_true.
    ENDIF.

  ENDMETHOD.


  METHOD GET_SEPA_MANDATE. "New with 2871404
* Redefine for FI and SD
  ENDMETHOD.


METHOD get_source_document_data.

  DATA:
    lo_source     TYPE REF TO cl_edoc_source,

    ls_src_header TYPE edoc_src_header,           "2968006 del
    ls_source     TYPE edoc_ubl_mapping_source,
    lv_intf_id      TYPE edoc_interface_id,       "2968006
    lv_class_name   TYPE edoc_mapping_class,      "2968006
    lo_edoc_map_ubl TYPE REF TO cl_edoc_map_ubl.  "2968006

  FIELD-SYMBOLS:
    <ls_source> TYPE edoc_ubl_mapping_source.

  CONSTANTS:                                              "2968006
    lc_proc_step TYPE edoc_process_step VALUE 'REQ_SEND'. "2968006

* Retrieve source document and map according to source type
  lo_source    = io_edocument->get_source( ).
  ls_src_header = lo_source->get_header( ).

* Source and Target structures are prepared
* For SD and FI invoice same source structure is used in UBL Countries, FI data is always filled,
* SD related data is only filled in case source is SD
* Keeping cases of SD and FI for backwards compatibility with E-Mail process (EUINVM) "2968006
  CASE ls_src_header-source_type.
    WHEN cl_edoc_source_fi_invoice=>gc_src_fi_invoice.  " FI Invoice

      CREATE OBJECT lo_edoc_map_ubl TYPE cl_edoc_map_ubl_fi "2968006
        EXPORTING iv_ns = '/EDUBL'.                         "2968006

    WHEN cl_edoc_source_sd_invoice=>gc_src_sd_invoice.  " SD Invoice

      CREATE OBJECT lo_edoc_map_ubl TYPE cl_edoc_map_ubl_sd "2968006
        EXPORTING iv_ns = '/EDUBL'.                         "2968006

    WHEN gc_src_isu_invoice. " IS-U Invoice

ENHANCEMENT-POINT edoc_eu_isu01 SPOTS es_edocument_eu STATIC .

* Start of 2805246
    WHEN gc_src_ci_docum.

ENHANCEMENT-POINT EDOC_EU_CID01 SPOTS ES_EDOCUMENT_EU STATIC .
* End of 2805246
* Begin of 2938424
    WHEN gc_src_stlmt_invoice.
ENHANCEMENT-POINT EDOC_EU_STLMT01 SPOTS ES_EDOCUMENT_EU STATIC .
* End of 2938424
    WHEN OTHERS.

*     Start SAP Note 2968006
      io_edocument->determine_interface_id(
           EXPORTING iv_process_step = lc_proc_step
           RECEIVING rv_interface_id = lv_intf_id ).
      IF lv_intf_id IS INITIAL.
        MESSAGE e034(edocument) WITH lc_proc_step
          INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
      lv_class_name = io_edocument->determine_mapping_class(
        iv_interface_id = lv_intf_id ).

      TRY.
        CREATE OBJECT lo_edoc_map_ubl TYPE (lv_class_name)
          EXPORTING iv_ns = '/EDUBL'.
        CATCH cx_sy_create_object_error.
          MESSAGE e124(edocument) WITH 'CL_EDOC_MAP_UBL'
            INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
      ENDTRY.
*     End SAP Note 2968006

  ENDCASE.

* Start of SAP Note 2968006
  IF ls_source IS INITIAL.
*   Source-specific subclass must implement this method
    lo_edoc_map_ubl->get_ubl_mapping_source(
      EXPORTING io_edocument = io_edocument
                io_source = lo_source
      RECEIVING rs_ubl_mapping_source = ls_source ).

    IF ls_source IS INITIAL.
*     Source document type &1 not considered in AIF connector
      MESSAGE e016(edocument) WITH ls_src_header-source_type
         INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.
  ENDIF.
* End of SAP Note 2968006

  CREATE DATA rd_source_data TYPE edoc_ubl_mapping_source.
  ASSIGN rd_source_data->* TO <ls_source>.
  MOVE-CORRESPONDING ls_source TO <ls_source>.

ENDMETHOD.


  METHOD get_supplier_bank_det. "Added with 3030901

    TEST-SEAM get_supplier_bank_det_01.
      SELECT a~bankl a~bankn b~iban c~banka c~swift c~brnch
                 INTO CORRESPONDING FIELDS OF TABLE et_payee_account
                 FROM lfbk AS a LEFT OUTER JOIN tiban AS b
                   ON a~banks = b~banks
                  AND a~bankl = b~bankl
                  AND a~bankn = b~bankn
                  AND a~bkont = b~bkont
                  LEFT OUTER JOIN bnka AS c
                   ON a~banks = c~banks
                  AND a~bankl = c~bankl
                WHERE lifnr = ms_vendor-lifnr.
    END-TEST-SEAM.

  ENDMETHOD.


  METHOD GET_SYSTEM_ROLE.     "New with 3289969
* Get system/client role
    CALL FUNCTION 'TR_SYS_PARAMS'
      IMPORTING
        system_client_role = rv_system_role
      EXCEPTIONS
        no_systemname      = 1
        no_systemtype      = 2
        OTHERS             = 3.
    IF sy-subrc NE 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


METHOD get_ubl_mapping_source.
* Added with SAP Note 2968006
* ---------------------------
* Method must be implemented in source-type-specific subclass to get source document data
* e.g. implementation for SD is done in CL_EDOC_MAP_UBL_SD, FI in CL_EDOC_MAP_UBL_FI
* ---------------------------
  " Start of SAP Note 3134550
  DATA lo_edocument_eu TYPE REF TO cl_edocument_eu.

  IF io_edocument->mo_process->ms_process_attr-last_procstep = 'DISPL_HTML'.
    lo_edocument_eu ?= io_edocument.
    IF lo_edocument_eu IS BOUND.
      rs_ubl_mapping_source-file = lo_edocument_eu->mv_xml_for_html_display.
    ENDIF.
    rs_ubl_mapping_source-map_control-preview = abap_true.
  ENDIF.
  " End of SAP Note 3134550

ENDMETHOD.


  METHOD init_header_item_texts.

    TYPES: BEGIN OF ty_tdkey,
             tdobj   TYPE thead-tdobject,
             tdname  TYPE thead-tdname,
             line_id TYPE edoc_eu_line_id,
           END OF ty_tdkey,

           BEGIN OF ty_vbelv,
             vbelv TYPE c LENGTH 10,
           END OF ty_vbelv.

    DATA:ls_bseg        TYPE bseg,
         ls_item_number LIKE LINE OF mt_item_number,
         lv_count       TYPE i,
         lt_tdkey       TYPE TABLE OF ty_tdkey,
         ls_tdkey       TYPE ty_tdkey,
         lt_vbelv       TYPE TABLE OF ty_vbelv,
         lt_selection   TYPE TABLE OF thead,
         lt_selec_all   TYPE TABLE OF thead,
         lt_text        TYPE TABLE OF tline,
         ls_vbrp        TYPE vbrp,
         ls_vbelv       TYPE ty_vbelv,
         lv_vbelv       TYPE vbeln_von,
         lv_posnv       TYPE posnr_von.

    FIELD-SYMBOLS:
      <ls_text>        TYPE tline,
      <ls_headitm_txt> LIKE LINE OF mt_header_item_texts,
      <ls_selection>   TYPE thead,
      <ls_tdkey>       TYPE ty_tdkey.

    CLEAR mt_header_item_texts.
* Fill LT_TDKEY table
* This table is linking line id, header texts, item texts and preceding documents
* BELEG = header text, DOC_ITEM = item text; VBBK = header text, VBBP = item text
    CASE ms_source-source_header-source_type.
      WHEN cl_edoc_source_fi_invoice=>gc_src_fi_invoice.
        ls_tdkey-tdobj = 'BELEG'.
        ls_tdkey-tdname = ms_source-source_header-source_key.
        APPEND ls_tdkey TO lt_tdkey.
        ls_tdkey-tdobj = 'DOC_ITEM'.
        LOOP AT ms_source-bseg INTO ls_bseg.
          ls_tdkey-line_id = ls_bseg-buzei.
          CONCATENATE ms_source-source_header-source_key ls_bseg-buzei INTO ls_tdkey-tdname.
          APPEND ls_tdkey TO lt_tdkey.
        ENDLOOP.
      WHEN cl_edoc_source_sd_invoice=>gc_src_sd_invoice.
*     Get sales order number
        SELECT DISTINCT vbelv                     "#EC CI_NOFIELD
          FROM vbfa
          INTO TABLE lt_vbelv
         WHERE vbeln = ms_source-vbrk-vbeln
          AND  vbtyp_v = 'C'.

        APPEND VALUE #( tdobj = 'VBBK' tdname = ms_source-vbrk-vbeln ) TO lt_tdkey.

        LOOP AT lt_vbelv INTO ls_vbelv.
          APPEND VALUE #( tdobj = 'VBBK' tdname = ls_vbelv-vbelv ) TO lt_tdkey.
        ENDLOOP.

        LOOP AT ms_source-vbrp INTO ls_vbrp.
          ls_tdkey-line_id = ls_vbrp-posnr.
          ls_tdkey-tdobj = 'VBBP'.
          CONCATENATE ms_source-vbrk-vbeln ls_vbrp-posnr INTO ls_tdkey-tdname.
          APPEND ls_tdkey TO lt_tdkey.

          SELECT vbelv posnv                      "#EC CI_NOFIELD
            FROM vbfa
            INTO (lv_vbelv, lv_posnv) UP TO 1 ROWS
           WHERE vbeln = ms_source-vbrk-vbeln
            AND  posnn = ls_vbrp-posnr
            AND  vbtyp_v = 'C' .
          ENDSELECT.

          IF sy-subrc IS INITIAL.
            ls_tdkey-tdobj = 'VBBP'.
            CONCATENATE lv_vbelv lv_posnv INTO ls_tdkey-tdname.
            APPEND ls_tdkey TO lt_tdkey.
          ENDIF.
        ENDLOOP.
      WHEN OTHERS.
        RETURN.
    ENDCASE.

    LOOP AT lt_tdkey INTO ls_tdkey.
      CLEAR lt_selection.
      CALL FUNCTION 'SELECT_TEXT'
        EXPORTING
          object     = ls_tdkey-tdobj
          name       = ls_tdkey-tdname
          id         = '*'
          language   = '*'
        TABLES
          selections = lt_selection
        EXCEPTIONS
          OTHERS     = 0.
      APPEND LINES OF lt_selection TO lt_selec_all.
    ENDLOOP.

    LOOP AT lt_selec_all ASSIGNING <ls_selection>.
      CLEAR lt_text.
      CALL FUNCTION 'READ_TEXT'
        EXPORTING
          object   = <ls_selection>-tdobject
          name     = <ls_selection>-tdname
          id       = <ls_selection>-tdid
          language = <ls_selection>-tdspras
        TABLES
          lines    = lt_text
        EXCEPTIONS
          OTHERS   = 0.

*    add all text lines to the table, which will later be the import parameter
      LOOP AT lt_text ASSIGNING <ls_text>.
        APPEND INITIAL LINE TO mt_header_item_texts ASSIGNING <ls_headitm_txt>.
        <ls_headitm_txt>-tdobject = <ls_selection>-tdobject.
        <ls_headitm_txt>-tdname   = <ls_selection>-tdname.
        <ls_headitm_txt>-tdid     = <ls_selection>-tdid.
        <ls_headitm_txt>-tdspras  = <ls_selection>-tdspras.
        <ls_headitm_txt>-tdformat = <ls_text>-tdformat.
        <ls_headitm_txt>-tdline   = <ls_text>-tdline.

*     text line belongs to which g/l account
        READ TABLE lt_tdkey ASSIGNING <ls_tdkey>
          WITH KEY tdobj = <ls_selection>-tdobject
                   tdname = <ls_selection>-tdname.
        IF sy-subrc IS INITIAL.
          IF ms_source-source_header-source_type = cl_edoc_source_fi_invoice=>gc_src_fi_invoice.
            READ TABLE mt_item_number INTO ls_item_number WITH KEY fi_buzei = <ls_tdkey>-line_id.
            IF sy-subrc = 0.
              <ls_headitm_txt>-line_id = ls_item_number-line_id.
            ENDIF.
          ELSEIF ms_source-source_header-source_type = cl_edoc_source_sd_invoice=>gc_src_sd_invoice.
            <ls_headitm_txt>-line_id = <ls_tdkey>-line_id.
          ENDIF.
        ENDIF.
      ENDLOOP.
    ENDLOOP.

  ENDMETHOD.


  METHOD init_mapping."Added with SAP Note 2805246
    DATA: ms_no_exc_reason_tax_cat LIKE LINE OF mt_no_exc_reason_tax_cat. "2885554

    TRY.
        super->init_mapping(
          EXPORTING
            iv_bukrs     = iv_bukrs
            iv_kunnr     = iv_kunnr
            iv_lifnr     = iv_lifnr
            iv_adrnr     = iv_adrnr ).

      CATCH cx_edocument.
        add_error_message( ).
    ENDTRY.

    get_partner_id_and_type(
      IMPORTING
        ev_partner_id   = mv_partner_id
        ev_partner_type = mv_partner_type ).

    get_customization_id( ).                                "2854416

    get_sepa_mandate(                                       "2871404
      iv_bukrs = iv_bukrs                                   "2871404
      iv_kunnr = iv_kunnr ).                                "2871404

    get_self_billing_indicator( ).                          "3013311

* Begin of 2885554
    CLEAR: mt_no_exc_reason_tax_cat, ms_no_exc_reason_tax_cat.
    ms_no_exc_reason_tax_cat-sign = 'I'.
    ms_no_exc_reason_tax_cat-option = 'EQ'.
    ms_no_exc_reason_tax_cat-low = 'Z'.
    APPEND ms_no_exc_reason_tax_cat TO mt_no_exc_reason_tax_cat.
    ms_no_exc_reason_tax_cat-low = 'L'.
    APPEND ms_no_exc_reason_tax_cat TO mt_no_exc_reason_tax_cat.
    ms_no_exc_reason_tax_cat-low = 'M'.
    APPEND ms_no_exc_reason_tax_cat TO mt_no_exc_reason_tax_cat.
    ms_no_exc_reason_tax_cat-low = 'S'.
    APPEND ms_no_exc_reason_tax_cat TO mt_no_exc_reason_tax_cat.
* End of 2885554
  ENDMETHOD.


  METHOD init_value_map_multiple.       "New with 2938424
    CONSTANTS: lc_vmap_def        TYPE char15 VALUE '/AIF/T_VMAP',
               lc_vmap_val_master TYPE char20 VALUE '/AIF/T_MVMAPVAL5',
               lc_vmap_val_custom TYPE char20 VALUE '/AIF/T_VMAPVAL5'.

    DATA: lt_vmap TYPE TABLE OF ty_value_mapping.
    DATA lv_checked_table_name TYPE string.                 "3259089

*   Load mapping values only if not previously loaded
    CHECK mt_value_map_multiple IS INITIAL.

*   Reads all AIF value mappings of type 'Master Data' and 'Customizing'

*   Master Data
*Begin of SAP Note 3289969
    TRY.
        lv_checked_table_name = cl_abap_dyn_prg=>check_table_or_view_name_str(
                                  val = lc_vmap_def
                                  packages = '/AIF/CUSTOMIZING,/AIF/GENERAL'
                                  incl_sub_packages = abap_true ).
      CATCH cx_abap_not_a_table
            cx_abap_not_in_package.
        MESSAGE e000(edocument) WITH 'Invalid Access to a DB Table'.
    ENDTRY.
*End of SAP Note 3289969
    TEST-SEAM vmap_multiple1.
      SELECT vmapname FROM (lv_checked_table_name)  "SAP Note 3289969
        INTO CORRESPONDING FIELDS OF TABLE lt_vmap
        WHERE cust_master = 'M'
        AND ns = mv_ns.
    END-TEST-SEAM.
    IF lt_vmap[] IS NOT INITIAL.
* Begin of SAP Note 3259089
      TRY.
          lv_checked_table_name = cl_abap_dyn_prg=>check_table_or_view_name_str(
                                    val = lc_vmap_val_master
                                    packages = '/AIF/CUSTOMIZING,/AIF/GENERAL'
                                    incl_sub_packages = abap_true ).
        CATCH cx_abap_not_a_table
              cx_abap_not_in_package.
          MESSAGE e000(edocument) WITH 'Invalid Access to a DB Table'.
      ENDTRY.
* End of SAP Note 3259089

      TEST-SEAM vmap_multiple2.
        SELECT vmapname vmapvalnr ext_value1
               ext_value2 ext_value3 ext_value4
               ext_value5 int_value default_flag
          FROM (lv_checked_table_name)                      "3259089
          INTO TABLE mt_value_map_multiple
          FOR ALL ENTRIES IN lt_vmap
          WHERE ns = mv_ns
          AND vmapname = lt_vmap-vmapname.
      END-TEST-SEAM.
    ENDIF.

    CLEAR lt_vmap.

*   Customizing
    TEST-SEAM vmap_multiple3.
      SELECT * FROM (lc_vmap_def)
        INTO CORRESPONDING FIELDS OF TABLE lt_vmap
        WHERE cust_master = 'C'
        AND ns = mv_ns.
    END-TEST-SEAM.
    IF lt_vmap[] IS NOT INITIAL.
* Begin of SAP Note 3259089
      CLEAR lv_checked_table_name.
      TRY.
          lv_checked_table_name = cl_abap_dyn_prg=>check_table_or_view_name_str(
                                    val = lc_vmap_val_custom
                                    packages = '/AIF/CUSTOMIZING,/AIF/GENERAL'
                                    incl_sub_packages = abap_true ).
        CATCH cx_abap_not_a_table
              cx_abap_not_in_package.
          MESSAGE e000(edocument) WITH 'Invalid Access to a DB Table'.
      ENDTRY.
* End of SAP Note 3259089
      TEST-SEAM vmap_multiple4.
        SELECT vmapname vmapvalnr ext_value1
               ext_value2 ext_value3 ext_value4
               ext_value5 int_value default_flag
          FROM (lv_checked_table_name)                      "3259089
          APPENDING TABLE mt_value_map_multiple
          FOR ALL ENTRIES IN lt_vmap
          WHERE ns = mv_ns
          AND vmapname = lt_vmap-vmapname.
      END-TEST-SEAM.
    ENDIF.

  ENDMETHOD.


  METHOD is_payment_means_required.        " added with SAP Note 2805246
* Method checks if payment means entry is required

    rv_value = abap_true." 2854416

  ENDMETHOD.


METHOD map_appresp1. "Added with SAP Note 3328617
  CLEAR: es_target.
*  Call INIT_MAPPING
*  Fill SBDH and ApplicationResponse from XML of incoming invoice
*    •  Use GET_VALUE_FROM_XML of CL_EDOC_UTIL to read data from XML
*    •  Note: The sender of the BLR is the receiver of the incoming document and vice versa
*  Fill ResponseCode, StatusReasonCode and StatusReason from mapping source structure
  DATA: ls_target TYPE edo_ubl_application_response_1.
  FIELD-SYMBOLS <ls_document_response> TYPE edo_ubl_document_response.
  FIELD-SYMBOLS <ls_document_reference> TYPE edo_ubl_document_reference2.
  FIELD-SYMBOLS <ls_response_status> TYPE edo_ubl_status.
  FIELD-SYMBOLS <ls_status_reason> TYPE edo_ubl_status_reason.
  TYPES: BEGIN OF ty_s_status_reason_code,
           status_reason_code TYPE edoc_eu_response_code,
         END OF ty_s_status_reason_code.
  DATA ls_status_reason_code TYPE ty_s_status_reason_code.
  DATA lt_op_status_action TYPE SORTED TABLE OF ty_s_status_reason_code WITH NON-UNIQUE KEY status_reason_code.
  DATA lt_op_status_reason TYPE SORTED TABLE OF ty_s_status_reason_code WITH NON-UNIQUE KEY status_reason_code.
  DATA: lo_cx_uuid_error TYPE REF TO cx_uuid_error,
        lv_error_msg     TYPE bapi_msg.

  DATA: ls_fix_value TYPE ty_fix_value,
        lv_docid     TYPE string,
        lv_doctype   TYPE string.

  ms_source = is_source.

  init_mapping( ).

  LOOP AT mt_fix_value_list INTO ls_fix_value WHERE fixvaluename = 'BLR_OP_STATUS_ACTION'.
    ls_status_reason_code-status_reason_code = ls_fix_value-fieldvalue.
    INSERT ls_status_reason_code INTO TABLE lt_op_status_action.
  ENDLOOP.

  LOOP AT mt_fix_value_list INTO ls_fix_value WHERE fixvaluename = 'BLR_OP_STATUS_REASON'.
    ls_status_reason_code-status_reason_code = ls_fix_value-fieldvalue.
    INSERT ls_status_reason_code INTO TABLE lt_op_status_reason.
  ENDLOOP.

  get_blr_document_reference(
    EXPORTING
      iv_invoice_in_source_file = ms_source-file
    IMPORTING
      ev_document_reference = lv_docid
      ev_document_type_code = lv_doctype ).

* Fill Standard Business Document Header
  ls_target-standard_business_document-standard_business_document_hea = fill_sbdh_blr( iv_invoice_in_source_file = ms_source-file ).
  ls_target-standard_business_document-application_response-customization_id-base-base-content = mv_customization_id.
  ls_target-standard_business_document-application_response-profile_id-base-base-content = mv_process_id.
  TRY.
      ls_target-standard_business_document-application_response-id-base-base-content = cl_system_uuid=>create_uuid_c36_static( ).
    CATCH cx_uuid_error INTO lo_cx_uuid_error.
      lv_error_msg = lo_cx_uuid_error->get_text( ).
      RAISE EXCEPTION TYPE cx_edocument
        EXPORTING
          mv_message = lv_error_msg       "passthrough the error message as previous exception is not always considered in output
          previous   = lo_cx_uuid_error.
  ENDTRY.

  ls_target-standard_business_document-application_response-issue_date-base-content = sy-datum.
  ls_target-standard_business_document-application_response-issue_time-base-content = sy-uzeit.

* Fill ApplicationResponse
  DATA lv_sender_prefix TYPE string.
  DATA lv_sender TYPE string.
  DATA lv_receiver_prefix TYPE string.
  DATA lv_receiver TYPE string.

  SPLIT ls_target-standard_business_document-standard_business_document_hea-sender[ 1 ]-identifier-content AT ':' INTO lv_sender_prefix lv_sender.
  SPLIT ls_target-standard_business_document-standard_business_document_hea-receiver[ 1 ]-identifier-content AT ':' INTO lv_receiver_prefix lv_receiver.
  ls_target-standard_business_document-application_response-sender_party-endpoint_id-base-base-scheme_id = lv_sender_prefix.
  ls_target-standard_business_document-application_response-sender_party-endpoint_id-base-base-content = lv_sender.
  ls_target-standard_business_document-application_response-receiver_party-endpoint_id-base-base-scheme_id = lv_receiver_prefix.
  ls_target-standard_business_document-application_response-receiver_party-endpoint_id-base-base-content = lv_receiver.

  ls_target-standard_business_document-application_response-sender_party-party_legal_entity = fill_blr_sndr_prty_legal_entit( iv_invoice_in_source_file = ms_source-file ).
  ls_target-standard_business_document-application_response-receiver_party-party_legal_entity = fill_blr_recv_prty_legal_entit( iv_invoice_in_source_file = ms_source-file ).
* Document Response
  APPEND INITIAL LINE TO ls_target-standard_business_document-application_response-document_response ASSIGNING <ls_document_response>.
  <ls_document_response>-response-response_code-base-base-content = ms_source-blr-response_code.
  IF ms_source-blr-response_code = cl_edoc_map_ubl=>gc_s_blr_response_code-rejected.
    APPEND INITIAL LINE TO <ls_document_response>-response-status ASSIGNING <ls_response_status>.
    <ls_response_status>-status_reason_code-base-base-content = ms_source-blr-rejection_reason_code.
    READ TABLE lt_op_status_reason TRANSPORTING NO FIELDS WITH KEY status_reason_code = ms_source-blr-rejection_reason_code.
    IF sy-subrc = 0.
      <ls_response_status>-status_reason_code-base-base-list_id = 'OPStatusReason' ##no_text.
    ELSE.
      <ls_response_status>-status_reason_code-base-base-list_id = 'OPStatusAction' ##no_text.
    ENDIF.

    APPEND INITIAL LINE TO <ls_response_status>-status_reason ASSIGNING <ls_status_reason>.
    <ls_status_reason>-base-base-content = ms_source-blr-rejection_reason_text.
    IF <ls_status_reason>-base-base-content IS INITIAL.
      <ls_status_reason>-base-base-content = ms_source-blr-rejection_reason_code.
    ENDIF.
  ENDIF.
  APPEND INITIAL LINE TO <ls_document_response>-document_reference ASSIGNING <ls_document_reference>.
  <ls_document_reference>-id-base-base-content = lv_docid.
  <ls_document_reference>-document_type_code-base-base-content = lv_doctype.
  <ls_document_reference>-issue_date-base-content = ls_target-standard_business_document-application_response-issue_date-base-content.

  es_target = ls_target-standard_business_document.
ENDMETHOD.


  METHOD map_apprespr1.                                     "3328617
    map_response_generic(
     EXPORTING
       is_source      = is_source
       iv_source_type = 'EDO_UBL_APPLICATION_RESPONSE_R'
     IMPORTING
      es_target      = es_target ).

  ENDMETHOD.


  METHOD map_cr_note1.

    DATA: ls_target TYPE edo_ubl_credit_note_request.

* Set source object
    ms_source = is_source.

* Set document category
    mv_doc_categ = 'CRE'.                                   "2854416

* Initial mapping
    init_mapping( ).

* Fill Standard Business Document Header
    ls_target-standard_business_document-standard_business_document_hea = fill_sbdh( ). "2805246, 2854416

* In case of resubmit fill the flag
    ls_target-standard_business_document-resubmit = mv_resubmit.

* Fill Credit Note
    ls_target-standard_business_document-credit_note = fill_credit_note( ).

    es_target = ls_target-standard_business_document.

* Save business partners
    determine_all_bupas( ).

* Call cloud badi
    call_cloud_badi_cr_note( CHANGING cs_target = es_target ).

* Add error messages to AIF
    raise_exception( ).

  ENDMETHOD.


  METHOD map_cr_noter1.                                     "3328617
    map_response_generic(
     EXPORTING
       is_source      = is_source
       iv_source_type = 'EDO_UBL_CREDIT_NOTE_RESPONSE1'
     IMPORTING
      es_target      = es_target ).

  ENDMETHOD.


METHOD map_displhtml1. "Added with SAP Note 3134550

  ms_source = is_source.
* Initial mapping
  init_mapping( ).
* Fill request
  es_target = fill_dcs_request( ).
* Add error messages to AIF
  raise_exception( ).

ENDMETHOD.


  METHOD map_displhtmlr1. "Added with 3134550

*  Map webservice response
   map_generic_webserv_response( EXPORTING is_source = is_source
                                 IMPORTING  es_target = es_target ).
  ENDMETHOD.


 METHOD map_generic_webserv_response.

*Added with 3134550
    FIELD-SYMBOLS: <ls_source> TYPE dcs_send_request_response,
                   <ls_target> TYPE edoc_ubl_gen_mapping_target.

    DATA: ls_source_message TYPE dcs_message_type1,
          ls_target_message TYPE edoc_dcs_gen_error_msg,
          lv_xml            TYPE xstring,
          lx_root           TYPE REF TO cx_root.

    ASSIGN is_source TO <ls_source>.
    ASSIGN es_target TO <ls_target>.

    <ls_target>-operation_response-status = <ls_source>-send_request_response-status.

    LOOP AT <ls_source>-send_request_response-message INTO ls_source_message.
      ls_target_message-code = ls_source_message-code.
      ls_target_message-description = ls_source_message-description.
      APPEND ls_target_message TO <ls_target>-operation_response-message.
    ENDLOOP.

    TRY.
        cl_proxy_xml_transform=>abap_to_xml_xstring(
          EXPORTING
            abap_data = <ls_source>
            ddic_type = 'DCS_SEND_REQUEST_RESPONSE'
          RECEIVING
            xml = lv_xml ).

        <ls_target>-operation_response-response_file = lv_xml.

      CATCH cx_proxy_fault cx_transformation_error INTO lx_root.
        cl_edocument=>gv_error_txt = lx_root->get_text( ).
        cl_edocument=>raise_edoc_exception( cl_edocument=>gv_error_txt ).
    ENDTRY.

  ENDMETHOD.


METHOD MAP_GENPRX1. "Added with 3109533

  ms_source = is_source.

* Initial mapping
  init_mapping( ).

  es_target = fill_dcs_request( ).

* Add error messages to AIF
  raise_exception( ).

ENDMETHOD.


  METHOD map_genprxr1. "Added with 3134550

        map_generic_webserv_response( EXPORTING is_source = is_source
                                      IMPORTING  es_target = es_target ).
  ENDMETHOD.


METHOD map_invoice1.

  DATA:
    ls_target TYPE edo_ubl_invoice_request.

* Set source object
  ms_source = is_source.

* Set document category
  mv_doc_categ = 'INV'.                                     "2854416

* Initial mapping
  init_mapping( ).

* Fill Standard Business DocumentH eader
  ls_target-standard_business_document-standard_business_document_hea = fill_sbdh( ). "2805246, 2854416

* In case of resubmit fill the flag
  ls_target-standard_business_document-resubmit = mv_resubmit.

* Fill Invoice
  ls_target-standard_business_document-invoice = fill_invoice( ).

  es_target = ls_target-standard_business_document.

* Save business partners
  determine_all_bupas( ).

* Call cloud badi
  call_cloud_badi_invoice( CHANGING cs_target = es_target ).

* Add error messages to AIF
  raise_exception( ).

ENDMETHOD.


METHOD map_invoice2. "Added with SAP Note 3210223

  DATA ls_target1                   TYPE edo_ubl_standard_business_doc2.
  DATA ls_target2                   TYPE edo_ubl_pint10_standard_busin2.
  DATA ls_payment_means1            TYPE edo_ubl_payment_means.
  DATA ls_payment_means2            TYPE edo_ubl_pint10_payment_means.
  DATA ls_payment_terms1            TYPE edo_ubl_payment_terms.
  DATA ls_payment_terms2            TYPE edo_ubl_pint10_payment_terms.
  DATA ls_tax_total1                TYPE edo_ubl_tax_total.
  DATA ls_tax_total2                TYPE edo_ubl_pint10_tax_total.
  DATA ls_invoice_line1             TYPE edo_ubl_invoice_line.
  DATA ls_invoice_line2             TYPE edo_ubl_pint10_invoice_line.
  DATA ls_order_line_reference2     TYPE edo_ubl_pint10_order_line_ref1.
  DATA ls_document_reference2       TYPE edo_ubl_pint10_document_refer1.
  DATA ls_delivery1                 TYPE edo_ubl_delivery.
  DATA ls_delivery2                 TYPE edo_ubl_pint10_delivery.
  DATA ls_description2              TYPE edo_ubl_pint10_description.
  DATA ls_commodity_classification1 TYPE edo_ubl_commodity_classificat1.
  DATA ls_commodity_classification2 TYPE edo_ubl_pint10_commodity_clas1.
  DATA ls_item_classification_code2 TYPE edo_ubl_pint10_item_classific1.
  DATA ls_classified_tax_category2  TYPE edo_ubl_pint10_classified_tax.
  DATA ls_additional_item_property1 TYPE edo_ubl_additional_item_proper.
  DATA ls_additional_item_property2 TYPE edo_ubl_pint10_additional_item.
  DATA ls_despatch_document_ref2    TYPE edo_ubl_pint10_despatch_docume.


  map_invoice1( EXPORTING is_source = is_source
                IMPORTING es_target = ls_target1 ).

  " Map Header
  ls_target2-controller = ls_target1-controller.
  ls_target2-resubmit   = ls_target1-resubmit.

  MOVE-CORRESPONDING ls_target1-standard_business_document_hea
                  TO ls_target2-standard_business_document_hea
                  EXPANDING NESTED TABLES.

  " Map Invoice
  MOVE-CORRESPONDING ls_target1-invoice-ublversion_id
                  TO ls_target2-invoice-ublversion_id
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-customization_id
                  TO ls_target2-invoice-customization_id
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-profile_id
                  TO ls_target2-invoice-profile_id
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-id
                  TO ls_target2-invoice-id
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-issue_date
                  TO ls_target2-invoice-issue_date
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-due_date
                  TO ls_target2-invoice-due_date
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-invoice_type_code
                  TO ls_target2-invoice-invoice_type_code
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-note
                  TO ls_target2-invoice-note
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-tax_point_date
                  TO ls_target2-invoice-tax_point_date
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-document_currency_code
                  TO ls_target2-invoice-document_currency_code
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-tax_currency_code
                  TO ls_target2-invoice-tax_currency_code
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-accounting_cost
                  TO ls_target2-invoice-accounting_cost
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-buyer_reference
                  TO ls_target2-invoice-buyer_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-invoice_period
                  TO ls_target2-invoice-invoice_period
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-order_reference
                  TO ls_target2-invoice-order_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-billing_reference
                  TO ls_target2-invoice-billing_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-despatch_document_reference
                  TO ls_despatch_document_ref2
                  EXPANDING NESTED TABLES.

  IF ls_despatch_document_ref2 IS NOT INITIAL.
    APPEND ls_despatch_document_ref2 TO ls_target2-invoice-despatch_document_reference.
    CLEAR  ls_despatch_document_ref2.
  ENDIF.

  MOVE-CORRESPONDING ls_target1-invoice-receipt_document_reference
                  TO ls_target2-invoice-receipt_document_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-originator_document_reference
                  TO ls_target2-invoice-originator_document_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-contract_document_reference
                  TO ls_target2-invoice-contract_document_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-additional_document_reference
                  TO ls_target2-invoice-additional_document_reference
                  EXPANDING NESTED TABLES.

  MOVE-CORRESPONDING ls_target1-invoice-project_reference
                  TO ls_target2-invoice-project_reference
                  EXPANDING NESTED TABLES.

  " Map Supplier Party
  ls_target2-invoice-accounting_supplier_party-controller = ls_target1-invoice-accounting_supplier_party-controller.

  fill_party2( EXPORTING is_source_party = ls_target1-invoice-accounting_supplier_party-party
               CHANGING  cs_target_party = ls_target2-invoice-accounting_supplier_party-party ).


  " Map Customer Party
  ls_target2-invoice-accounting_customer_party-controller = ls_target1-invoice-accounting_customer_party-controller.

  fill_party2( EXPORTING is_source_party = ls_target1-invoice-accounting_customer_party-party
               CHANGING  cs_target_party = ls_target2-invoice-accounting_customer_party-party ).

  " Map Payee Party
  fill_party2( EXPORTING is_source_party = ls_target1-invoice-payee_party
               CHANGING  cs_target_party = ls_target2-invoice-payee_party ).

  " Map Tax Representative Party
  fill_party2( EXPORTING is_source_party = ls_target1-invoice-tax_representative_party
               CHANGING  cs_target_party = ls_target2-invoice-tax_representative_party ).

  " Map Delivery
  fill_delivery2( EXPORTING is_source_delivery = ls_target1-invoice-delivery
                  CHANGING  cs_target_delivery = ls_target2-invoice-delivery ).


  " Map Payment Means
  LOOP AT ls_target1-invoice-payment_means
       INTO ls_payment_means1.

    MOVE-CORRESPONDING ls_payment_means1
                    TO ls_payment_means2
                    EXPANDING NESTED TABLES.

    IF ls_payment_means2 IS NOT INITIAL.
      APPEND ls_payment_means2 TO ls_target2-invoice-payment_means.
      CLEAR  ls_payment_means2.
    ENDIF.
  ENDLOOP.

  " Map Payment Terms
  LOOP AT ls_target1-invoice-payment_terms
       INTO ls_payment_terms1.

    MOVE-CORRESPONDING ls_payment_terms1
                    TO ls_payment_terms2
                    EXPANDING NESTED TABLES.

    IF ls_payment_terms2 IS NOT INITIAL.
      APPEND ls_payment_terms2 TO ls_target2-invoice-payment_terms.
      CLEAR  ls_payment_terms2.
    ENDIF.
  ENDLOOP.

  " Map Allowance Charge
  fill_allowance_charge2( EXPORTING it_source_charge = ls_target1-invoice-allowance_charge
                          CHANGING  ct_target_charge = ls_target2-invoice-allowance_charge ).

  " Map Tax Total
  LOOP AT ls_target1-invoice-tax_total
       INTO ls_tax_total1.

    MOVE-CORRESPONDING ls_tax_total1
                    TO ls_tax_total2
                    EXPANDING NESTED TABLES.

    IF ls_tax_total2 IS NOT INITIAL.
      APPEND ls_tax_total2 TO ls_target2-invoice-tax_total.
      CLEAR  ls_tax_total2.
    ENDIF.
  ENDLOOP.


  " Map Legal Monetary Total
  MOVE-CORRESPONDING ls_target1-invoice-legal_monetary_total
                  TO ls_target2-invoice-legal_monetary_total
                  EXPANDING NESTED TABLES.


  " Map Invoice Line
  LOOP AT ls_target1-invoice-invoice_line
       INTO ls_invoice_line1.

    " INVOICE_LINE-CONTROLLER
    ls_invoice_line2-controller = ls_invoice_line1-controller.

    " INVOICE_LINE-ID
    MOVE-CORRESPONDING ls_invoice_line1-id
                    TO ls_invoice_line2-id
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-NOTE
    MOVE-CORRESPONDING ls_invoice_line1-note
                    TO ls_invoice_line2-note
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-INVOICED_QUANTITY
    MOVE-CORRESPONDING ls_invoice_line1-invoiced_quantity
                    TO ls_invoice_line2-invoiced_quantity
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-LINE_EXTENSION_AMOUNT
    MOVE-CORRESPONDING ls_invoice_line1-line_extension_amount
                    TO ls_invoice_line2-line_extension_amount
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ACCOUNTING_COST
    MOVE-CORRESPONDING ls_invoice_line1-accounting_cost
                    TO ls_invoice_line2-accounting_cost
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-INVOICE_PERIOD
    MOVE-CORRESPONDING ls_invoice_line1-invoice_period
                    TO ls_invoice_line2-invoice_period
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ORDER_LINE_REFERENCE
    MOVE-CORRESPONDING ls_invoice_line1-order_line_reference
                    TO ls_order_line_reference2
                    EXPANDING NESTED TABLES.

    IF ls_order_line_reference2 IS NOT INITIAL.
      APPEND ls_order_line_reference2 TO ls_invoice_line2-order_line_reference.
      CLEAR  ls_order_line_reference2.
    ENDIF.

    " INVOICE_LINE-DOCUMENT_REFERENCE
    MOVE-CORRESPONDING ls_invoice_line1-document_reference
                    TO ls_document_reference2
                    EXPANDING NESTED TABLES.

    IF ls_document_reference2 IS NOT INITIAL.
      APPEND ls_document_reference2 TO ls_invoice_line2-document_reference.
      CLEAR  ls_document_reference2.
    ENDIF.

    " INVOICE_LINE-DELIVERY
    LOOP AT ls_invoice_line1-delivery
         INTO ls_delivery1.

      fill_delivery2( EXPORTING is_source_delivery = ls_delivery1
                      CHANGING  cs_target_delivery = ls_delivery2 ).

      IF ls_delivery2 IS NOT INITIAL.
        APPEND ls_delivery2 TO ls_invoice_line2-delivery.
        CLEAR  ls_delivery2.
      ENDIF.
    ENDLOOP.


    " INVOICE_LINE-ALLOWANCE_CHARGE
    fill_allowance_charge2( EXPORTING it_source_charge = ls_invoice_line1-allowance_charge
                            CHANGING  ct_target_charge = ls_invoice_line2-allowance_charge ).


    " INVOICE_LINE-TAX_TOTAL
    MOVE-CORRESPONDING ls_invoice_line1-tax_total
                    TO ls_invoice_line2-tax_total
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ITEM
    " INVOICE_LINE-ITEM-CONTROLLER
    ls_invoice_line2-item-controller = ls_invoice_line1-item-controller.

    " INVOICE_LINE-ITEM-DESCRIPTION
    ls_description2 = ls_invoice_line1-item-description.

    IF ls_description2 IS NOT INITIAL.
      APPEND ls_description2 TO ls_invoice_line2-item-description.
      CLEAR  ls_description2.
    ENDIF.

    " INVOICE_LINE-ITEM-NAME
    MOVE-CORRESPONDING ls_invoice_line1-item-name
                    TO ls_invoice_line2-item-name
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ITEM-BUYERS_ITEM_IDENTIFICATION
    MOVE-CORRESPONDING ls_invoice_line1-item-buyers_item_identification
                    TO ls_invoice_line2-item-buyers_item_identification
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ITEM-SELLERS_ITEM_IDENTIFICATION
    MOVE-CORRESPONDING ls_invoice_line1-item-sellers_item_identification
                    TO ls_invoice_line2-item-sellers_item_identification
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ITEM-STANDARD_ITEM_IDENTIFICATION
    MOVE-CORRESPONDING ls_invoice_line1-item-standard_item_identification
                    TO ls_invoice_line2-item-standard_item_identification
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ITEM-ORIGIN_COUNTRY
    MOVE-CORRESPONDING ls_invoice_line1-item-origin_country
                    TO ls_invoice_line2-item-origin_country
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-ITEM-COMMODITY_CLASSIFICATION
    LOOP AT ls_invoice_line1-item-commodity_classification
         INTO ls_commodity_classification1.

      " INVOICE_LINE-ITEM-COMMODITY_CLASSIFICATION-CONTROLLER
      ls_commodity_classification2-controller = ls_commodity_classification1-controller.

      " INVOICE_LINE-ITEM-COMMODITY_CLASSIFICATION-COMMODITY_CODE
      MOVE-CORRESPONDING ls_commodity_classification1-commodity_code
                      TO ls_commodity_classification2-commodity_code
                      EXPANDING NESTED TABLES.

      " INVOICE_LINE-ITEM-COMMODITY_CLASSIFICATION-ITEM_CLASSIFICATION_CODE
      MOVE-CORRESPONDING ls_commodity_classification1-item_classification_code
                      TO ls_item_classification_code2
                      EXPANDING NESTED TABLES.

      IF ls_item_classification_code2 IS NOT INITIAL.
        APPEND ls_item_classification_code2 TO ls_commodity_classification2-item_classification_code.
        CLEAR  ls_item_classification_code2.
      ENDIF.

      IF ls_commodity_classification2 IS NOT INITIAL.
        APPEND ls_commodity_classification2 TO ls_invoice_line2-item-commodity_classification.
        CLEAR  ls_commodity_classification2.
      ENDIF.
    ENDLOOP.

    " INVOICE_LINE-ITEM-CLASSIFIED_TAX_CATEGORY
    MOVE-CORRESPONDING ls_invoice_line1-item-classified_tax_category
                    TO ls_classified_tax_category2
                    EXPANDING NESTED TABLES.

    IF ls_classified_tax_category2 IS NOT INITIAL.
      APPEND ls_classified_tax_category2 TO ls_invoice_line2-item-classified_tax_category.
      CLEAR  ls_classified_tax_category2.
    ENDIF.

    " INVOICE_LINE-ITEM-ADDITIONAL_ITEM_PROPERTY
    LOOP AT ls_invoice_line1-item-additional_item_property
         INTO ls_additional_item_property1.

      MOVE-CORRESPONDING ls_additional_item_property1
                      TO ls_additional_item_property2
                      EXPANDING NESTED TABLES.

      IF ls_additional_item_property2 IS NOT INITIAL.
        APPEND ls_additional_item_property2 TO ls_invoice_line2-item-additional_item_property.
        CLEAR  ls_additional_item_property2.
      ENDIF.
    ENDLOOP.

    " INVOICE_LINE-PRICE
    " INVOICE_LINE-PRICE-CONTROLLER
    ls_invoice_line2-price-controller = ls_invoice_line1-price-controller.

    " INVOICE_LINE-PRICE-PRICE_AMOUNT
    MOVE-CORRESPONDING ls_invoice_line1-price-price_amount
                    TO ls_invoice_line2-price-price_amount
                    EXPANDING NESTED TABLES.

    " INVOICE_LINE-PRICE-BASE_QUANTITY
    MOVE-CORRESPONDING ls_invoice_line1-price-base_quantity
                    TO ls_invoice_line2-price-base_quantity
                    EXPANDING NESTED TABLES.


    " INVOICE_LINE-PRICE-ALLOWANCE_CHARGE
    fill_allowance_charge2( EXPORTING it_source_charge = ls_invoice_line1-price-allowance_charge
                            CHANGING  ct_target_charge = ls_invoice_line2-price-allowance_charge ).


    IF ls_invoice_line2 IS NOT INITIAL.
      APPEND ls_invoice_line2 TO ls_target2-invoice-invoice_line.
      CLEAR  ls_invoice_line2.
    ENDIF.
  ENDLOOP.

  es_target = ls_target2.

ENDMETHOD.


  METHOD map_invoicer1."3328617
    map_response_generic(
     EXPORTING
       is_source      = is_source
       iv_source_type = 'EDO_UBL_INVOICE_RESPONSE1'
     IMPORTING
      es_target      = es_target ).
  ENDMETHOD.


  METHOD map_invoicer2. "Added with SAP Note 3210223

    DATA lv_xml TYPE xstring.

    FIELD-SYMBOLS: <fs_source> TYPE edo_ubl_pint10_invoice_respons,
                   <fs_target> TYPE edoc_ubl_mapping_target.


    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.

        <fs_target>-operation_response-original_message_id =
                    <fs_source>-mdndelivery_report-mdndisposition_notification-original_message_id.
        <fs_target>-operation_response-mdn_plain_text =
                    <fs_source>-mdndelivery_report-mdnplain_text.
        <fs_target>-operation_response-disposition_type =
                    <fs_source>-mdndelivery_report-mdndisposition_notification-disposition-disposition_type.
        <fs_target>-operation_response-disposition_modifier =
                    <fs_source>-mdndelivery_report-mdndisposition_notification-disposition-disposition_modifier.
        <fs_target>-operation_response-error_code =
                    <fs_source>-mdndelivery_report-error-error_code.
        <fs_target>-operation_response-error_text1 =
                    <fs_source>-mdndelivery_report-error-error_text.
        <fs_target>-operation_response-error_text2 =
                    <fs_source>-mdndelivery_report-error-error_stack_trace.

        TRY .
            cl_proxy_xml_transform=>abap_to_xml_xstring( EXPORTING abap_data = <fs_source>
                                                                   ddic_type = 'EDO_UBL_PINT10_INVOICE_RESPONS'
                                                         RECEIVING xml = lv_xml ).
            <fs_target>-operation_response-response_file = lv_xml.
          CATCH cx_proxy_fault.
        ENDTRY.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD map_msgdel1.

    DATA: ls_file_name     TYPE edoc_file_name.

    FIELD-SYMBOLS: <fs_source> TYPE edoc_ubl_msgdel_source,
                   <fs_target> TYPE edo_ubl_message_delete_request.

    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.

* Determine Party ID and Party ID Type
        get_party_id_and_type( iv_bukrs = <fs_source>-bukrs ).

        <fs_target>-delete_request_parameters-party_id  = ms_party_sender-party_id.
        <fs_target>-delete_request_parameters-scheme_id = ms_party_sender-party_code_type.

* Fill the file names
        REFRESH <fs_target>-delete_request_parameters-file_name_collection-file_name.
        LOOP AT <fs_source>-file_name_coll INTO ls_file_name.
          APPEND ls_file_name TO <fs_target>-delete_request_parameters-file_name_collection-file_name.
        ENDLOOP.

      ENDIF.
    ENDIF.


  ENDMETHOD.


  METHOD map_msgdelr1.

    FIELD-SYMBOLS: <fs_source> TYPE edo_ubl_message_delete_respons,
                   <fs_target> TYPE edoc_ubl_msgdelr_target.


* Set the SUCCESS flag
    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.

        <fs_target>-success = <fs_source>-message_delete_response-success.

      ENDIF.
    ENDIF.
  ENDMETHOD.


METHOD map_msgpull1.

  FIELD-SYMBOLS:
    <fs_source> TYPE edoc_pulling_request_source,
    <fs_target> TYPE edo_ubl_message_pull_request_t.

  ASSIGN is_source TO <fs_source>.
  IF sy-subrc = 0.

    ASSIGN es_target TO <fs_target>.
    IF sy-subrc = 0.

*     Copy number of messages from source to target structure
      <fs_target>-pull_request_parameters-number_of_messages = <fs_source>-number_of_messages.

*     Get Party ID and Party ID Type
      get_party_id_and_type( iv_bukrs = <fs_source>-bukrs ).

      <fs_target>-pull_request_parameters-party_id  = ms_party_sender-party_id.
      <fs_target>-pull_request_parameters-scheme_id = ms_party_sender-party_code_type.
    ENDIF.
  ENDIF.

ENDMETHOD.


  METHOD map_msgpullr1.

    FIELD-SYMBOLS: <fs_source>            TYPE edo_ubl_message_pull_response1,
                   <fs_target>            TYPE edoc_pulling_response_target,
                   <fs_incoming_messages> TYPE edoc_incoming_message.

    DATA: ls_message_envelope TYPE edo_ubl_message_envelope_type.

    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.

        LOOP AT <fs_source>-message_pull_response-message_envelope INTO ls_message_envelope.
          APPEND INITIAL LINE TO <fs_target>-incoming_messages ASSIGNING <fs_incoming_messages>.
          <fs_incoming_messages>-xml_string = ls_message_envelope-file.
          <fs_incoming_messages>-received_at = ls_message_envelope-date_time_received.
          <fs_incoming_messages>-message_name = ls_message_envelope-file_name.
        ENDLOOP.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD map_respdel1.

    DATA: ls_file_name     TYPE edoc_file_name,
          ls_request_param TYPE edo_ubl_delete_request_parame2.

    FIELD-SYMBOLS: <fs_source> TYPE edoc_ubl_msgdel_source,
                   <fs_target> TYPE edo_ubl_response_delete_reques.


    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.
        CLEAR ls_request_param.
* Determine Party ID and Party ID Type
        get_party_id_and_type( iv_bukrs = <fs_source>-bukrs ).

        CONCATENATE ms_party_sender-party_code_type ms_party_sender-party_id
        INTO ls_request_param-participant_id.

* Fill the file names
        REFRESH ls_request_param-file_name_collection-file_name.
        LOOP AT <fs_source>-file_name_coll INTO ls_file_name.
          APPEND ls_file_name TO ls_request_param-file_name_collection-file_name.
        ENDLOOP.

        APPEND ls_request_param TO <fs_target>-delete_request_parameters.

      ENDIF.
    ENDIF.


  ENDMETHOD.


  METHOD map_respdelr1.

    FIELD-SYMBOLS: <fs_source> TYPE edo_ubl_response_delete_respo1,
                   <fs_target> TYPE edoc_ubl_msgdelr_target.


* Set the SUCCESS flag
    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.

        <fs_target>-success = <fs_source>-response_delete_response-success.

      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD map_response_generic.                              "3328617
    TRY.
        DATA lv_xml TYPE xstring.
        DATA ls_ddic TYPE x030l.
        DATA lo_structdescr TYPE REF TO cl_abap_structdescr.
        FIELD-SYMBOLS: <fs_target> TYPE edoc_ubl_mapping_target.
        FIELD-SYMBOLS <lv_value> TYPE any.
        CONSTANTS lc_initial_string TYPE string VALUE ''.
        lo_structdescr ?= cl_abap_structdescr=>describe_by_data( es_target ).
        ls_ddic = lo_structdescr->get_ddic_header( ).
        IF ls_ddic-tabname NE 'EDOC_UBL_MAPPING_TARGET'.
          CLEAR: es_target.
          RETURN.
        ENDIF.

        ASSIGN es_target TO <fs_target>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-mdndisposition_notification-original_message_id' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-original_message_id = <lv_value>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-mdnplain_text' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-mdn_plain_text = <lv_value>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-mdndisposition_notification-disposition-disposition_type' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-disposition_type = <lv_value>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-mdndisposition_notification-disposition-disposition_modifier' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-disposition_modifier = <lv_value>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-error-error_code' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-error_code = <lv_value>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-error-error_text' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-error_text1 = <lv_value>.

        ASSIGN lc_initial_string TO <lv_value>.
        ASSIGN COMPONENT 'mdndelivery_report-error-error_stack_trace' OF STRUCTURE is_source TO <lv_value>.
        <fs_target>-operation_response-error_text2 = <lv_value>.

        TRY .
            cl_proxy_xml_transform=>abap_to_xml_xstring( EXPORTING abap_data = is_source
                                                                   ddic_type = iv_source_type
                                                         RECEIVING xml = lv_xml ).
            <fs_target>-operation_response-response_file = lv_xml.
          CATCH cx_proxy_fault.
        ENDTRY.
      CATCH cx_no_check.
        CLEAR: es_target.
    ENDTRY.
  ENDMETHOD.


METHOD MAP_RESPPULL1.

  DATA: lv_participant_id TYPE string.

  FIELD-SYMBOLS:
    <fs_source> TYPE edoc_pulling_request_source,
    <fs_target> TYPE edo_ubl_response_pull_request.

  ASSIGN is_source TO <fs_source>.
  IF sy-subrc = 0.

    ASSIGN es_target TO <fs_target>.
    IF sy-subrc = 0.

*     Copy number of messages from source to target structure
      <fs_target>-pull_request_parameters-number_of_messages = <fs_source>-number_of_messages.

*     Get Party ID and Party ID Type
      get_party_id_and_type( iv_bukrs = <fs_source>-bukrs ).

      CONCATENATE ms_party_sender-party_code_type ms_party_sender-party_id INTO lv_participant_id.
      APPEND lv_participant_id TO <fs_target>-pull_request_parameters-participants-participant_id.

    ENDIF.
  ENDIF.

ENDMETHOD.


  METHOD map_resppullr1.

    FIELD-SYMBOLS: <fs_source>            TYPE edo_ubl_response_pull_respons1,
                   <fs_target>            TYPE edoc_pulling_response_target,
                   <fs_incoming_messages> TYPE edoc_incoming_message.

    DATA: ls_response_envelope TYPE edo_ubl_response_envelope_type.

    ASSIGN is_source TO <fs_source>.
    IF sy-subrc = 0.

      ASSIGN es_target TO <fs_target>.
      IF sy-subrc = 0.

        LOOP AT <fs_source>-response_pull_response-response_envelope INTO ls_response_envelope.
          APPEND INITIAL LINE TO <fs_target>-incoming_messages ASSIGNING <fs_incoming_messages>.
          <fs_incoming_messages>-xml_string = ls_response_envelope-file.
          <fs_incoming_messages>-received_at = ls_response_envelope-date_time_received.
          <fs_incoming_messages>-message_name = ls_response_envelope-file_name.
        ENDLOOP.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD read_abn_ubl.

    CONSTANTS: lc_tax_type_au TYPE bptaxtype VALUE 'AU0'.

    DATA: lv_length   TYPE i,
          lt_bus_tax  TYPE bus_tax_t,
          ls_bus_tax  TYPE bus_tax,
          lv_tax_type TYPE bptaxtype,
          lv_partner  TYPE bu_partner,
          lv_party_id TYPE edoc_party_id,
          lv_len      TYPE i.

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
      IF ms_t001-stceg IS NOT INITIAL.
        ev_party_id = ms_t001-stceg.
      ELSE.
        MESSAGE e029(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
      " Delete 3365100
        TRY.                                                "3042934
            get_partner_for_customer(
              EXPORTING
                iv_kunnr    = iv_kunnr
              IMPORTING
                ev_partner  = lv_partner ).
          CATCH cx_edocument.                               "3042934
        ENDTRY.                                             "3042934

        TRY.                                                "3042934
            read_tax_number_for_partner(
              EXPORTING
                iv_partner  = lv_partner
                iv_tax_type = lc_tax_type_au
              IMPORTING
                ev_party_id = ev_party_id ).
          CATCH cx_edocument.                               "3042934
        ENDTRY.                                             "3042934
      " Delete 3365100
    ELSEIF iv_lifnr IS SUPPLIED.
      " Delete 3365100
        TRY.                                                "3042934
            get_partner_for_supplier(
              EXPORTING
                iv_lifnr    = iv_lifnr
              IMPORTING
                ev_partner  = lv_partner ).
          CATCH cx_edocument.                               "3042934
        ENDTRY.                                             "3042934

        TRY.                                                "3042934
            read_tax_number_for_partner(
              EXPORTING
                iv_partner  = lv_partner
                iv_tax_type = lc_tax_type_au
              IMPORTING
                ev_party_id = ev_party_id ).
          CATCH cx_edocument.                               "3042934
        ENDTRY.                                             "3042934
      " Delete 3365100
    ELSEIF iv_partner IS SUPPLIED.

      TRY.                                                  "3042934
          read_tax_number_for_partner(
            EXPORTING
              iv_partner  = iv_partner
              iv_tax_type = lc_tax_type_au
            IMPORTING
              ev_party_id = ev_party_id ).
        CATCH cx_edocument.                                 "3042934
      ENDTRY.                                               "3042934

    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_ABN' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

    CONDENSE ev_party_id NO-GAPS.                           "3210223

  ENDMETHOD.


  METHOD read_atgov.
    DATA: lv_clientRole TYPE t000-cccategory,
          lv_fixValueId TYPE char20.
    TEST-SEAM read_atgov_01.
      CALL FUNCTION 'TR_SYS_PARAMS'
        IMPORTING
          system_client_role = lv_clientRole
        EXCEPTIONS
          no_systemname      = 1
          no_systemtype      = 2
          OTHERS             = 3.
    END-TEST-SEAM.

    IF sy-subrc <> 0.
      CLEAR lv_clientRole.
    ENDIF.

    IF lv_clientRole = 'P'.                                 "#EC NOTEXT
      lv_fixValueId = mc_atgov_id_prod.

    ELSE.
      lv_fixValueId = mc_atgov_id_test.

    ENDIF.

    TEST-SEAM read_atgov_02.
      ev_party_id = get_fix_value( iv_name = lv_fixValueId
                                   iv_err_msg_ind = abap_true ).

    END-TEST-SEAM.
  ENDMETHOD.


  METHOD read_cbe. "changed with SAP Note 2854416 (moved from class CL_EDOC_MAP_UBL_BE)

    DATA: lv_id_number  TYPE bu_id_number,
          lv_bp_id_type TYPE bu_id_type.

    CLEAR ev_party_id.

*   Get Belgian Crossroad Bank of Enterprises Nr.
    IF iv_bukrs IS SUPPLIED.
      TEST-SEAM read_cbe_by_company_code.
        SELECT SINGLE paval
        INTO ev_party_id
        FROM t001z
        WHERE bukrs = iv_bukrs
        AND party = 'BEENTN'.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e060(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
      IF NOT ms_kna1-stcd1 IS INITIAL.                              "3042934
        ev_party_id = ms_kna1-stcd1.                                "3042934
      ELSE.
        MESSAGE e061(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_partner IS SUPPLIED.
*Start of 2938424
      read_cbe_for_partner(
        EXPORTING
          iv_partner  = iv_partner
        IMPORTING
          ev_party_id = ev_party_id ).
*End of 2938424
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_CBE' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.
  ENDMETHOD.


  METHOD read_cbe_for_partner.                              "Added with SAP Note 2938424

    CONSTANTS lc_tax_type TYPE bptaxtype VALUE 'BE1'.

    CLEAR ev_party_id.
    read_tax_number_for_partner(
      EXPORTING
        iv_partner  = iv_partner
        iv_tax_type = lc_tax_type
      IMPORTING
        ev_party_id = ev_party_id ).

  ENDMETHOD.


  METHOD read_chamber_of_commerce_nr. " added with SAP Note 2854416, (moved from class CL_EDOC_MAP_UBL_NL)

    DATA: ls_kna1       TYPE kna1,
          lv_id_number  TYPE bu_id_number,
          lv_partner    TYPE bu_partner,
          lv_bp_id_type TYPE bu_id_type,
          lv_is_cpd     TYPE boole_d.                       "3071425

    CLEAR ev_party_id.

    " Start of Change 3071425
    IF iv_kunnr IS SUPPLIED.
      cl_edoc_util_eu=>get_onetime_indicator(
        EXPORTING
          iv_kunnr = iv_kunnr
        RECEIVING
          rv_is_onetime = lv_is_cpd ).
    ELSEIF iv_lifnr IS SUPPLIED.
      cl_edoc_util_eu=>get_onetime_indicator(
        EXPORTING
          iv_lifnr = iv_lifnr
        RECEIVING
          rv_is_onetime = lv_is_cpd ).
    ENDIF.
    " End of Change 3071425

    IF lv_is_cpd IS NOT INITIAL.                            "3071425
      read_kvk_or_oin_for_cpd( EXPORTING iv_text_id  = gc_onetime_kvk_textid
                               IMPORTING ev_party_id = ev_party_id ).
      IF ev_party_id IS INITIAL.
        MESSAGE e064(edocument_eu) WITH iv_kunnr INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

      RETURN.
    ENDIF.                                                  "3071425

* get Chamber of Commerce number
    IF iv_bukrs IS SUPPLIED.
      TEST-SEAM read_chamber_of_commerce_nr_01.
        SELECT SINGLE paval
          INTO ev_party_id
          FROM t001z
          WHERE bukrs = iv_bukrs
          AND party = 'CCNR'.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e063(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
      " Delete 3365100
        get_partner_for_customer(
          EXPORTING
            iv_kunnr    = iv_kunnr
          IMPORTING
            ev_partner  = lv_partner ).

        lv_bp_id_type = get_nontax_idtypes( iv_party_id_type =  gc_edoc_party_type_ubl-nl_kvk ).

        determine_idnumber_by_type(
          EXPORTING
            iv_partner  = lv_partner
            iv_type     = lv_bp_id_type
          IMPORTING
            ev_idnumber = lv_id_number ).

        ev_party_id = lv_id_number.
        IF lv_id_number IS INITIAL.                         "3071425
          MESSAGE e064(edocument_eu) WITH iv_kunnr INTO cl_edocument=>gv_error_txt. "3071425
          cl_edocument=>raise_edoc_exception( ).            "3071425
        ENDIF.                                              "3071425

        TEST-SEAM read_chamber_of_commerce_nr_02. END-TEST-SEAM.
      " Delete 3365100
    ELSEIF iv_partner IS SUPPLIED.
      lv_bp_id_type = get_nontax_idtypes( iv_party_id_type = gc_edoc_party_type_ubl-nl_kvk ).

      determine_idnumber_by_type(
        EXPORTING
          iv_partner  = iv_partner
          iv_type     = lv_bp_id_type
        IMPORTING
          ev_idnumber = lv_id_number ).

      ev_party_id = lv_id_number.
      IF lv_id_number IS INITIAL.                           "3109533
        MESSAGE e064(edocument_eu) WITH iv_partner INTO cl_edocument=>gv_error_txt. "3109533
        cl_edocument=>raise_edoc_exception( ).              "3109533
      ENDIF.                                                "3109533
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_CHAMBER_OF_COMMERCE_NR' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD read_corp.  "Added with SAP Note 3210223
    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
      SELECT SINGLE paval INTO ev_party_id
      FROM t001z WHERE bukrs = iv_bukrs
                   AND party = 'JPCCRP'.
      IF sy-subrc <> 0.
        MESSAGE e029(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
      IF NOT ms_kna1-stcd3 IS INITIAL.
        ev_party_id = ms_kna1-stcd3.
      ELSE.
        MESSAGE e030(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_partner IS SUPPLIED.
      read_tax_number_for_partner(
        EXPORTING
          iv_partner  = iv_partner
          iv_tax_type = 'JP3'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_lifnr IS SUPPLIED.
      IF NOT ms_vendor-stcd3 IS INITIAL.
        ev_party_id = ms_vendor-stcd3.
      ELSE.
        MESSAGE e054(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_CORP' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


 METHOD read_cpd_party_id."3071425

    DATA:
          lo_edoc_source        TYPE REF TO cl_edoc_source,
          lt_text_line          TYPE edoc_itctl_tab,
          ls_text_line          LIKE LINE OF lt_text_line,
          lv_party_code_type    TYPE edoc_party_code_type,
          lv_participant_suffix TYPE string,
          lo_edoc_eu_db         TYPE REF TO cl_edocument_eu_db,
          ls_edoeuparty         TYPE edoeuparty,
          lv_adrnr              TYPE ad_addrnum,
          lv_kunnr              TYPE kunnr,
          ls_supplier           TYPE edoc_lifnr,
          lv_remark_xml         TYPE ad_remark2,
          lv_remark_pdf         TYPE ad_remark2,
          ls_adrt               TYPE adrt,
          ls_adr6               TYPE adr6,
          lv_participant_id     TYPE string.

    CLEAR: ev_party_id_type,
           ev_party_code_type,
           ev_party_id,
           ev_email.

    cl_edoc_source=>set_data_from_source_key(
       EXPORTING
         iv_source_key  = ms_source-source_header-source_key
         iv_source_type = ms_source-source_header-source_type
       RECEIVING
         ro_source      = lo_edoc_source ).

    lo_edoc_source->read_text(
      EXPORTING
        iv_text_id    = gc_onetime_cpd_textid
      IMPORTING
        et_text_line  = lt_text_line ).

    IF lt_text_line[] IS INITIAL.
     MESSAGE e108(edocument_eu) INTO cl_edocument=>gv_error_txt.
     cl_edocument=>raise_edoc_exception( ).
    ENDIF.

    READ TABLE lt_text_line INTO ls_text_line INDEX 1.
    lv_participant_id = ls_text_line-tdline.
    SPLIT lv_participant_id AT ':' INTO lv_party_code_type lv_participant_suffix.

    IF lv_party_code_type IS INITIAL.
     MESSAGE e109(edocument_eu) INTO cl_edocument=>gv_error_txt.
     cl_edocument=>raise_edoc_exception( ).
    ENDIF.

    IF lv_participant_suffix IS INITIAL.
     MESSAGE e111(edocument_eu) INTO cl_edocument=>gv_error_txt.
     cl_edocument=>raise_edoc_exception( ).
    ENDIF.

    CREATE OBJECT lo_edoc_eu_db.

    ls_edoeuparty = lo_edoc_eu_db->if_edocument_eu_db~select_edoeuparty_party_code( iv_party_code_type = lv_party_code_type ).
    IF ls_edoeuparty IS INITIAL.
     MESSAGE e110(edocument_eu) INTO cl_edocument=>gv_error_txt.
     cl_edocument=>raise_edoc_exception( ).
    ENDIF.

    go_edoc_util_eu->get_cpd_info_from_data_common(
      EXPORTING
        io_source     = lo_edoc_source
      IMPORTING
        ev_email      = ev_email ).

    ev_party_id        = lv_participant_suffix.
    ev_party_code_type = ls_edoeuparty-party_code_type.
    ev_party_id_type   = ls_edoeuparty-party_id_type.

  ENDMETHOD."3071425


  METHOD read_gln.

    DATA: ls_kna1         TYPE kna1,
          lv_partner_guid TYPE bu_partner_guid,             "2839436
          lv_partner      TYPE bu_partner,                  "2839436
          lv_party_id     TYPE bu_id_number,
          ls_but000       TYPE but000.                      "2968006

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
      "Start of Change 3030901
      IF ms_adrc_bukrs-country EQ 'NZ'.
        read_gln_nz(
          EXPORTING
            iv_bukrs    = iv_bukrs
          IMPORTING
            ev_party_id = ev_party_id ).
        RETURN.
      ENDIF.
      "End of Change 3030901
      TEST-SEAM read_gln_01.
        SELECT SINGLE gln
          INTO ev_party_id
          FROM eanc_gln_mapp
          WHERE object = 'BUKRS'
          AND object_key = iv_bukrs.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e023(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
      "Start of Change 3030901
      IF ms_adrc_cust-country EQ 'NZ'.
        read_gln_nz(
          EXPORTING
            iv_kunnr    = iv_kunnr
          IMPORTING
            ev_party_id = ev_party_id ).
        RETURN.
      ENDIF.
      "End of Change 3030901
* Start of Change 2839436
      " Delete 3365100
        get_partner_for_customer(
          EXPORTING
            iv_kunnr    = iv_kunnr
          IMPORTING
            ev_partner  = lv_partner ).
* Begin of 2968006
* Identification type is used to maintain 2nd, 3rd... GLN for same partner
* only 1st GLN should be considered as its same as maintained in ECC if migration taken place
        SELECT SINGLE * FROM but000 INTO ls_but000
            WHERE partner EQ lv_partner.
        IF ls_but000 IS NOT INITIAL.
          CONCATENATE ls_but000-location_1 ls_but000-location_2 ls_but000-location_3 INTO ev_party_id.
        ENDIF.
* End of 2968006
      " Delete 3365100
        TEST-SEAM read_gln_02.
        END-TEST-SEAM.
* End of Change 2839436
    ELSEIF iv_lifnr IS NOT INITIAL.
      "Start of Change 3030901
      IF ms_adrc_vend-country EQ 'NZ'.
        read_gln_nz(
          EXPORTING
            iv_lifnr    = iv_lifnr
          IMPORTING
            ev_party_id = ev_party_id ).
        RETURN.
      ENDIF.
* End of Change 3030901
    ELSEIF iv_partner IS SUPPLIED.
      determine_idnumber_by_type(
        EXPORTING
          iv_partner  = iv_partner
          iv_type     = if_edoc_map_ubl=>gc_bu_id_type-gln  "2992909
        IMPORTING
          ev_idnumber = lv_party_id ).
      ev_party_id = lv_party_id.
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_GLN' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD read_gln_nz.                                       " 3030901

    DATA:lv_partner TYPE bu_partner,
         lv_taxnum  TYPE bptaxnum.
         " Delete 3365100

    CLEAR ev_party_id.

    IF iv_bukrs IS NOT INITIAL.
      "Get Supplier Party ID
      TEST-SEAM gcpi0.
        SELECT SINGLE paval INTO ev_party_id  FROM t001z WHERE bukrs = ms_t001-bukrs AND party = 'NZBN'.
      END-TEST-SEAM.
    ELSEIF iv_kunnr IS NOT INITIAL.
      "Get Customer Party ID
      TEST-SEAM gcpi1.
        " Delete 3365100
      END-TEST-SEAM.

      " Delete 3365100
        get_partner_for_customer( EXPORTING iv_kunnr = ms_kna1-kunnr
                                  IMPORTING ev_partner = lv_partner ).

        TEST-SEAM gcpi2.
          SELECT SINGLE taxnum FROM dfkkbptaxnum INTO lv_taxnum
             WHERE partner EQ lv_partner
               AND taxtype EQ 'NZ3'.
        END-TEST-SEAM.
        IF sy-subrc EQ 0.
          ev_party_id = lv_taxnum.
        ENDIF.
      " Delete 3365100
    ELSEIF iv_lifnr IS NOT INITIAL.
      "Get Supplier Party ID
      TEST-SEAM gcpi3.
        " Delete 3365100
      END-TEST-SEAM.

      " Delete 3365100
        get_partner_for_supplier( EXPORTING iv_lifnr   = iv_lifnr
                                  IMPORTING ev_partner = lv_partner ).

        TEST-SEAM gcpi4.
          SELECT SINGLE taxnum FROM dfkkbptaxnum INTO lv_taxnum
             WHERE partner EQ lv_partner
               AND taxtype EQ 'NZ3'.
        END-TEST-SEAM.
        IF sy-subrc EQ 0.
          ev_party_id = lv_taxnum.
        ENDIF.
        TEST-SEAM gcpi5.
        END-TEST-SEAM.
      " Delete 3365100
    ENDIF.

    IF ev_party_id IS INITIAL.
      MESSAGE e107(edocument_eu) INTO cl_edocument=>gv_error_txt.
      add_error_message( ).
    ENDIF.

    CONDENSE ev_party_id NO-GAPS.                           " 3210223

  ENDMETHOD.


  METHOD read_id_with_note_and_party.

    CONSTANTS: lc_comm_type     TYPE ad_comm    VALUE 'SSF'.

    DATA: lt_adrt  TYPE STANDARD TABLE OF adrt,
          ls_adrt  TYPE adrt,
          ls_adr11 TYPE adr11,
          ls_t001z TYPE t001z.

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
      READ TABLE mt_t001z INTO ls_t001z WITH KEY bukrs = iv_bukrs
                                                 party = iv_party.
      IF sy-subrc = 0.
        ev_party_id = ls_t001z-paval.
      ELSE.
        MESSAGE e029(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.

      TEST-SEAM select_from_adrt.                           "2613785
        SELECT * FROM adrt INTO TABLE lt_adrt
          WHERE addrnumber = ms_adrc_cust-addrnumber
          AND   comm_type  = lc_comm_type
          AND   date_from  <= sy-datum
          AND   remark     = iv_remark.
* If SSF entry not found in Role specific/temporary address number
* Try with Customer Master Address Number
        IF lt_adrt IS INITIAL.                              "3042934
          SELECT * FROM adrt INTO TABLE lt_adrt             "3042934
            WHERE addrnumber = ms_kna1-adrnr                "3042934
            AND   comm_type  = lc_comm_type                 "3042934
            AND   date_from  <= sy-datum                    "3042934
            AND   remark     = iv_remark.                   "3042934
        ENDIF.                                              "3042934

      END-TEST-SEAM.                                        "2613785

      IF NOT lt_adrt IS INITIAL.
*     Remark: FOR ALL ENTRIES cannot be used due to long field SSFID
        SORT lt_adrt BY date_from DESCENDING.
        LOOP AT lt_adrt INTO ls_adrt.
          TEST-SEAM select_from_adr11.                      "2613785
            SELECT SINGLE *                                 "#EC CI_ALL_FIELDS_NEEDED
              FROM adr11
              INTO ls_adr11
              WHERE addrnumber = ls_adrt-addrnumber
              AND   persnumber = ls_adrt-persnumber
              AND   date_from <= sy-datum
              AND   consnumber = ls_adrt-consnumber.
          END-TEST-SEAM.                                    "2613785
*       if the value is found exit the loop
          IF NOT ls_adr11-ssfid IS INITIAL.
            EXIT.
          ENDIF.
        ENDLOOP.

        IF NOT ls_adr11-ssfid IS INITIAL.
          ev_party_id = ls_adr11-ssfid.
        ELSE.
          MESSAGE e030(edocument_eu) WITH iv_kunnr INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ENDIF.
* Start of Change 2854416
    ELSEIF iv_lifnr IS SUPPLIED.
      TEST-SEAM select_from_adrt_for_lifnr.
        CLEAR lt_adrt.
        SELECT * FROM adrt INTO TABLE lt_adrt
          WHERE addrnumber = ms_adrc_vend-addrnumber
          AND   comm_type  = lc_comm_type
          AND   date_from  <= sy-datum
          AND   remark     = iv_remark.
      END-TEST-SEAM.

      IF NOT lt_adrt IS INITIAL.
*     Remark: FOR ALL ENTRIES cannot be used due to long field SSFID
        SORT lt_adrt BY date_from DESCENDING.
        CLEAR ls_adrt.
        LOOP AT lt_adrt INTO ls_adrt.
          TEST-SEAM select_from_adr11_for_lifnr.
            SELECT SINGLE *                                 "#EC CI_ALL_FIELDS_NEEDED
              FROM adr11
              INTO ls_adr11
              WHERE addrnumber = ls_adrt-addrnumber
              AND   persnumber = ls_adrt-persnumber
              AND   date_from <= sy-datum
              AND   consnumber = ls_adrt-consnumber.
          END-TEST-SEAM.
*       if the value is found exit the loop
          IF NOT ls_adr11-ssfid IS INITIAL.
            EXIT.
          ENDIF.
        ENDLOOP.

        IF NOT ls_adr11-ssfid IS INITIAL.
          ev_party_id = ls_adr11-ssfid.
        ELSE.
          MESSAGE e054(edocument_eu) WITH iv_lifnr INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ENDIF.
* End of Change 2854416
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_ID' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD read_kvk_or_oin_for_cpd."3071425
    DATA:
          lo_edoc_source     TYPE REF TO cl_edoc_source,
          lt_text_line       TYPE edoc_itctl_tab,
          ls_text_line       LIKE LINE OF lt_text_line.

    CLEAR ev_party_id.

    cl_edoc_source=>set_data_from_source_key(
       EXPORTING
         iv_source_key  = ms_source-source_header-source_key
         iv_source_type = ms_source-source_header-source_type
       RECEIVING
         ro_source      = lo_edoc_source ).

    lo_edoc_source->read_text(
      EXPORTING
        iv_text_id    = iv_text_id
      IMPORTING
        et_text_line  = lt_text_line ).

    READ TABLE lt_text_line INTO ls_text_line INDEX 1.
    ev_party_id = ls_text_line-tdline.
  ENDMETHOD."3071425


  METHOD read_leitweg_id. " added with SAP Note 2854416 (moved from class CL_EDOC_MAP_UBL_DE)
* The Leitweg ID will be maintained:
*   For CUSTOMERS and SUPPLIERS - in the master data as a value for the communication type SSF and Note DE_LEITWEG_ID
*   For COMPANIES - in the OBY6 transaction as a value for the additional parameter LEITW

    DATA: lv_id_number  TYPE bu_id_number,
          lv_partner    TYPE bu_partner,
          lv_bp_id_type TYPE bu_id_type.
    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
      read_id_with_note_and_party(
        EXPORTING
          iv_bukrs    = iv_bukrs "Del 2992909
          iv_party    = if_edoc_map_ubl=>gc_de_comp_lid     "2992909
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_kunnr IS SUPPLIED.
* Begin of 2992171
      read_id_with_note_and_party(
        EXPORTING
          iv_kunnr    = iv_kunnr
          iv_remark   = if_edoc_map_ubl=>gc_de_cust_lid_technical "2992909
        IMPORTING
          ev_party_id = ev_party_id ).
      IF ev_party_id IS INITIAL.
* End of 2992171
        read_id_with_note_and_party(
          EXPORTING
            iv_kunnr    = iv_kunnr
            iv_remark   = if_edoc_map_ubl=>gc_de_cust_lid_business "2992909
          IMPORTING
            ev_party_id = ev_party_id ).
      ENDIF.                                                "2992171

      IF ev_party_id IS INITIAL.
        " Delete 3365100
* read partner from customer
          get_partner_for_customer(
            EXPORTING
              iv_kunnr    = iv_kunnr
            IMPORTING
              ev_partner  = lv_partner ).

* Call READ_LEITWEG_ID with partner.
          IF lv_partner IS NOT INITIAL.
            read_leitweg_id(
              EXPORTING
                iv_partner = lv_partner
              IMPORTING
                ev_party_id = ev_party_id ).
          ENDIF.
        " Delete 3365100
      ENDIF.
    ELSEIF iv_partner IS SUPPLIED.
      "Del 2992909
      determine_idnumber_by_type(
        EXPORTING
          iv_partner  = iv_partner
          iv_type     = if_edoc_map_ubl=>gc_bu_id_type-de_lid_technical "2992909
        IMPORTING
          ev_idnumber = lv_id_number ).

      IF lv_id_number IS INITIAL.                           "2992909
        determine_idnumber_by_type(                         "2992909
          EXPORTING                                         "2992909
            iv_partner  = iv_partner                        "2992909
            iv_type     = if_edoc_map_ubl=>gc_bu_id_type-de_lid_business "2992909
          IMPORTING                                         "2992909
            ev_idnumber = lv_id_number ).                   "2992909
      ENDIF.                                                "2992909

      ev_party_id = lv_id_number.
      "Del 2992909
    ENDIF.

  ENDMETHOD.


  METHOD read_oin. " added with SAP Note 2854416, (moved from class CL_EDOC_MAP_UBL_NL)

    DATA: lv_id_number  TYPE bu_id_number,
          lv_partner    TYPE bu_partner,
          lv_bp_id_type TYPE bu_id_type,
          lv_is_cpd     TYPE boole_d."3071425

    CLEAR ev_party_id.

    " Start of Change 3071425
    IF iv_kunnr IS SUPPLIED.
      cl_edoc_util_eu=>get_onetime_indicator(
        EXPORTING
          iv_kunnr = iv_kunnr
        RECEIVING
          rv_is_onetime = lv_is_cpd ).
    ELSEIF iv_lifnr IS SUPPLIED.
      cl_edoc_util_eu=>get_onetime_indicator(
        EXPORTING
          iv_lifnr = iv_lifnr
        RECEIVING
          rv_is_onetime = lv_is_cpd ).
    ENDIF.
    " End of Change 3071425

    IF lv_is_cpd IS NOT INITIAL."3071425
      read_kvk_or_oin_for_cpd( EXPORTING iv_text_id  = gc_onetime_oin_textid
                               IMPORTING ev_party_id = ev_party_id ).

      RETURN.
    ENDIF."3071425

    IF iv_bukrs IS SUPPLIED.
      read_id_with_note_and_party(
        EXPORTING
          iv_bukrs    = iv_bukrs
          iv_remark   = 'NL_OIN'
          iv_party    = 'NLOIN'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_kunnr IS SUPPLIED.
      " Delete 3365100
        get_partner_for_customer(
          EXPORTING
            iv_kunnr    = iv_kunnr
          IMPORTING
            ev_partner  = lv_partner ).

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ).     "3210223
          lv_bp_id_type = get_nontax_idtypes(
            iv_party_id_type = gc_edoc_party_type_ubl-nl_oino ).
        ELSE.
          lv_bp_id_type = get_nontax_idtypes(
            iv_party_id_type = gc_edoc_party_type_ubl-nl_oin ).
        ENDIF.

        determine_idnumber_by_type(
          EXPORTING
            iv_partner  = lv_partner
            iv_type     = lv_bp_id_type
          IMPORTING
            ev_idnumber = lv_id_number ).

        ev_party_id = lv_id_number.
      " Delete 3365100
    ELSEIF iv_lifnr IS SUPPLIED.
      " Delete 3365100
        CLEAR lv_partner.
        get_partner_for_supplier(
          EXPORTING
            iv_lifnr = iv_lifnr
          IMPORTING
            ev_partner = lv_partner ).

        IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ).     "3210223
          lv_bp_id_type = get_nontax_idtypes(
            iv_party_id_type = gc_edoc_party_type_ubl-nl_oino ).
        ELSE.
          lv_bp_id_type = get_nontax_idtypes(
            iv_party_id_type = gc_edoc_party_type_ubl-nl_oin ).
        ENDIF.

        CLEAR lv_id_number.
        determine_idnumber_by_type(
          EXPORTING
            iv_partner  = lv_partner
            iv_type     = lv_bp_id_type
          IMPORTING
            ev_idnumber = lv_id_number ).
        ev_party_id = lv_id_number.
      " Delete 3365100
    ELSEIF iv_partner IS SUPPLIED.
      IF go_edoc_util_eu->is_bis3_or_pint( mv_customization_id ).     "3210223
        lv_bp_id_type = get_nontax_idtypes(
          iv_party_id_type =  gc_edoc_party_type_ubl-nl_oino ).
      ELSE.
        lv_bp_id_type = get_nontax_idtypes(
          iv_party_id_type =  gc_edoc_party_type_ubl-nl_oin ).
      ENDIF.

      determine_idnumber_by_type(
        EXPORTING
          iv_partner  = iv_partner
          iv_type     = lv_bp_id_type
        IMPORTING
          ev_idnumber = lv_id_number ).

      ev_party_id = lv_id_number.
    ENDIF.

  ENDMETHOD.


  METHOD read_orgnr.

    CONSTANTS: lc_tax_type_se TYPE bptaxtype VALUE 'SE2',
               lc_tax_type_no TYPE bptaxtype VALUE 'NO2',
               lc_length_se   TYPE i VALUE '10',
               lc_length_no   TYPE i VALUE '9'.

    DATA: lv_length   TYPE i,
          lt_bus_tax  TYPE bus_tax_t,
          ls_bus_tax  TYPE bus_tax,                         "Del-2905102
          lv_tax_type TYPE bptaxtype,
          lv_partner  TYPE bu_partner,                      "2839436
          lv_party_id TYPE edoc_party_id,                   "2839436
          lv_len      TYPE i.

    FIELD-SYMBOLS: <fs_t001z> LIKE LINE OF mt_t001z.        "3210223

    CLEAR ev_party_id.                                      "2839436

    IF iv_bukrs IS SUPPLIED.
                                                          "Del-2905102
* Get the lenght of the ORGNG ID by country
      IF ms_t001-land1 = 'SE'.                            "2905102
        lv_len = lc_length_se.
      ELSEIF ms_t001-land1 = 'NO'.                        "2905102
        " Start of Change 3210223
        READ TABLE mt_t001z WITH KEY bukrs = iv_bukrs
                                     party = 'NO_JUR'
                            ASSIGNING <fs_t001z>.
        IF sy-subrc = 0.
          ev_party_id = <fs_t001z>-paval.
          RETURN.
        ELSE.
          lv_len = lc_length_no.
        ENDIF.
        " End of Change 3210223
      ENDIF.

      IF ms_t001-stceg IS NOT INITIAL.                    "2905102
        lv_length = strlen( ms_t001-stceg ).              "2905102
        IF lv_length = 14.
          ev_party_id = ms_t001-stceg+2(lv_len).          "2905102
        ELSEIF lv_length = lv_len.
          ev_party_id = ms_t001-stceg.                    "2905102
        ELSE.
          MESSAGE e029(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
          cl_edocument=>raise_edoc_exception( ).
        ENDIF.
      ELSE.
        MESSAGE e029(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
* Start of Change 2839436
      " Delete 3365100
        get_partner_for_customer(
          EXPORTING
            iv_kunnr    = iv_kunnr
          IMPORTING
            ev_partner  = lv_partner ).

        read_orgnr_for_partner(
          EXPORTING
            iv_partner  = lv_partner
            iv_country = ms_kna1-land1                    "3259089
            iv_legal_party_id = iv_legal_party_id         "2992909
          IMPORTING
            ev_party_id = lv_party_id ).

        ev_party_id = lv_party_id.
      " Delete 3365100
* End of Change 2839436
* Start of Change 3210223
    ELSEIF iv_lifnr IS SUPPLIED.
      IF ms_vendor-stcd2 IS NOT INITIAL.
        ev_party_id = ms_vendor-stcd2.
      ELSEIF ms_vendor-stcd1 IS NOT INITIAL.
        IF ms_vendor-land1 = 'SE'.
          lv_len = lc_length_se.
        ELSEIF ms_vendor-land1 = 'NO'.
          lv_len = lc_length_no.
        ENDIF.
        lv_length = strlen( ms_vendor-stcd1  ).
        IF lv_length = 14.
          ev_party_id = ms_vendor-stcd1+2(lv_len).
        ELSEIF lv_length = 12 AND ms_vendor-land1 = 'NO'.
          ev_party_id = ms_vendor-stcd1(lv_len).
        ENDIF.
      ENDIF.
      IF ev_party_id IS INITIAL.
        MESSAGE e054(edocument_eu) WITH iv_lifnr INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
* End of Change 3210223
    ELSEIF iv_partner IS SUPPLIED.

* Start of Change 2839436
      read_orgnr_for_partner(
        EXPORTING
          iv_partner  = iv_partner
        IMPORTING
          ev_party_id = lv_party_id ).
      ev_party_id = lv_party_id.
* End of Change 2839436
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_ORGNR' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD read_orgnr_for_partner. "Added with SAP Note 2839436

    CONSTANTS: lc_tax_type_se TYPE bptaxtype VALUE 'SE2',
               lc_tax_type_no TYPE bptaxtype VALUE 'NO2'.

    DATA lv_tax_type TYPE bptaxtype.
    DATA lv_tax_type_relevant_country TYPE land1_gp.       "3259089
    DATA ls_bp_address_number TYPE addr1_sel.              "3259089
    DATA ls_address TYPE sadr.                              "3259089
    "Del-2938424
    CLEAR ev_party_id.

    "Start of 3259089
    IF iv_country IS NOT INITIAL.
      lv_tax_type_relevant_country = iv_country.
    ELSE.
      CALL FUNCTION 'BUPA_ADDRESSES_READ'
        EXPORTING
          iv_partner             = iv_partner
        IMPORTING
          ev_standard_addrnumber = ls_bp_address_number-addrnumber
        EXCEPTIONS
          no_partner_specified   = 1
          no_valid_record_found  = 2
          not_found              = 3
          blocked_partner        = 4
          OTHERS                 = 5.
      IF sy-subrc <> 0.
        lv_tax_type_relevant_country = ms_source-source_header-land.
      ELSE.
        CALL FUNCTION 'ADDR_GET'
          EXPORTING
            address_selection = ls_bp_address_number
          IMPORTING
            sadr              = ls_address
          EXCEPTIONS
            parameter_error   = 1                " Incorrect parameter values
            address_not_exist = 2                " Address does not exist
            version_not_exist = 3                " International version of the address does not exist
            internal_error    = 4                " Serious internal error (MESSAGE A...)
            address_blocked   = 5                " Address is blocked
            OTHERS            = 6.
        IF sy-subrc <> 0.
          lv_tax_type_relevant_country = ms_source-source_header-land.
        ELSE.
          lv_tax_type_relevant_country = ls_address-land1.
        ENDIF.
      ENDIF.
    ENDIF.
    IF lv_tax_type_relevant_country IS INITIAL.
      lv_tax_type_relevant_country = ms_source-source_header-land.
    ENDIF.
    IF lv_tax_type_relevant_country = 'SE'.
      lv_tax_type = lc_tax_type_se.
    ELSEIF lv_tax_type_relevant_country = 'NO'.
      lv_tax_type = lc_tax_type_no.
    ENDIF.
    "End of 3259089
* Start of 2938424
    read_tax_number_for_partner(
      EXPORTING
        iv_partner  = iv_partner
        iv_tax_type = lv_tax_type
        iv_legal_party_id = iv_legal_party_id               "2992909
      IMPORTING
        ev_party_id = ev_party_id ).
* End of 2938424

  ENDMETHOD.


METHOD read_peppol_id. " added with SAP Note 3042934
  DATA: lv_id_number  TYPE bu_id_number,
        lv_partner    TYPE bu_partner,
        lv_bp_id_type TYPE bu_id_type,
        ls_t001z      TYPE t001z.
  DATA: lv_party_id_type TYPE edoc_party_id_type,
        lv_country_key   TYPE land1,
        lv_prefix_mode   TYPE cccategory,
        lo_edoc_eu_db    TYPE REF TO if_edocument_eu_db,
        lo_edoc_db       TYPE REF TO if_edocument_db,
        ls_edoeuparty    TYPE edoeuparty,
        ls_edoeucomp     TYPE edoeucomp,
        ls_edoeubupa     TYPE edoeubupa,
        ls_kna1          TYPE kna1,
        ls_lfa1          TYPE lfa1.

  CLEAR ev_party_id.

*  Start of Note 3326386
*  Decide whether in Test or Prod mode for SG prefix adding
  lv_prefix_mode = get_mode_setting_ubl( ).
  IF lv_prefix_mode IS INITIAL.
    lv_prefix_mode = get_system_role( ).
  ENDIF.
  lo_edoc_eu_db = create_edocument_eu_db( )."3326386
  lo_edoc_db = create_edocument_db( )."3326386
*  End of Note 3326386

*  Company Code
  IF iv_bukrs IS SUPPLIED.
    READ TABLE mt_t001z INTO ls_t001z WITH KEY party = if_edoc_map_ubl=>gc_comp_code_peppol_id_textid
                                               bukrs = iv_bukrs.
    IF sy-subrc = 0.
      ev_party_id = ls_t001z-paval.
    ENDIF.

*  Start of Note 3326386
    " Read party ID type for SG prefix adding
    ls_edoeucomp = lo_edoc_eu_db->select_edoeucomp( iv_bukrs = iv_bukrs ).
    lv_party_id_type = ls_edoeucomp-party_id_type.

    IF lv_party_id_type = 'SG:DCUID'.
      SELECT SINGLE land1 INTO lv_country_key FROM t001 WHERE bukrs = iv_bukrs.
      " For non production systems/clients, use prefix DCTST
      " For production systems/clients, use prefix DCUID
      IF lv_prefix_mode NE 'P'.
        CONCATENATE lv_country_key 'TST' ev_party_id INTO ev_party_id.
      ELSE.
        CONCATENATE lv_country_key 'UID' ev_party_id INTO ev_party_id.
      ENDIF.
    ENDIF.
*  End of Note 3326386

*  Customer
  ELSEIF iv_kunnr IS SUPPLIED.
    " Delete 3365100
      get_partner_for_customer(
        EXPORTING
          iv_kunnr    = iv_kunnr
        IMPORTING
          ev_partner  = lv_partner ).

      lv_bp_id_type = if_edoc_map_ubl=>gc_bu_id_type-gen_peppol_id.

      determine_idnumber_by_type(
        EXPORTING
          iv_partner  = lv_partner
          iv_type     = lv_bp_id_type
        IMPORTING
          ev_idnumber = lv_id_number ).
      ev_party_id = lv_id_number.
    " Delete 3365100

*  Start of Note 3326386
    " Read party ID type for SG prefix adding
    TEST-SEAM read_peppol_id_02.
      lo_edoc_eu_db->select_edoeubupa(
        EXPORTING
          iv_partner_id   = iv_kunnr
          iv_partner_type = 'C'
        RECEIVING
          rs_edoeubupa    = ls_edoeubupa ).
      lv_party_id_type = ls_edoeubupa-party_id_type.
    END-TEST-SEAM.

    IF lv_party_id_type = 'SG:DCUID'.

      lo_edoc_db->select_kna1(
        EXPORTING
          iv_kunnr = iv_kunnr
        RECEIVING
          rs_kna1  = ls_kna1 ).
      lv_country_key = ls_kna1-land1.

      " For non production systems/clients, use prefix DCTST
      " For production systems/clients, use prefix DCUID
      IF lv_prefix_mode NE 'P'.
        CONCATENATE lv_country_key 'TST' ev_party_id INTO ev_party_id.
      ELSE.
        CONCATENATE lv_country_key 'UID' ev_party_id INTO ev_party_id.
      ENDIF.
    ENDIF.
*  End of Note 3326386

*  Vendor
  ELSEIF iv_lifnr IS SUPPLIED.
    " Delete 3365100
      CLEAR lv_partner.
      get_partner_for_supplier(
        EXPORTING
          iv_lifnr = iv_lifnr
        IMPORTING
          ev_partner = lv_partner ).

      lv_bp_id_type = if_edoc_map_ubl=>gc_bu_id_type-gen_peppol_id.

      CLEAR lv_id_number.
      determine_idnumber_by_type(
        EXPORTING
          iv_partner  = lv_partner
          iv_type     = lv_bp_id_type
        IMPORTING
          ev_idnumber = lv_id_number ).
      ev_party_id = lv_id_number.
    " Delete 3365100

*  Start of Note 3326386
    " Read party ID type for later SG prefix adding
    TEST-SEAM read_peppol_id_03.
      lo_edoc_eu_db->select_edoeubupa(
        EXPORTING
          iv_partner_id   = iv_lifnr
          iv_partner_type = 'V'
        RECEIVING
          rs_edoeubupa    = ls_edoeubupa ).
      lv_party_id_type = ls_edoeubupa-party_id_type.
    END-TEST-SEAM.

    IF lv_party_id_type = 'SG:DCUID'.

      lo_edoc_db->select_lfa1(
          EXPORTING
            iv_lifnr = iv_lifnr
          RECEIVING
            rs_lfa1  = ls_lfa1 ).
      lv_country_key = ls_lfa1-land1.

      " For non production systems/clients, use prefix DCTST
      " For production systems/clients, use prefix DCUID
      IF lv_prefix_mode NE 'P'.
        CONCATENATE lv_country_key 'TST' ev_party_id INTO ev_party_id.
      ELSE.
        CONCATENATE lv_country_key 'UID' ev_party_id INTO ev_party_id.
      ENDIF.
    ENDIF.
*  End of Note 3326386

*  Business Partner
  ELSEIF iv_partner IS SUPPLIED.
    lv_bp_id_type = if_edoc_map_ubl=>gc_bu_id_type-gen_peppol_id.

    determine_idnumber_by_type(
      EXPORTING
        iv_partner  = iv_partner
        iv_type     = lv_bp_id_type
      IMPORTING
        ev_idnumber = lv_id_number ).

    ev_party_id = lv_id_number.

*  Start of Note 3326386
    " Read party ID type for later SG prefix adding
    TEST-SEAM read_peppol_id_04.
      lo_edoc_eu_db->select_edoeubupa(
        EXPORTING
          iv_partner_id   = iv_partner
          iv_partner_type = 'P'
        RECEIVING
          rs_edoeubupa    = ls_edoeubupa ).
      lv_party_id_type = ls_edoeubupa-party_id_type.
    END-TEST-SEAM.

    IF lv_party_id_type = 'SG:DCUID'.

      get_country_for_partner(
        EXPORTING
          iv_partner = iv_partner
        IMPORTING
          ev_country  = lv_country_key ).

      " For non production systems/clients, use prefix DCTST
      " For production systems/clients, use prefix DCUID
      IF lv_prefix_mode NE 'P'.
        CONCATENATE lv_country_key 'TST' ev_party_id INTO ev_party_id.
      ELSE.
        CONCATENATE lv_country_key 'UID' ev_party_id INTO ev_party_id.
      ENDIF.
    ENDIF.
*  End of Note 3326386

  ENDIF.

ENDMETHOD.


  METHOD read_siret_b2g. "Added with note 3134550

    CLEAR ev_party_id.

    IF iv_kunnr IS SUPPLIED
      OR iv_partner IS SUPPLIED.
      "For France, Receiver Authority is Chorus ID
      ev_party_id = get_fix_value(
                      iv_name        = 'FR_B2G_PEPPOL_ID'
                      iv_err_msg_ind = abap_false ).
    ENDIF.

  ENDMETHOD.


  METHOD read_tax_number. "Added with note 3042934
    TYPES: BEGIN OF ty_but020,
             addrnumber      TYPE but020-addrnumber,
             addr_valid_from TYPE but020-addr_valid_from,
           END OF ty_but020.

    DATA: lv_taxtype      TYPE bptaxtype,
          lv_taxnum       TYPE bptaxnum,
          lt_but020       TYPE TABLE OF ty_but020,
          ls_but020       TYPE ty_but020,
          lv_partner_guid TYPE bu_partner_guid,
          lv_partner      TYPE bu_partner,
          lv_country      TYPE land1,
          lv_tax_field    TYPE string,
          lx_root         TYPE REF TO cx_root,
          lv_party        TYPE t001z-party,           "3071425
          lv_intca        TYPE intca.                 "3071425

    FIELD-SYMBOLS: <fs_tax_field> TYPE any.

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
"   Start of 3071425
      CLEAR lv_intca.
      CALL FUNCTION 'COUNTRY_CODE_SAP_TO_ISO'
        EXPORTING
          sap_code  = ms_t001-land1
        IMPORTING
          iso_code  = lv_intca
        EXCEPTIONS
          not_found = 1
          OTHERS    = 2.

      CONCATENATE 'SAP' lv_intca iv_tax_index INTO lv_party.
      SELECT SINGLE paval
        INTO ev_party_id
        FROM t001z
        WHERE bukrs = iv_bukrs
          AND party = lv_party.
      IF ev_party_id IS INITIAL.
        MESSAGE e029(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
"   End of 3071425
    ELSEIF iv_kunnr IS SUPPLIED.
      CONCATENATE 'STCD' iv_tax_index INTO lv_tax_field.
      ASSIGN COMPONENT lv_tax_field OF STRUCTURE ms_kna1 TO <fs_tax_field>.
      IF <fs_tax_field> IS ASSIGNED.
        ev_party_id = <fs_tax_field>.
      ENDIF.
      IF ev_party_id IS INITIAL.
        MESSAGE e030(edocument_eu) WITH iv_kunnr INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_lifnr IS SUPPLIED.
      CONCATENATE 'STCD' iv_tax_index INTO lv_tax_field.
      TRY.
      TEST-SEAM read_tax_number1.
        SELECT SINGLE (lv_tax_field)
          INTO ev_party_id
          FROM lfa1
          WHERE lifnr = iv_lifnr.
      END-TEST-SEAM.
        CATCH cx_sy_dynamic_osql_semantics INTO lx_root.
          CLEAR ev_party_id.
      ENDTRY.
      IF ev_party_id IS INITIAL.                              "3071425
        MESSAGE e054(edocument_eu) WITH iv_lifnr INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_partner IS SUPPLIED.
*     the tax type is considered to be the country code followed by 1 (ex: BE1, DE1, FR1)
*     determine the partner address in order to take the country code of the partner
      get_country_for_partner(
        EXPORTING
          iv_partner = iv_partner
        IMPORTING
          ev_country  = lv_country ).
      CONCATENATE lv_country iv_tax_index INTO lv_taxtype.

      read_tax_number_for_partner(
        EXPORTING
          iv_partner = iv_partner
          iv_tax_type  = lv_taxtype
        IMPORTING
          ev_party_id = ev_party_id ).
    ENDIF.

  ENDMETHOD.


  METHOD read_tax_number1. "Added with note 3042934
    TYPES: BEGIN OF ty_but020,
             addrnumber      TYPE but020-addrnumber,
             addr_valid_from TYPE but020-addr_valid_from,
           END OF ty_but020.

    DATA: lv_taxtype      TYPE bptaxtype,
          lv_taxnum       TYPE bptaxnum,
          lt_but020       TYPE TABLE OF ty_but020,
          ls_but020       TYPE ty_but020,
          lv_partner_guid TYPE bu_partner_guid,
          lv_partner      TYPE bu_partner,
          lv_country      TYPE land1.

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
"   Start of 3071425
      read_tax_number(
        EXPORTING
          iv_bukrs     = iv_bukrs
          iv_tax_index = '1'
        IMPORTING
          ev_party_id = ev_party_id ).
"   End of 3071425
    ELSEIF iv_kunnr IS SUPPLIED.
      read_tax_number(
        EXPORTING
          iv_kunnr     = iv_kunnr
          iv_tax_index = '1'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_lifnr IS SUPPLIED.
      read_tax_number(
        EXPORTING
          iv_lifnr    = iv_lifnr
          iv_tax_index = '1'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_partner IS SUPPLIED.
      read_tax_number(
        EXPORTING
          iv_partner  = iv_partner
          iv_tax_index = '1'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_TAX_NUMBER1' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD READ_TAX_NUMBER2. "Added with note 3042934
    TYPES: BEGIN OF ty_but020,
             addrnumber      TYPE but020-addrnumber,
             addr_valid_from TYPE but020-addr_valid_from,
           END OF ty_but020.

    DATA: lv_taxtype      TYPE bptaxtype,
          lv_taxnum       TYPE bptaxnum,
          lt_but020       TYPE TABLE OF ty_but020,
          ls_but020       TYPE ty_but020,
          lv_partner_guid TYPE bu_partner_guid,
          lv_partner      TYPE bu_partner,
          lv_country      TYPE land1.

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
"   Start of 3071425
      read_tax_number(
        EXPORTING
          iv_bukrs     = iv_bukrs
          iv_tax_index = '2'
        IMPORTING
          ev_party_id = ev_party_id ).
"   End of 3071425
    ELSEIF iv_kunnr IS SUPPLIED.
      read_tax_number(
        EXPORTING
          iv_kunnr     = iv_kunnr
          iv_tax_index = '2'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_lifnr IS SUPPLIED.
      read_tax_number(
        EXPORTING
          iv_lifnr    = iv_lifnr
          iv_tax_index = '2'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSEIF iv_partner IS SUPPLIED.
      read_tax_number(
        EXPORTING
          iv_partner  = iv_partner
          iv_tax_index = '2'
        IMPORTING
          ev_party_id = ev_party_id ).
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_TAX_NUMBER2' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD READ_TAX_NUMBER_FOR_PARTNER. "Added with SAP Note 2938424
    CONSTANTS: lc_length_se   TYPE i VALUE '10',
               lc_length_no   TYPE i VALUE '9'.

    DATA: lt_bus_tax  TYPE bus_tax_t,
          ls_bus_tax  TYPE bus_tax,
          lv_length   TYPE i,
          lv_len      TYPE i,
          lv_vat_tax_type TYPE bptaxtype.

    CLEAR ev_party_id.
    CALL FUNCTION 'BUPA_TAX_READ'
      EXPORTING
        iv_partner            = iv_partner
      IMPORTING
        et_data               = lt_bus_tax
      EXCEPTIONS
        no_valid_record_found = 1
        OTHERS                = 2.
    IF sy-subrc <> 0.
      MESSAGE e033(edocument_eu) WITH iv_partner iv_tax_type INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ELSE.
      READ TABLE lt_bus_tax INTO ls_bus_tax WITH KEY tax_type = iv_tax_type.
      IF sy-subrc EQ 0.
        ev_party_id = ls_bus_tax-tax_number.
      ELSE.
* Begin of 2992909
* Read VAT and identify Tax Identificaton
       IF iv_legal_party_id EQ abap_true.
          CONCATENATE iv_tax_type+0(2) '0' INTO lv_vat_tax_type.
          READ TABLE lt_bus_tax INTO ls_bus_tax WITH KEY tax_type = lv_vat_tax_type.
          IF sy-subrc EQ 0.
            IF iv_tax_type+0(2) = 'SE'.
              lv_len = lc_length_se.
            ELSEIF iv_tax_type+0(2) = 'NO'.
              lv_len = lc_length_no.
            ENDIF.

            IF ls_bus_tax-tax_number IS NOT INITIAL.
              lv_length = strlen( ls_bus_tax-tax_number ).
              IF lv_length = 14.
                ev_party_id = ls_bus_tax-tax_number+2(lv_len).
              ENDIF.
            ENDIF.
         ENDIF.
       ENDIF.
      ENDIF.
* End of 2992909
      IF ev_party_id IS INITIAL.
        MESSAGE e033(edocument_eu) WITH iv_partner iv_tax_type INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
   ENDIF.

  ENDMETHOD.


  METHOD read_uen_ubl.

    DATA: lv_id_number  TYPE bu_id_number. "3210223 del
    DATA: lv_party_id_type TYPE edoc_party_id_type.
    DATA: lv_prefix_mode   TYPE cccategory,
          lo_edoc_eu_db    TYPE REF TO cl_edocument_eu_db,
          ls_edoeuparty    TYPE edoeuparty,
          ls_edoeucomp     TYPE edoeucomp,
          ls_edoeubupa     TYPE edoeubupa.

    CLEAR ev_party_id.

*  Start of Note 3326386
*  Decide whether in Test or Prod mode for SG prefix adding
    TEST-SEAM READ_UEN_UBL_00.
      lv_prefix_mode = get_mode_setting_ubl( ).
      IF lv_prefix_mode IS INITIAL.
        lv_prefix_mode = get_system_role( ).
      ENDIF.
    END-TEST-SEAM.
    CREATE OBJECT lo_edoc_eu_db.
*  End of Note 3326386

*  Company Code
    IF iv_bukrs IS SUPPLIED.
        TEST-SEAM READ_UEN_UBL_01.
          SELECT SINGLE paval
          INTO ev_party_id
          FROM t001z
          WHERE bukrs = iv_bukrs
          AND party = 'SG_UEN'.
        END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e112(edocument_eu) WITH iv_bukrs INTO cl_edocument=>gv_error_txt.     "3085941
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

*  Start of Note 3326386
      " For non production systems/clients, add prefix SGTST
      " For production systems/clients, add prefix according to party ID types
      IF lv_prefix_mode NE 'P'.
        CONCATENATE 'SGTST' ev_party_id INTO ev_party_id.
        CONDENSE ev_party_id.
      ELSE.

        TEST-SEAM READ_UEN_UBL_02.
          ls_edoeucomp = lo_edoc_eu_db->if_edocument_eu_db~select_edoeucomp( iv_bukrs = iv_bukrs ).
          lv_party_id_type = ls_edoeucomp-party_id_type.
        END-TEST-SEAM.

        CASE lv_party_id_type.
          WHEN 'SG:UEN'.
            CONCATENATE 'SGUEN' ev_party_id INTO ev_party_id.
          WHEN 'SG:UXN'.
            CONCATENATE 'SGUXN' ev_party_id INTO ev_party_id.
        ENDCASE.
      ENDIF.
*  End of Note 3326386

*  Customer
    ELSEIF iv_kunnr IS SUPPLIED.
      IF NOT ms_kna1-stcd3 IS INITIAL.                              "3042934
        ev_party_id = ms_kna1-stcd3.                                "3042934

*  Start of Note 3326386
        " For non production systems/clients, add prefix SGTST
        " For production systems/clients, add prefix according to party ID types
        IF lv_prefix_mode NE 'P'.
          CONCATENATE 'SGTST' ev_party_id INTO ev_party_id.
          CONDENSE ev_party_id.
        ELSE.

          TEST-SEAM READ_UEN_UBL_06.
            lo_edoc_eu_db->if_edocument_eu_db~select_edoeubupa(
              EXPORTING
                iv_partner_id   = iv_kunnr
                iv_partner_type = 'C'
              RECEIVING
                rs_edoeubupa    = ls_edoeubupa ).
            lv_party_id_type = ls_edoeubupa-party_id_type.
          END-TEST-SEAM.

          CASE lv_party_id_type.
            WHEN 'SG:UEN'.
              CONCATENATE 'SGUEN' ev_party_id INTO ev_party_id.
            WHEN 'SG:UXN'.
              CONCATENATE 'SGUXN' ev_party_id INTO ev_party_id.
          ENDCASE.
        ENDIF.
*  End of Note 3326386

      ELSE.
        MESSAGE e113(edocument_eu) WITH iv_kunnr INTO cl_edocument=>gv_error_txt. "3085941 3210223
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.

*  Business Partner
    ELSEIF iv_partner IS SUPPLIED.
      TEST-SEAM READ_UEN_UBL_03.
        read_tax_number_for_partner(
          EXPORTING
            iv_partner  = iv_partner
            iv_tax_type = 'SG3'
          IMPORTING
            ev_party_id = ev_party_id ).
      END-TEST-SEAM.

*  Start of Note 3326386
      IF ev_party_id IS NOT INITIAL.
        " For non production systems/clients, add prefix SGTST
        " For production systems/clients, add prefix according to party ID types
        IF lv_prefix_mode NE 'P'.
          CONCATENATE 'SGTST' ev_party_id INTO ev_party_id.
          CONDENSE ev_party_id.
        ELSE.
          TEST-SEAM READ_UEN_UBL_04.
            lo_edoc_eu_db->if_edocument_eu_db~select_edoeubupa(
              EXPORTING
                iv_partner_id   = iv_partner
                iv_partner_type = 'P'
              RECEIVING
                rs_edoeubupa    = ls_edoeubupa ).
            lv_party_id_type = ls_edoeubupa-party_id_type.
          END-TEST-SEAM.

          CASE lv_party_id_type.
            WHEN 'SG:UEN'.
              CONCATENATE 'SGUEN' ev_party_id INTO ev_party_id.
            WHEN 'SG:UXN'.
              CONCATENATE 'SGUXN' ev_party_id INTO ev_party_id.
          ENDCASE.
        ENDIF.
      ENDIF.
*  End of Note 3326386

*  Vendor
    ELSEIF iv_lifnr IS SUPPLIED.                                    "3210223
      IF NOT ms_vendor-stcd3 IS INITIAL.                            "3210223
        ev_party_id = ms_vendor-stcd3.                              "3210223

*  Start of Note 3326386
        " For non production systems/clients, add prefix SGTST
        " For production systems/clients, add prefix according to party ID types
        IF lv_prefix_mode NE 'P'.
          CONCATENATE 'SGTST' ev_party_id INTO ev_party_id.
          CONDENSE ev_party_id.
        ELSE.

          TEST-SEAM READ_UEN_UBL_05.
            lo_edoc_eu_db->if_edocument_eu_db~select_edoeubupa(
              EXPORTING
                iv_partner_id   = iv_lifnr
                iv_partner_type = 'V'
              RECEIVING
                rs_edoeubupa    = ls_edoeubupa ).
            lv_party_id_type = ls_edoeubupa-party_id_type.
          END-TEST-SEAM.

          CASE lv_party_id_type.
            WHEN 'SG:UEN'.
              CONCATENATE 'SGUEN' ev_party_id INTO ev_party_id.
            WHEN 'SG:UXN'.
              CONCATENATE 'SGUXN' ev_party_id INTO ev_party_id.
          ENDCASE.
        ENDIF.
*  End of Note 3326386

      ELSE.                                                         "3210223
        MESSAGE e120(edocument_eu) WITH iv_lifnr INTO cl_edocument=>gv_error_txt.    "3210223
        cl_edocument=>raise_edoc_exception( ).                                       "3210223
      ENDIF.                                                        "3210223
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_UEN' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD read_vat_number.
    TYPES: BEGIN OF ty_but020,
             addrnumber      TYPE but020-addrnumber,
             addr_valid_from TYPE but020-addr_valid_from,
           END OF ty_but020.

    DATA: lv_taxtype      TYPE bptaxtype,
          lv_taxnum       TYPE bptaxnum,
          lt_but020       TYPE TABLE OF ty_but020,
          ls_but020       TYPE ty_but020,
          lv_partner_guid TYPE bu_partner_guid,             "2839436
          lv_partner      TYPE bu_partner,                  "2839436
          lv_country      TYPE land1.

    CLEAR ev_party_id.

    IF iv_bukrs IS SUPPLIED.
      TEST-SEAM read_vat_number_01.
        SELECT SINGLE stceg
          INTO ev_party_id
          FROM t001
          WHERE bukrs = iv_bukrs.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e008(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_kunnr IS SUPPLIED.
* Start of Change 2839436 "2854416 del
      TEST-SEAM read_vat_number_02.
        ev_party_id = ms_kna1-stceg.                                "3042934
      END-TEST-SEAM.
      IF ev_party_id IS INITIAL.
        MESSAGE e008(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
* End of Change 2839436 "2854416 del
    ELSEIF iv_lifnr IS SUPPLIED.
      TEST-SEAM read_vat_number_03.
        SELECT SINGLE stceg
          INTO ev_party_id
          FROM lfa1
          WHERE lifnr = iv_lifnr.
      END-TEST-SEAM.
      IF sy-subrc <> 0.
        MESSAGE e008(edocument_eu) INTO cl_edocument=>gv_error_txt.
        cl_edocument=>raise_edoc_exception( ).
      ENDIF.
    ELSEIF iv_partner IS SUPPLIED.
*     the VAT tax type is considered to be the country code followed by 0 (ex: BE0, DE0, NL0)
*     determine the partner address in order to take the country code of the partner
* Start of Change 2839436
      read_vat_number_for_partner(
        EXPORTING
          iv_partner = iv_partner
        IMPORTING
          ev_taxnum = lv_taxnum ).
      ev_party_id = lv_taxnum.
* End of Change 2839436
    ELSE.
      MESSAGE e007(edocument_eu) WITH 'READ_VAT_NUMBER' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


  METHOD read_vat_number_for_partner. "Added with SAP Note 2839436

    TYPES: BEGIN OF ty_but020,
             addrnumber      TYPE but020-addrnumber,
             addr_valid_from TYPE but020-addr_valid_from,
           END OF ty_but020.

    DATA: lv_taxtype TYPE bptaxtype,
          lv_taxnum  TYPE bptaxnum,
          lt_but020  TYPE TABLE OF ty_but020,
          ls_but020  TYPE ty_but020,
          lv_country TYPE land1.

    CLEAR ev_taxnum.
"   Start of Change 3042934
    TEST-SEAM read_vat_number_for_partner_01.
    get_country_for_partner(
      EXPORTING
        iv_partner = iv_partner
      IMPORTING
        ev_country  = lv_country ).
    END-TEST-SEAM.
"   End of Change 3042934
    IF lv_country IS NOT INITIAL.
      CONCATENATE lv_country '0' INTO lv_taxtype.
      determine_taxnumber_by_type(
        EXPORTING
          iv_partner = iv_partner
          iv_taxtype = lv_taxtype
        IMPORTING
          ev_taxnum  = lv_taxnum ) .
      ev_taxnum = lv_taxnum.
    ENDIF.
  ENDMETHOD.


  METHOD REMOVE_VAT_TAX_IDS.                              "2927542
    DATA lv_vat TYPE edoc_field_value.
    lv_vat = get_fix_value( iv_name        = 'TAX_SCHEME_ID'
                            iv_err_msg_ind = abap_true ).
*    For tax exempt code O we are not allowed to have VAT tax id
    DELETE cs_accounting_supplier_party-party-party_tax_scheme
      WHERE tax_scheme-id-base-base-content = lv_vat.

    DELETE cs_accounting_customer_party-party-party_tax_scheme
      WHERE tax_scheme-id-base-base-content = lv_vat.

    DELETE cs_tax_representative_party-party_tax_scheme
      WHERE tax_scheme-id-base-base-content = lv_vat.
  ENDMETHOD.
ENDCLASS.

class CL_EDOCUMENT_EU_DB definition
  public
  inheriting from CL_EDOCUMENT_DB
  final
  create public .

public section.

  interfaces IF_EDOCUMENT_EU_DB .
protected section.

  methods RESULT_MODIFY_EDOEUINV
    importing
      !IV_SUBRC type SY-SUBRC
      !IS_EDOEUINV type EDOEUINV
    exceptions
      CX_EDOCUMENT .
  methods RESULT_MODIFY_EDOEUINVIN
    importing
      !IV_SUBRC type SY-SUBRC
      !IS_EDOEUINVIN type EDOEUINVIN
    raising
      CX_EDOCUMENT .
private section.
ENDCLASS.



CLASS CL_EDOCUMENT_EU_DB IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~MODIFY_EDOEUBUPADOCTYP
* +-------------------------------------------------------------------------------------------------+
* | [--->] IS_EDOEUBUPADOCTYP             TYPE        EDOEUBUPADOCTYP
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~modify_edoeubupadoctyp.
    TEST-SEAM modify_edoeubupadoctyp01.
    MODIFY edoeubupadoctyp FROM is_edoeubupadoctyp.
    END-TEST-SEAM.
    IF sy-subrc NE 0.
      MESSAGE e007(edocument) WITH 'EDOEUBUPADOCTYP' INTO cl_edocument=>gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~MODIFY_EDOEUINV
* +-------------------------------------------------------------------------------------------------+
* | [--->] IS_EDOEUINV                    TYPE        EDOEUINV
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method IF_EDOCUMENT_EU_DB~MODIFY_EDOEUINV.
    "begin of 3365100
    MODIFY edoeuinv FROM is_edoeuinv.
    IF sy-subrc NE 0.
      MESSAGE e007(edocument) WITH 'EDOEUINV' INTO gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.
*    result_modify_edoeuinv( iv_subrc = sy-subrc is_edoeuinv = is_edoeuinv ).
    "end of 3365100
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~MODIFY_EDOEUINVIN
* +-------------------------------------------------------------------------------------------------+
* | [--->] IS_EDOEUINVIN                  TYPE        EDOEUINVIN
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~modify_edoeuinvin.
    "begin of 3328617
    MODIFY edoeuinvin FROM is_edoeuinvin.
    result_modify_edoeuinvin( iv_subrc = sy-subrc is_edoeuinvin = is_edoeuinvin ).
    "end of 3328617
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~MODIFY_EDOEUPREVIEW
* +-------------------------------------------------------------------------------------------------+
* | [--->] IS_EDOEUPREVIEW                TYPE        EDOEUPREVIEW
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~modify_edoeupreview.
    TEST-SEAM MODIFY_EDOEUPREVIEW01.
    MODIFY edoeupreview FROM is_edoeupreview.
    END-TEST-SEAM.
    IF sy-subrc NE 0.
      MESSAGE e007(edocument) WITH 'EDOEUPREVIEW' INTO gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUBANKACC
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_BUKRS                       TYPE        BUKRS
* | [--->] IV_PAY_MEANS                   TYPE        EDOC_EU_PAYM_MEANS
* | [<-()] RT_EDOEUBANKACC                TYPE        EDOEUBANKACC_T
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeubankacc.

    CLEAR rt_edoeubankacc.
    IF iv_pay_means IS INITIAL.                             " 2905102
      SELECT *
       FROM edoeubankacc
       INTO TABLE rt_edoeubankacc
       WHERE bukrs = iv_bukrs.                              "2905102
    ELSE.
      SELECT *                                              "2883715
      FROM edoeubankacc
      INTO TABLE rt_edoeubankacc
      WHERE bukrs = iv_bukrs
      AND paym_means = iv_pay_means.
    ENDIF.                                                  "2883715


  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUBUPA
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_PARTNER_ID                  TYPE        EDOC_PARTNER_ID
* | [--->] IV_PARTNER_TYPE                TYPE        EDOC_PARTNER_TYPE
* | [--->] IV_COMM_CHANNEL                TYPE        EDOC_EU_COMM_CHANNEL(optional)
* | [<-()] RS_EDOEUBUPA                   TYPE        EDOEUBUPA
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeubupa.

    CLEAR rs_edoeubupa .
    SELECT SINGLE * FROM edoeubupa INTO rs_edoeubupa
      WHERE partner_id = iv_partner_id
      AND partner_type = iv_partner_type.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUBUPADOCTYP
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_PARTNER_ID                  TYPE        EDOC_PARTNER_ID
* | [--->] IV_PARTNER_TYPE                TYPE        EDOC_PARTNER_TYPE
* | [--->] IV_DOC_CATEG                   TYPE        EDOC_EU_DOC_CATEGORY
* | [<-()] RS_EDOEUBUPADOCTYP             TYPE        EDOEUBUPADOCTYP
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeubupadoctyp.

    CLEAR rs_edoeubupadoctyp.
    SELECT SINGLE * FROM edoeubupadoctyp INTO rs_edoeubupadoctyp
      WHERE partner_id = iv_partner_id
        AND partner_type = iv_partner_type
        AND doc_categ = iv_doc_categ.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUCOMP
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_BUKRS                       TYPE        BUKRS
* | [--->] IV_COMM_CHANNEL                TYPE        EDOC_EU_COMM_CHANNEL (default ='')
* | [<-()] RS_EDOEUCOMP                   TYPE        EDOEUCOMP
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeucomp.


    CLEAR rs_edoeucomp.
    SELECT SINGLE * FROM edoeucomp INTO rs_edoeucomp
      WHERE bukrs        = iv_bukrs
        AND comm_channel = iv_comm_channel. "3365100

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUCUST
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_KUNNR                       TYPE        KUNNR
* | [<-()] RS_EDOEUCUST                   TYPE        EDOEUCUST
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeucust.

    CLEAR rs_edoeucust.
    SELECT SINGLE * FROM edoeucust INTO rs_edoeucust
      WHERE kunnr = iv_kunnr.


  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUDOCTYPE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_EDOC_TYPE                   TYPE        EDOC_TYPE
* | [<-()] RT_EDOEUEDOCTYPE               TYPE        EDOEUDOCTYPE_T
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeudoctype.

    REFRESH rt_edoeuedoctype.
    SELECT * FROM edoeudoctype INTO TABLE rt_edoeuedoctype
      WHERE edoc_type = iv_edoc_type.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUDOCTYPEID
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_DOC_TYPE_ID                 TYPE        EDOC_EU_DOC_TYPE_ID
* | [<-()] RS_EDOEUEDOCTYPEID             TYPE        EDOEUDOCTYPEID
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeudoctypeid.

    CLEAR rs_edoeuedoctypeid.
    SELECT SINGLE * FROM edoeudoctypeid
      INTO rs_edoeuedoctypeid
      WHERE doc_type_id = iv_doc_type_id.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUDOCTYPEID_DOC_TYPE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_DOC_TYPE                    TYPE        EDOC_EU_DOC_TYPE
* | [<-()] RS_EDOEUEDOCTYPEID             TYPE        EDOEUDOCTYPEID
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeudoctypeid_doc_type. "Added with 3109533

    CLEAR rs_edoeuedoctypeid.
    SELECT SINGLE * FROM edoeudoctypeid
      INTO rs_edoeuedoctypeid
      WHERE doc_type = iv_doc_type.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUDOCTYPE_DOCTYPE_ID
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_DOC_TYPE_ID                 TYPE        EDOC_EU_DOC_TYPE_ID
* | [<-()] RT_EDOEUEDOCTYPE               TYPE        EDOEUDOCTYPE_T
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeudoctype_doctype_id. "Added with 3109533

    CLEAR rt_edoeuedoctype.
    SELECT * FROM edoeudoctype INTO TABLE rt_edoeuedoctype
      WHERE doc_type_id = iv_doc_type_id.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUINV
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_EDOC_GUID                   TYPE        EDOC_GUID
* | [<-()] RS_EDOEUINV                    TYPE        EDOEUINV
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method IF_EDOCUMENT_EU_DB~SELECT_EDOEUINV.
    "begin of 3365100
    CLEAR: rs_edoeuinv.
    SELECT SINGLE * FROM edoeuinv INTO rs_edoeuinv WHERE edoc_guid = iv_edoc_guid.
    "end of 3365100
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUINVIN
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_EDOC_GUID                   TYPE        EDOC_GUID
* | [<-()] RS_EDOEUINVIN                  TYPE        EDOEUINVIN
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeuinvin.
    "begin of 3328617
    CLEAR: rs_edoeuinvin.
    SELECT SINGLE * FROM edoeuinvin INTO rs_edoeuinvin WHERE edoc_guid = iv_edoc_guid.
    "end of 3328617
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUPARTY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_PARTY_ID_TYPE               TYPE        EDOC_PARTY_ID_TYPE
* | [<-()] RS_EDOEUPARTY                  TYPE        EDOEUPARTY
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeuparty.

    CLEAR rs_edoeuparty.
    SELECT SINGLE * FROM edoeuparty INTO rs_edoeuparty
      WHERE party_id_type = iv_party_id_type.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUPARTY_PARTY_CODE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_PARTY_CODE_TYPE             TYPE        EDOC_PARTY_CODE_TYPE
* | [<-()] RS_EDOEUPARTY                  TYPE        EDOEUPARTY
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeuparty_party_code.
    CLEAR rs_edoeuparty.

    SELECT SINGLE *
         FROM edoeuparty
         INTO rs_edoeuparty
         WHERE party_code_type = iv_party_code_type.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method CL_EDOCUMENT_EU_DB->IF_EDOCUMENT_EU_DB~SELECT_EDOEUPREVIEW
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_EDOC_GUID                   TYPE        EDOC_GUID
* | [<-()] RS_EDOEUPREVIEW                TYPE        EDOEUPREVIEW
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD if_edocument_eu_db~select_edoeupreview.

    CLEAR rs_edoeupreview.

    SELECT SINGLE * FROM edoeupreview
                    INTO rs_edoeupreview
                    WHERE edoc_guid = iv_edoc_guid.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOCUMENT_EU_DB->RESULT_MODIFY_EDOEUINV
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_SUBRC                       TYPE        SY-SUBRC
* | [--->] IS_EDOEUINV                    TYPE        EDOEUINV
* | [EXC!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method RESULT_MODIFY_EDOEUINV.
*    IF iv_subrc NE 0.
*      MESSAGE e007(edocument) WITH 'EDOEUINV' INTO gv_error_txt.
*      cl_edocument=>raise_edoc_exception( ).
*    ENDIF.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method CL_EDOCUMENT_EU_DB->RESULT_MODIFY_EDOEUINVIN
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_SUBRC                       TYPE        SY-SUBRC
* | [--->] IS_EDOEUINVIN                  TYPE        EDOEUINVIN
* | [!CX!] CX_EDOCUMENT
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD result_modify_edoeuinvin.
    IF iv_subrc NE 0.
      MESSAGE e007(edocument) WITH 'EDOEUINVIN' INTO gv_error_txt.
      cl_edocument=>raise_edoc_exception( ).
    ENDIF.
  ENDMETHOD.
ENDCLASS.