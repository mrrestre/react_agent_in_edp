meta {
  name: Get OAuth token (own IDP)
  type: http
  seq: 1
}

post {
  url: https://avwdtzh35.accounts400.ondemand.com/oauth2/token?grant_type=client_credentials
  body: none
  auth: basic
}

params:query {
  grant_type: client_credentials
}

headers {
  Content-Type: application/x-www-form-urlencoded
  Accept: application/json
}

auth:basic {
  username: {{client_id}}
  password: {{client_secret}}
}

tests {
  test("Status code is 200", () => {
      expect(res.getStatus()).to.equal(200);
  });
  
  if (res.getStatus() != 200) {
      bru.runner.stopExecution();
      throw new Error(`Step failed with http status ` + res.getStatus());
  }
  
  test("OAuth token granted", () => {
      const { access_token } = res.getBody();
      expect(access_token).to.exist;
      bru.setEnvVar("drcceAiToken", access_token);
  })
}
